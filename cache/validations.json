{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "11953e8f3a67eb73209b7fcb0d1b95ed7e9c588586563fb0ff6dd8cc221ceefd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f0fa64385ca28038911a9b8db894da62e990bd777bcce13a98382f11d748f48d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "76f44b5d896e4b9252ad829cbe7b0d05e2ff8ff358fb7ecc3191f7b5a7750d5e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "b9c3c8609cdad193923f6f3bb05634524bc29b75f53f9ece9638cc4c50a1dbd1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/KyberClassic/Coin98KyberClassicStatic.sol:Coin98KyberClassicStatic": {
        "src": "contracts/KyberClassic/Coin98KyberClassicStatic.sol:10",
        "version": {
          "withMetadata": "78fcce29260a87b9e9ff9231c08196789cadfdc8b4aed7718e3ede0ff0f35c1f",
          "withoutMetadata": "9ce0ee465dec9c780270e7a37a1a19d245c6af2d33bfcdd9efe4757078a67e91",
          "linkedWithoutMetadata": "9ce0ee465dec9c780270e7a37a1a19d245c6af2d33bfcdd9efe4757078a67e91"
        },
        "inherit": [
          "contracts/KyberClassic/KyberClassicStatic.sol:KyberSwapClassicStatic"
        ],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/KyberClassic/Coin98KyberClassicStatic.sol:pairSwap": {
        "src": "contracts/KyberClassic/Coin98KyberClassicStatic.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/KyberClassic/KyberClassicStatic.sol:KyberSwapClassicStatic": {
        "src": "contracts/KyberClassic/KyberClassicStatic.sol:8",
        "version": {
          "withMetadata": "0a8691399cf12647704eb31757f15457c097fd28622d39ce2b8864758ac954a2",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IKyberSwapV1Static.sol:IKyberSwapV1Static": {
        "src": "contracts/interface/IKyberSwapV1Static.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],contract IERC20[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactTokensForTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],contract IERC20[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],contract IERC20[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "1cca05a314d7a750e179692a053f1b2e220b8d3e8bbf70eca6c91b734d29b07e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "11953e8f3a67eb73209b7fcb0d1b95ed7e9c588586563fb0ff6dd8cc221ceefd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f0fa64385ca28038911a9b8db894da62e990bd777bcce13a98382f11d748f48d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "76f44b5d896e4b9252ad829cbe7b0d05e2ff8ff358fb7ecc3191f7b5a7750d5e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DoDoV2/Coin98DoDoV2.sol:Coin98DoDoV2": {
        "src": "contracts/DoDoV2/Coin98DoDoV2.sol:7",
        "version": {
          "withMetadata": "510f5e80b230c480a3158933a086f187a042f46a612b2f70b679c6d6b2184877",
          "withoutMetadata": "e782fa3273ed3cb915630714343936a161c5283cb4cc3dd739401bfad4771a9e",
          "linkedWithoutMetadata": "e782fa3273ed3cb915630714343936a161c5283cb4cc3dd739401bfad4771a9e"
        },
        "inherit": [
          "contracts/DoDoV2/DoDoV2.sol:DoDoV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DoDoV2/DoDoV2.sol:DoDoV2": {
        "src": "contracts/DoDoV2/DoDoV2.sol:8",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "b9c3c8609cdad193923f6f3bb05634524bc29b75f53f9ece9638cc4c50a1dbd1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IDODOV2Proxy.sol:IDODOV2Proxy": {
        "src": "contracts/interface/IDODOV2Proxy.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "dodoSwapV2ETHToToken(address,uint256,address[],uint256,bool,uint256)",
          "dodoSwapV2TokenToETH(address,uint256,uint256,address[],uint256,bool,uint256)",
          "dodoSwapV2TokenToToken(address,address,uint256,uint256,address[],uint256,bool,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "1cca05a314d7a750e179692a053f1b2e220b8d3e8bbf70eca6c91b734d29b07e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "11953e8f3a67eb73209b7fcb0d1b95ed7e9c588586563fb0ff6dd8cc221ceefd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f0fa64385ca28038911a9b8db894da62e990bd777bcce13a98382f11d748f48d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "76f44b5d896e4b9252ad829cbe7b0d05e2ff8ff358fb7ecc3191f7b5a7750d5e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "b9c3c8609cdad193923f6f3bb05634524bc29b75f53f9ece9638cc4c50a1dbd1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:12",
        "version": {
          "withMetadata": "296a7bdd837cc2832c7a473ed51ed53c43b5cdb7054d966ea070d7baafb76975",
          "withoutMetadata": "57ce19fa8bd05d76cbf6910ee9359029ea65b0cacd0002deb4fbbebde77d8a0f",
          "linkedWithoutMetadata": "57ce19fa8bd05d76cbf6910ee9359029ea65b0cacd0002deb4fbbebde77d8a0f"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:pairSwap": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IOneInchPool.sol:IOneInchPool": {
        "src": "contracts/interface/IOneInchPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(address,address,uint256,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "1cca05a314d7a750e179692a053f1b2e220b8d3e8bbf70eca6c91b734d29b07e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/oneinch/Coin98OneInch.sol:Coin98ZeroxV2": {
        "src": "contracts/oneinch/Coin98OneInch.sol:6",
        "version": {
          "withMetadata": "175aeac51c1a6c1e545b2d7d29613cd33e35cb4dcfeb8cd6b244fc2d9db300a7",
          "withoutMetadata": "65645a338544fae545c7c67a62e8d641a88bbc046ee5a27cc6376493410657a8",
          "linkedWithoutMetadata": "65645a338544fae545c7c67a62e8d641a88bbc046ee5a27cc6376493410657a8"
        },
        "inherit": [
          "contracts/oneinch/OneInchPool.sol:OneInchPool"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/oneinch/OneInchPool.sol:OneInchPool": {
        "src": "contracts/oneinch/OneInchPool.sol:9",
        "version": {
          "withMetadata": "bf1e2db959b82464e95d4e3a8a1a9888a72075ad4a38a3adcaee5f3c8ecdebd6",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "11953e8f3a67eb73209b7fcb0d1b95ed7e9c588586563fb0ff6dd8cc221ceefd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f0fa64385ca28038911a9b8db894da62e990bd777bcce13a98382f11d748f48d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "76f44b5d896e4b9252ad829cbe7b0d05e2ff8ff358fb7ecc3191f7b5a7750d5e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV1/BalancerV1.sol:BalancerV1": {
        "src": "contracts/BalancerV1/BalancerV1.sol:9",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV1/Coin98BalancerV1.sol:Coin98BalancerV1": {
        "src": "contracts/BalancerV1/Coin98BalancerV1.sol:4",
        "version": {
          "withMetadata": "99ed7d84d1daf2b7be617b40990fe5755c590d83abf2013870a580cd7fe57422",
          "withoutMetadata": "819327aef61a36a51f0bc28912cddd021c1b9de9d801fcdcfaf831307d6b17ce",
          "linkedWithoutMetadata": "819327aef61a36a51f0bc28912cddd021c1b9de9d801fcdcfaf831307d6b17ce"
        },
        "inherit": [
          "contracts/BalancerV1/BalancerV1.sol:BalancerV1",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98BalancerV1",
            "src": "contracts/BalancerV1/Coin98BalancerV1.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/BalancerV2.sol:BalancerV2": {
        "src": "contracts/BalancerV2/BalancerV2.sol:5",
        "version": {
          "withMetadata": "4fc296eee1318c0be22e4545db5a29c17d25d57aad0e02fd78dde10582e0c37f",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/Coin98BalancerV2.sol:Coin98BalancerV2": {
        "src": "contracts/BalancerV2/Coin98BalancerV2.sol:4",
        "version": {
          "withMetadata": "3cf2a710dc27cb6f39394401b4b926003447900344eaaabed46af29239b9373f",
          "withoutMetadata": "9af3c8a5d2a3da08082afc9af11d01c1f43be280fbfee1fad2af84309d5fc7d9",
          "linkedWithoutMetadata": "9af3c8a5d2a3da08082afc9af11d01c1f43be280fbfee1fad2af84309d5fc7d9"
        },
        "inherit": [
          "contracts/BalancerV2/BalancerV2.sol:BalancerV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:Executor": {
        "src": "contracts/Executor.sol:14",
        "version": {
          "withMetadata": "67ab7c65c7f616cc9975454df6d4b9a9980b81905a5dcfd76858e29a4b5588d6",
          "withoutMetadata": "89b8150b6fb2e3eb32c8df83eff0a038234024d65010db2fb83ed7a9cc5215f7",
          "linkedWithoutMetadata": "89b8150b6fb2e3eb32c8df83eff0a038234024d65010db2fb83ed7a9cc5215f7"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "execution(bytes,address,address)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/Executor.sol:57"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/Executor.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:SwapAdaptor": {
        "src": "contracts/Executor.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "b9c3c8609cdad193923f6f3bb05634524bc29b75f53f9ece9638cc4c50a1dbd1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/KyberClassic/Coin98KyberClassicStatic.sol:Coin98KyberClassicStatic": {
        "src": "contracts/KyberClassic/Coin98KyberClassicStatic.sol:10",
        "version": {
          "withMetadata": "388e3cb96b8f41f0066b92878c59ba6c1ba01916cf1ec1775135996153094fe4",
          "withoutMetadata": "9ce0ee465dec9c780270e7a37a1a19d245c6af2d33bfcdd9efe4757078a67e91",
          "linkedWithoutMetadata": "9ce0ee465dec9c780270e7a37a1a19d245c6af2d33bfcdd9efe4757078a67e91"
        },
        "inherit": [
          "contracts/KyberClassic/KyberClassicStatic.sol:KyberSwapClassicStatic"
        ],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/KyberClassic/Coin98KyberClassicStatic.sol:pairSwap": {
        "src": "contracts/KyberClassic/Coin98KyberClassicStatic.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/KyberClassic/KyberClassicStatic.sol:KyberSwapClassicStatic": {
        "src": "contracts/KyberClassic/KyberClassicStatic.sol:8",
        "version": {
          "withMetadata": "0a8691399cf12647704eb31757f15457c097fd28622d39ce2b8864758ac954a2",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/UniswapV3/Coin98UniswapV3.sol:Coin98UniswapV3": {
        "src": "contracts/UniswapV3/Coin98UniswapV3.sol:6",
        "version": {
          "withMetadata": "5e278e7e9150e46e818cf64cab222157e68a273ff2a070ca6eee77f81eb132ca",
          "withoutMetadata": "dfa230e8be99ab3d6fc95610f33e24029715b22267e2ee9d89bda79324dc2e8f",
          "linkedWithoutMetadata": "dfa230e8be99ab3d6fc95610f33e24029715b22267e2ee9d89bda79324dc2e8f"
        },
        "inherit": [
          "contracts/UniswapV3/UniswapV3.sol:UniswapV3"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/UniswapV3/UniswapV3.sol:UniswapV3": {
        "src": "contracts/UniswapV3/UniswapV3.sol:9",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IAsset.sol:IAsset": {
        "src": "contracts/interface/IAsset.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerPool.sol:IBalancerPool": {
        "src": "contracts/interface/IBalancerPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactAmountIn(address,uint256,address,uint256,uint256)",
          "swapExactAmountOut(address,uint256,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerProxy.sol:IBalancerProxy": {
        "src": "contracts/interface/IBalancerProxy.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "batchSwapExactIn(struct IBalancerProxy.Swap[],address,address,uint256,uint256)",
          "batchSwapExactOut(struct IBalancerProxy.Swap[],address,address,uint256)",
          "batchEthInSwapExactIn(struct IBalancerProxy.Swap[],address,uint256)",
          "batchEthOutSwapExactIn(struct IBalancerProxy.Swap[],address,uint256,uint256)",
          "batchEthInSwapExactOut(struct IBalancerProxy.Swap[],address)",
          "batchEthOutSwapExactOut(struct IBalancerProxy.Swap[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerV2.sol:IBalancerV2": {
        "src": "contracts/interface/IBalancerV2.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address payable,bool),uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IKyberSwapV1Static.sol:IKyberSwapV1Static": {
        "src": "contracts/interface/IKyberSwapV1Static.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],contract IERC20[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactTokensForTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],contract IERC20[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],contract IERC20[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ISwapRouterUniV3.sol:ISwapRouterUniV3": {
        "src": "contracts/interface/ISwapRouterUniV3.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETH.sol:IWETH": {
        "src": "contracts/interface/IWETH.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "1cca05a314d7a750e179692a053f1b2e220b8d3e8bbf70eca6c91b734d29b07e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/utils/WethProvider.sol:WethProvider": {
        "src": "contracts/utils/WethProvider.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethProvider",
            "src": "contracts/utils/WethProvider.sol:7"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts/utils/WethProvider.sol:5"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "11953e8f3a67eb73209b7fcb0d1b95ed7e9c588586563fb0ff6dd8cc221ceefd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f0fa64385ca28038911a9b8db894da62e990bd777bcce13a98382f11d748f48d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "76f44b5d896e4b9252ad829cbe7b0d05e2ff8ff358fb7ecc3191f7b5a7750d5e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "b9c3c8609cdad193923f6f3bb05634524bc29b75f53f9ece9638cc4c50a1dbd1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/KyberClassic/Coin98KyberClassicStatic.sol:Coin98KyberClassicStatic": {
        "src": "contracts/KyberClassic/Coin98KyberClassicStatic.sol:10",
        "version": {
          "withMetadata": "902e33598f56ddf6ab0bb0b26fe1b0fe79f36e9a8eb358ec9d71756d98e17b80",
          "withoutMetadata": "9ce0ee465dec9c780270e7a37a1a19d245c6af2d33bfcdd9efe4757078a67e91",
          "linkedWithoutMetadata": "9ce0ee465dec9c780270e7a37a1a19d245c6af2d33bfcdd9efe4757078a67e91"
        },
        "inherit": [
          "contracts/KyberClassic/KyberClassicStatic.sol:KyberSwapClassicStatic"
        ],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/KyberClassic/Coin98KyberClassicStatic.sol:pairSwap": {
        "src": "contracts/KyberClassic/Coin98KyberClassicStatic.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/KyberClassic/KyberClassicStatic.sol:KyberSwapClassicStatic": {
        "src": "contracts/KyberClassic/KyberClassicStatic.sol:8",
        "version": {
          "withMetadata": "0a8691399cf12647704eb31757f15457c097fd28622d39ce2b8864758ac954a2",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IKyberSwapV1Static.sol:IKyberSwapV1Static": {
        "src": "contracts/interface/IKyberSwapV1Static.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],contract IERC20[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactTokensForTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],contract IERC20[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],contract IERC20[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "1cca05a314d7a750e179692a053f1b2e220b8d3e8bbf70eca6c91b734d29b07e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "11953e8f3a67eb73209b7fcb0d1b95ed7e9c588586563fb0ff6dd8cc221ceefd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f0fa64385ca28038911a9b8db894da62e990bd777bcce13a98382f11d748f48d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "76f44b5d896e4b9252ad829cbe7b0d05e2ff8ff358fb7ecc3191f7b5a7750d5e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "b9c3c8609cdad193923f6f3bb05634524bc29b75f53f9ece9638cc4c50a1dbd1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/KyberClassic/Coin98KyberClassicStatic.sol:Coin98KyberClassicStatic": {
        "src": "contracts/KyberClassic/Coin98KyberClassicStatic.sol:10",
        "version": {
          "withMetadata": "88b9de7c5ac2587cbc6a75c8ba52ceeae2be54fe10ed5b377f4b1e8c9739c2b0",
          "withoutMetadata": "b3b2dc078ca77dc897560933793bf7430137b02996417cd85a32f926d0e8d45a",
          "linkedWithoutMetadata": "b3b2dc078ca77dc897560933793bf7430137b02996417cd85a32f926d0e8d45a"
        },
        "inherit": [
          "contracts/KyberClassic/KyberClassicStatic.sol:KyberSwapClassicStatic"
        ],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/KyberClassic/Coin98KyberClassicStatic.sol:pairSwap": {
        "src": "contracts/KyberClassic/Coin98KyberClassicStatic.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/KyberClassic/KyberClassicStatic.sol:KyberSwapClassicStatic": {
        "src": "contracts/KyberClassic/KyberClassicStatic.sol:8",
        "version": {
          "withMetadata": "0a8691399cf12647704eb31757f15457c097fd28622d39ce2b8864758ac954a2",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IKyberSwapV1Static.sol:IKyberSwapV1Static": {
        "src": "contracts/interface/IKyberSwapV1Static.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],contract IERC20[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactTokensForTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],contract IERC20[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],contract IERC20[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "1cca05a314d7a750e179692a053f1b2e220b8d3e8bbf70eca6c91b734d29b07e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "11953e8f3a67eb73209b7fcb0d1b95ed7e9c588586563fb0ff6dd8cc221ceefd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f0fa64385ca28038911a9b8db894da62e990bd777bcce13a98382f11d748f48d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "76f44b5d896e4b9252ad829cbe7b0d05e2ff8ff358fb7ecc3191f7b5a7750d5e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "b9c3c8609cdad193923f6f3bb05634524bc29b75f53f9ece9638cc4c50a1dbd1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/KyberClassic/Coin98KyberClassicStatic.sol:Coin98KyberClassicStatic": {
        "src": "contracts/KyberClassic/Coin98KyberClassicStatic.sol:10",
        "version": {
          "withMetadata": "f506003cfc2a1aeeec477055bfa9241d5443e7ba7c09c849e8005f275f32521a",
          "withoutMetadata": "b3b2dc078ca77dc897560933793bf7430137b02996417cd85a32f926d0e8d45a",
          "linkedWithoutMetadata": "b3b2dc078ca77dc897560933793bf7430137b02996417cd85a32f926d0e8d45a"
        },
        "inherit": [
          "contracts/KyberClassic/KyberClassicStatic.sol:KyberSwapClassicStatic"
        ],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/KyberClassic/Coin98KyberClassicStatic.sol:pairSwap": {
        "src": "contracts/KyberClassic/Coin98KyberClassicStatic.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/KyberClassic/KyberClassicStatic.sol:KyberSwapClassicStatic": {
        "src": "contracts/KyberClassic/KyberClassicStatic.sol:8",
        "version": {
          "withMetadata": "962629098e28422c1c07e5d1aca493d6d4ec300da013b9e3ff127e3297bc7562",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IKyberSwapV1Static.sol:IKyberSwapV1Static": {
        "src": "contracts/interface/IKyberSwapV1Static.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],contract IERC20[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactTokensForTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],contract IERC20[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],contract IERC20[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "1cca05a314d7a750e179692a053f1b2e220b8d3e8bbf70eca6c91b734d29b07e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "11953e8f3a67eb73209b7fcb0d1b95ed7e9c588586563fb0ff6dd8cc221ceefd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f0fa64385ca28038911a9b8db894da62e990bd777bcce13a98382f11d748f48d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "76f44b5d896e4b9252ad829cbe7b0d05e2ff8ff358fb7ecc3191f7b5a7750d5e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "b9c3c8609cdad193923f6f3bb05634524bc29b75f53f9ece9638cc4c50a1dbd1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/KyberClassic/Coin98KyberClassicStatic.sol:Coin98KyberClassicStatic": {
        "src": "contracts/KyberClassic/Coin98KyberClassicStatic.sol:10",
        "version": {
          "withMetadata": "621403e096c3efa43678c5f7b75c3fe37fc146e19998486630576048f763f4dc",
          "withoutMetadata": "b3b2dc078ca77dc897560933793bf7430137b02996417cd85a32f926d0e8d45a",
          "linkedWithoutMetadata": "b3b2dc078ca77dc897560933793bf7430137b02996417cd85a32f926d0e8d45a"
        },
        "inherit": [
          "contracts/KyberClassic/KyberClassicStatic.sol:KyberSwapClassicStatic"
        ],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/KyberClassic/Coin98KyberClassicStatic.sol:pairSwap": {
        "src": "contracts/KyberClassic/Coin98KyberClassicStatic.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/KyberClassic/KyberClassicStatic.sol:KyberSwapClassicStatic": {
        "src": "contracts/KyberClassic/KyberClassicStatic.sol:8",
        "version": {
          "withMetadata": "f3a67c2d4834d6886c79675819750fbb85dc5c02b96a4e2090bb1135074384e1",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IKyberSwapV1Static.sol:IKyberSwapV1Static": {
        "src": "contracts/interface/IKyberSwapV1Static.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],contract IERC20[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactTokensForTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],contract IERC20[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],contract IERC20[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "1cca05a314d7a750e179692a053f1b2e220b8d3e8bbf70eca6c91b734d29b07e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "11953e8f3a67eb73209b7fcb0d1b95ed7e9c588586563fb0ff6dd8cc221ceefd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f0fa64385ca28038911a9b8db894da62e990bd777bcce13a98382f11d748f48d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "76f44b5d896e4b9252ad829cbe7b0d05e2ff8ff358fb7ecc3191f7b5a7750d5e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DoDoV2/Coin98DoDoV2.sol:Coin98DoDoV2": {
        "src": "contracts/DoDoV2/Coin98DoDoV2.sol:7",
        "version": {
          "withMetadata": "4c7d175cc5bffb2122f621715a987d956245b14380cdcefe95e6d215f6f86142",
          "withoutMetadata": "e782fa3273ed3cb915630714343936a161c5283cb4cc3dd739401bfad4771a9e",
          "linkedWithoutMetadata": "e782fa3273ed3cb915630714343936a161c5283cb4cc3dd739401bfad4771a9e"
        },
        "inherit": [
          "contracts/DoDoV2/DoDoV2.sol:DoDoV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DoDoV2/DoDoV2.sol:DoDoV2": {
        "src": "contracts/DoDoV2/DoDoV2.sol:8",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "b9c3c8609cdad193923f6f3bb05634524bc29b75f53f9ece9638cc4c50a1dbd1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/KyberClassic/Coin98KyberClassicStatic.sol:Coin98KyberClassicStatic": {
        "src": "contracts/KyberClassic/Coin98KyberClassicStatic.sol:10",
        "version": {
          "withMetadata": "0d3e7acae7800cebe51d07da4fd9be24646a09191c5a69ee4aac71ed2bdaf106",
          "withoutMetadata": "b3b2dc078ca77dc897560933793bf7430137b02996417cd85a32f926d0e8d45a",
          "linkedWithoutMetadata": "b3b2dc078ca77dc897560933793bf7430137b02996417cd85a32f926d0e8d45a"
        },
        "inherit": [
          "contracts/KyberClassic/KyberClassicStatic.sol:KyberSwapClassicStatic"
        ],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/KyberClassic/Coin98KyberClassicStatic.sol:pairSwap": {
        "src": "contracts/KyberClassic/Coin98KyberClassicStatic.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/KyberClassic/KyberClassicStatic.sol:KyberSwapClassicStatic": {
        "src": "contracts/KyberClassic/KyberClassicStatic.sol:8",
        "version": {
          "withMetadata": "ed410aadbf2b91eeedc3b5986d04a4ed72e1d7b0d563c5d3e13718391fed0054",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IDODOV2Proxy.sol:IDODOV2Proxy": {
        "src": "contracts/interface/IDODOV2Proxy.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "dodoSwapV2ETHToToken(address,uint256,address[],uint256,bool,uint256)",
          "dodoSwapV2TokenToETH(address,uint256,uint256,address[],uint256,bool,uint256)",
          "dodoSwapV2TokenToToken(address,address,uint256,uint256,address[],uint256,bool,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IKyberSwapV1Static.sol:IKyberSwapV1Static": {
        "src": "contracts/interface/IKyberSwapV1Static.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],contract IERC20[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactTokensForTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],contract IERC20[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],contract IERC20[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],contract IERC20[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "1cca05a314d7a750e179692a053f1b2e220b8d3e8bbf70eca6c91b734d29b07e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "17b297cef34f6f78217448cd9a6a785b6ed743c25dcf719bd3b8f89287f99d38",
          "withoutMetadata": "8c273a08604f9961d3dd4eef65f98472c7c9ad080b52a03a40f177c856c6c890",
          "linkedWithoutMetadata": "8c273a08604f9961d3dd4eef65f98472c7c9ad080b52a03a40f177c856c6c890"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "11953e8f3a67eb73209b7fcb0d1b95ed7e9c588586563fb0ff6dd8cc221ceefd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f0fa64385ca28038911a9b8db894da62e990bd777bcce13a98382f11d748f48d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "76f44b5d896e4b9252ad829cbe7b0d05e2ff8ff358fb7ecc3191f7b5a7750d5e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV2/Coin98ZeroxV2.sol:Coin98ZeroxV2": {
        "src": "contracts/0xV2/Coin98ZeroxV2.sol:6",
        "version": {
          "withMetadata": "a484571f4e88e60337a05fe28749b8eb37d53e0733690eafce78a68927169a6c",
          "withoutMetadata": "5c286a030d8bf557838ee1c7a903df236e4bf14c7213a9a49aa99df64fdae73f",
          "linkedWithoutMetadata": "5c286a030d8bf557838ee1c7a903df236e4bf14c7213a9a49aa99df64fdae73f"
        },
        "inherit": [
          "contracts/0xV2/ZeroxV2.sol:ZeroxV2",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address,address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98ZeroxV2",
            "src": "contracts/0xV2/Coin98ZeroxV2.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV2/LibOrderV2.sol:LibOrderV2": {
        "src": "contracts/0xV2/LibOrderV2.sol:4",
        "version": {
          "withMetadata": "bc9a6c4c9304a6e60356d9241da3a156cc63c2b42a041865ab409a0346f32ce0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV2/ZeroxV2.sol:ZeroxV2": {
        "src": "contracts/0xV2/ZeroxV2.sol:9",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "contracts/library/LibBytes.sol:LibBytes",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ZeroxV2",
            "src": "contracts/0xV2/ZeroxV2.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "erc20Proxy",
            "src": "contracts/0xV2/ZeroxV2.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV4/Coin98ZeroxV4.sol:Coin98ZeroxV4": {
        "src": "contracts/0xV4/Coin98ZeroxV4.sol:6",
        "version": {
          "withMetadata": "57f4870c0c2ec537490eade65088aaf2b736c88540bcc51b31964749dbe8112a",
          "withoutMetadata": "ac2d5bf4377642f6696c864f4345cf626e56d0a19394af3709575196cbb0d253",
          "linkedWithoutMetadata": "ac2d5bf4377642f6696c864f4345cf626e56d0a19394af3709575196cbb0d253"
        },
        "inherit": [
          "contracts/0xV4/ZeroxV4.sol:ZeroxV4"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV4/LibOrderV4.sol:LibOrderV4": {
        "src": "contracts/0xV4/LibOrderV4.sol:4",
        "version": {
          "withMetadata": "facc74890dd979fc109f4cadadf181280c6afc3b05d306400fd5d0b60023bd0e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV4/ZeroxV4.sol:ZeroxV4": {
        "src": "contracts/0xV4/ZeroxV4.sol:9",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AaveeV2/AaveeV2.sol:Aavee2": {
        "src": "contracts/AaveeV2/AaveeV2.sol:7",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Aavee2",
            "src": "contracts/AaveeV2/AaveeV2.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "refCode",
            "src": "contracts/AaveeV2/AaveeV2.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "lendingPool",
            "src": "contracts/AaveeV2/AaveeV2.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "wethGateway",
            "src": "contracts/AaveeV2/AaveeV2.sol:15"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AaveeV2/Coin98AaveeV2.sol:Coin98AaveeV2": {
        "src": "contracts/AaveeV2/Coin98AaveeV2.sol:6",
        "version": {
          "withMetadata": "90c72ad7bca2d12ff9105ee4822ad6f1dbb836cf4c8fe25d2e119b3508bb43ae",
          "withoutMetadata": "ee53b53dd2d278d44da8601626a708da0912bc678f6eedf71844126b38c48a0e",
          "linkedWithoutMetadata": "ee53b53dd2d278d44da8601626a708da0912bc678f6eedf71844126b38c48a0e"
        },
        "inherit": [
          "contracts/AaveeV2/AaveeV2.sol:Aavee2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(uint16,address,address)",
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98AaveeV2",
            "src": "contracts/AaveeV2/Coin98AaveeV2.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BUSD/BUSD.sol:BUSD": {
        "src": "contracts/BUSD/BUSD.sol:7",
        "version": {
          "withMetadata": "3b3e08ecb40fa2298a516296a762e15a65fdf67951113ee80b603733206329f6",
          "withoutMetadata": "da4dc9b2644bffdb3dc2fd4128872594b43c4adc32dbc931ebdf2392b63a4185",
          "linkedWithoutMetadata": "da4dc9b2644bffdb3dc2fd4128872594b43c4adc32dbc931ebdf2392b63a4185"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mintToken(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BUSD",
            "src": "contracts/BUSD/BUSD.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV1/BalancerV1.sol:BalancerV1": {
        "src": "contracts/BalancerV1/BalancerV1.sol:9",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV1/Coin98BalancerV1.sol:Coin98BalancerV1": {
        "src": "contracts/BalancerV1/Coin98BalancerV1.sol:4",
        "version": {
          "withMetadata": "4569a5b424f0aef378709cf87c6fa06f8bfda846ce8caf186ff0129f830a46b2",
          "withoutMetadata": "819327aef61a36a51f0bc28912cddd021c1b9de9d801fcdcfaf831307d6b17ce",
          "linkedWithoutMetadata": "819327aef61a36a51f0bc28912cddd021c1b9de9d801fcdcfaf831307d6b17ce"
        },
        "inherit": [
          "contracts/BalancerV1/BalancerV1.sol:BalancerV1",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98BalancerV1",
            "src": "contracts/BalancerV1/Coin98BalancerV1.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/BalancerV2.sol:BalancerV2": {
        "src": "contracts/BalancerV2/BalancerV2.sol:5",
        "version": {
          "withMetadata": "4fc296eee1318c0be22e4545db5a29c17d25d57aad0e02fd78dde10582e0c37f",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/Coin98BalancerV2.sol:Coin98BalancerV2": {
        "src": "contracts/BalancerV2/Coin98BalancerV2.sol:4",
        "version": {
          "withMetadata": "90655ae2d3a8bd34ce5f3f007a86a13a53d974be4d7b3fcbbc8ebaf299931c18",
          "withoutMetadata": "9af3c8a5d2a3da08082afc9af11d01c1f43be280fbfee1fad2af84309d5fc7d9",
          "linkedWithoutMetadata": "9af3c8a5d2a3da08082afc9af11d01c1f43be280fbfee1fad2af84309d5fc7d9"
        },
        "inherit": [
          "contracts/BalancerV2/BalancerV2.sol:BalancerV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Curve/Coin98Curve.sol:Coin98Adapter1": {
        "src": "contracts/Curve/Coin98Curve.sol:3",
        "version": {
          "withMetadata": "6cefdc533a9eaa394024dbfe89857f2c3430a7f19621eae6f2c8ac27bee8ed33",
          "withoutMetadata": "8051649b009b38ead9b83c651d64d7eada7f88a48bef7d49c358d668a31fbb21",
          "linkedWithoutMetadata": "8051649b009b38ead9b83c651d64d7eada7f88a48bef7d49c358d668a31fbb21"
        },
        "inherit": [
          "contracts/Curve/curve.sol:Curve"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Curve/curve.sol:Curve": {
        "src": "contracts/Curve/curve.sol:8",
        "version": {
          "withMetadata": "41b3aa5195f5d01d887104bf170ce23e18b86074683bf420ad4de2f795586dff",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/Coin98CurveV2.sol:Coin98CurveV2": {
        "src": "contracts/CurveV2/Coin98CurveV2.sol:9",
        "version": {
          "withMetadata": "ee3cfa3f42136823be99408bf0908a7407b197e290309eb2fe77a5b797000862",
          "withoutMetadata": "f426d7df13ba49f68b420dd05327f0aa5115a58785f19af59ca63cb84a656599",
          "linkedWithoutMetadata": "f426d7df13ba49f68b420dd05327f0aa5115a58785f19af59ca63cb84a656599"
        },
        "inherit": [
          "contracts/CurveV2/CurveV2.sol:CurveV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/CurveV2.sol:CurveV2": {
        "src": "contracts/CurveV2/CurveV2.sol:7",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:DemoAdapter1": {
        "src": "contracts/DemoAdapter(Full).sol:30",
        "version": {
          "withMetadata": "6d86b379545166af4c7d0d894aabe9d42a86cfb83ff8a7355de5ed90089bbce1",
          "withoutMetadata": "bc5eca410b2b2896deef837ce8da1794875bfe3408c4569d8869366b70501ace",
          "linkedWithoutMetadata": "bc5eca410b2b2896deef837ce8da1794875bfe3408c4569d8869366b70501ace"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/DemoAdapter(Full).sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapRoutes(uint256[],address,address,bytes,address)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter1",
            "src": "contracts/DemoAdapter(Full).sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter(Full).sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter(Full).sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter(Full).sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:33"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:35"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:36"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:37"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(Partner)3718_storage)",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:67"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)3718_storage)": {
              "label": "mapping(address => struct DemoAdapter1.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)3718_storage": {
              "label": "struct DemoAdapter1.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:EthReceiver": {
        "src": "contracts/DemoAdapter(Full).sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:IExecutor": {
        "src": "contracts/DemoAdapter(Full).sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter(Full).sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:SwapAdapter": {
        "src": "contracts/DemoAdapter(Full).sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:DemoAdapter": {
        "src": "contracts/DemoAdapter.sol:25",
        "version": {
          "withMetadata": "617a448f30f4b5fc9990d55033d06cf16c4f786d13ab8a0ef1556ec20e1fca56",
          "withoutMetadata": "0e88a723f0421ad776a3095eca77392bb927951527155a341e2f113803aab22b",
          "linkedWithoutMetadata": "0e88a723f0421ad776a3095eca77392bb927951527155a341e2f113803aab22b"
        },
        "inherit": [
          "contracts/DemoAdapter.sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapRoutes(uint256,address,address,(address[],uint256[],uint256[],uint256[],bytes[]))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter",
            "src": "contracts/DemoAdapter.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:28"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:30"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:31"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:32"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Partner)4291_storage)",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:62"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)4291_storage)": {
              "label": "mapping(address => struct DemoAdapter.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)4291_storage": {
              "label": "struct DemoAdapter.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:EthReceiver": {
        "src": "contracts/DemoAdapter.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:SwapAdapter": {
        "src": "contracts/DemoAdapter.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DoDoV2/Coin98DoDoV2.sol:Coin98DoDoV2": {
        "src": "contracts/DoDoV2/Coin98DoDoV2.sol:7",
        "inherit": [
          "contracts/DoDoV2/DoDoV2.sol:DoDoV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DoDoV2/DoDoV2.sol:DoDoV2": {
        "src": "contracts/DoDoV2/DoDoV2.sol:8",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:Executor": {
        "src": "contracts/Executor.sol:14",
        "version": {
          "withMetadata": "476e766d2de7d3756ba6d90b9a3f0886f069772c94f4be3dcdf25489bab86290",
          "withoutMetadata": "89b8150b6fb2e3eb32c8df83eff0a038234024d65010db2fb83ed7a9cc5215f7",
          "linkedWithoutMetadata": "89b8150b6fb2e3eb32c8df83eff0a038234024d65010db2fb83ed7a9cc5215f7"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "execution(bytes,address,address)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/Executor.sol:57"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/Executor.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:SwapAdaptor": {
        "src": "contracts/Executor.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "b9c3c8609cdad193923f6f3bb05634524bc29b75f53f9ece9638cc4c50a1dbd1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/PancakeStableSwap/PancakeStableSwap.sol:PancakeStableSwap": {
        "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:10",
        "version": {
          "withMetadata": "e04b81aa130b7ec0be597a141d5c60fc91f52a0c64aa802cb5977ffd099f23bc",
          "withoutMetadata": "aa3c2b1b7531f16b95ce5fdc9be50b29eeffe879cc160ab89809bbe364e7972d",
          "linkedWithoutMetadata": "aa3c2b1b7531f16b95ce5fdc9be50b29eeffe879cc160ab89809bbe364e7972d"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "()",
          "initialize(address[2],uint256,uint256,uint256,address)",
          "A()",
          "get_virtual_price()",
          "calc_token_amount(uint256[2],bool)",
          "add_liquidity(uint256[2],uint256)",
          "get_dy(uint256,uint256,uint256)",
          "get_dy_underlying(uint256,uint256,uint256)",
          "exchange(uint256,uint256,uint256,uint256)",
          "remove_liquidity(uint256,uint256[2])",
          "remove_liquidity_imbalance(uint256[2],uint256)",
          "calc_withdraw_one_coin(uint256,uint256)",
          "remove_liquidity_one_coin(uint256,uint256,uint256)",
          "ramp_A(uint256,uint256)",
          "stop_rampget_A()",
          "commit_new_fee(uint256,uint256)",
          "apply_new_fee()",
          "revert_new_parameters()",
          "admin_balances(uint256)",
          "withdraw_admin_fees()",
          "donate_admin_fees()",
          "kill_me()",
          "unkill_me()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakeStableSwap",
            "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:88"
          },
          {
            "kind": "state-variable-immutable",
            "name": "STABLESWAP_FACTORY",
            "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:49"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "PRECISION_MUL",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)2_storage",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:18"
            },
            {
              "label": "RATES",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_uint256)2_storage",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:19"
            },
            {
              "label": "coins",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)2_storage",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:29"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)2_storage",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:30"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:31"
            },
            {
              "label": "admin_fee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:32"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(PancakeStableSwapLP)8188",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:34"
            },
            {
              "label": "initial_A",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:36"
            },
            {
              "label": "future_A",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:37"
            },
            {
              "label": "initial_A_time",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:38"
            },
            {
              "label": "future_A_time",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:39"
            },
            {
              "label": "admin_actions_deadline",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:41"
            },
            {
              "label": "future_fee",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:42"
            },
            {
              "label": "future_admin_fee",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:43"
            },
            {
              "label": "kill_deadline",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:45"
            },
            {
              "label": "is_killed",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:47"
            },
            {
              "label": "isInitialized",
              "offset": 1,
              "slot": "21",
              "type": "t_bool",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)2_storage": {
              "label": "address[2]",
              "numberOfBytes": "64"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(PancakeStableSwapLP)8188": {
              "label": "contract PancakeStableSwapLP",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/PancakeStableSwap/PancakeStableSwapLP.sol:PancakeStableSwapLP": {
        "src": "contracts/PancakeStableSwap/PancakeStableSwapLP.sol:6",
        "version": {
          "withMetadata": "085fb307e3daa0f0f214f3367856728266c06c74b00d3e3fbde4ab66626a6e82",
          "withoutMetadata": "37f0d09767de279f4a6cbfa2497af5a129ae480d702087c0b4f2b85b26aaf56b",
          "linkedWithoutMetadata": "37f0d09767de279f4a6cbfa2497af5a129ae480d702087c0b4f2b85b26aaf56b"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakeStableSwapLP",
            "src": "contracts/PancakeStableSwap/PancakeStableSwapLP.sol:9"
          },
          {
            "kind": "state-variable-immutable",
            "name": "miner",
            "src": "contracts/PancakeStableSwap/PancakeStableSwapLP.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TokenA/TokenA.sol:TokenA": {
        "src": "contracts/TokenA/TokenA.sol:7",
        "version": {
          "withMetadata": "b8d5ec3e9f4206bf302185fcc346003e0fe5cf70c89925c3fd2bbf5ca1886e1c",
          "withoutMetadata": "31642eab3aa230366510e9802f5d7639c2e4ab7360fdc2b5080c096fa0b6af12",
          "linkedWithoutMetadata": "31642eab3aa230366510e9802f5d7639c2e4ab7360fdc2b5080c096fa0b6af12"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mintToken(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenA",
            "src": "contracts/TokenA/TokenA.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/USDC/USDC.sol:USDC": {
        "src": "contracts/USDC/USDC.sol:7",
        "version": {
          "withMetadata": "6f5f2c49fef470dd5c67091387d2491ba863e394c6927c6d86b5554961c6b280",
          "withoutMetadata": "fb675ab4d642b67af7d693f0ee7f81b41e73f13403926790a6b9f20f76fcece0",
          "linkedWithoutMetadata": "fb675ab4d642b67af7d693f0ee7f81b41e73f13403926790a6b9f20f76fcece0"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mintToken(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "USDC",
            "src": "contracts/USDC/USDC.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/USDT/USDT.sol:USDT": {
        "src": "contracts/USDT/USDT.sol:7",
        "version": {
          "withMetadata": "7dc276e39e33494be1e14bf12c304cf63a2211478029172fabbebe4e0eb4f985",
          "withoutMetadata": "03d3595dbe03ea121af0d6d87f87ef6cfa8a988f8681e87ef251970aa6cde97e",
          "linkedWithoutMetadata": "03d3595dbe03ea121af0d6d87f87ef6cfa8a988f8681e87ef251970aa6cde97e"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mintToken(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "USDT",
            "src": "contracts/USDT/USDT.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:12",
        "version": {
          "withMetadata": "e0ba6bf6c8e2ff652052e9172e3c47f821e5a145a910c6be5a22d1c18ab00e9d",
          "withoutMetadata": "57ce19fa8bd05d76cbf6910ee9359029ea65b0cacd0002deb4fbbebde77d8a0f",
          "linkedWithoutMetadata": "57ce19fa8bd05d76cbf6910ee9359029ea65b0cacd0002deb4fbbebde77d8a0f"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:pairSwap": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap.sol:Coin98Uniswap": {
        "src": "contracts/Uniswap/Coin98Uniswap.sol:6",
        "version": {
          "withMetadata": "2944dc3d2f4d9be1d055c4cc88df5232c0bad47f5d4053e8cf6d33d96cb36641",
          "withoutMetadata": "ecabb90c0802306e6ef7be095e352494f8e6e787e4b8a292f8cbf88e55141d2a",
          "linkedWithoutMetadata": "ecabb90c0802306e6ef7be095e352494f8e6e787e4b8a292f8cbf88e55141d2a"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/UniswapV3/Coin98UniswapV3.sol:Coin98UniswapV3": {
        "src": "contracts/UniswapV3/Coin98UniswapV3.sol:6",
        "version": {
          "withMetadata": "dc3c11c654c3c7e6b2474d6de3c650fa2227edebeac74b5bfe65f6262c24a847",
          "withoutMetadata": "dfa230e8be99ab3d6fc95610f33e24029715b22267e2ee9d89bda79324dc2e8f",
          "linkedWithoutMetadata": "dfa230e8be99ab3d6fc95610f33e24029715b22267e2ee9d89bda79324dc2e8f"
        },
        "inherit": [
          "contracts/UniswapV3/UniswapV3.sol:UniswapV3"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/UniswapV3/UniswapV3.sol:UniswapV3": {
        "src": "contracts/UniswapV3/UniswapV3.sol:9",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IAaveLendingPool.sol:IAaveLendingPool": {
        "src": "contracts/interface/IAaveLendingPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,uint256,address,uint16)",
          "withdraw(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IAdapter.sol:IAdapter": {
        "src": "contracts/interface/IAdapter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IAsset.sol:IAsset": {
        "src": "contracts/interface/IAsset.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerPool.sol:IBalancerPool": {
        "src": "contracts/interface/IBalancerPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactAmountIn(address,uint256,address,uint256,uint256)",
          "swapExactAmountOut(address,uint256,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerProxy.sol:IBalancerProxy": {
        "src": "contracts/interface/IBalancerProxy.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "batchSwapExactIn(struct IBalancerProxy.Swap[],address,address,uint256,uint256)",
          "batchSwapExactOut(struct IBalancerProxy.Swap[],address,address,uint256)",
          "batchEthInSwapExactIn(struct IBalancerProxy.Swap[],address,uint256)",
          "batchEthOutSwapExactIn(struct IBalancerProxy.Swap[],address,uint256,uint256)",
          "batchEthInSwapExactOut(struct IBalancerProxy.Swap[],address)",
          "batchEthOutSwapExactOut(struct IBalancerProxy.Swap[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerV2.sol:IBalancerV2": {
        "src": "contracts/interface/IBalancerV2.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address payable,bool),uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurveEthPool.sol:ICurveEthPool": {
        "src": "contracts/interface/ICurveEthPool.sol:2",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange(int128,int128,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurvePool.sol:ICurvePool": {
        "src": "contracts/interface/ICurvePool.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(int128,int128,uint256,uint256)",
          "exchange(int128,int128,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurveV2Pool.sol:ICurveV2Pool": {
        "src": "contracts/interface/ICurveV2Pool.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(uint256,uint256,uint256,uint256)",
          "exchange(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IDODOV2Proxy.sol:IDODOV2Proxy": {
        "src": "contracts/interface/IDODOV2Proxy.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "dodoSwapV2ETHToToken(address,uint256,address[],uint256,bool,uint256)",
          "dodoSwapV2TokenToETH(address,uint256,uint256,address[],uint256,bool,uint256)",
          "dodoSwapV2TokenToToken(address,address,uint256,uint256,address[],uint256,bool,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IMstable.sol:IMStable": {
        "src": "contracts/interface/IMstable.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256,uint256,address)",
          "swap(address,address,uint256,uint256,address)",
          "redeem(address,uint256,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IOneInchPool.sol:IOneInchPool": {
        "src": "contracts/interface/IOneInchPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(address,address,uint256,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ISwapRouterUniV3.sol:ISwapRouterUniV3": {
        "src": "contracts/interface/ISwapRouterUniV3.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETH.sol:IWETH": {
        "src": "contracts/interface/IWETH.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETHGateway.sol:IWETHGateway": {
        "src": "contracts/interface/IWETHGateway.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "depositETH(address,address,uint16)",
          "withdrawETH(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IZeroxV2.sol:IZeroxV2": {
        "src": "contracts/interface/IZeroxV2.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "marketSellOrdersNoThrow(struct LibOrderV2.Order[],uint256,bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IZeroxV4.sol:IZeroxV4": {
        "src": "contracts/interface/IZeroxV4.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "fillRfqOrder((address,address,uint128,uint128,address,address,address,bytes32,uint64,uint256),(uint8,uint8,bytes32,bytes32),uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/LibBytes.sol:LibBytes": {
        "src": "contracts/library/LibBytes.sol:21",
        "version": {
          "withMetadata": "bb7df4b68d712d914fd61ddb1493f64062f3108fe81258bdc89fadcc9f38ed6f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/LibBytes.sol:LibBytes",
          "contracts/library/LibBytesRichErrors.sol:LibBytesRichErrors",
          "contracts/library/LibRichErrors.sol:LibRichErrors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/LibBytesRichErrors.sol:LibBytesRichErrors": {
        "src": "contracts/library/LibBytesRichErrors.sol:17",
        "version": {
          "withMetadata": "361b7a6dbfb65c77383d500cf6ec036757ad071872ccadcc45f1b793a358ef2a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/LibRichErrors.sol:LibRichErrors": {
        "src": "contracts/library/LibRichErrors.sol:17",
        "version": {
          "withMetadata": "dc038dc9361ba836b2c54ebc43d0a70403b7aa6791c80d3a2e0825cccf785f70",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "1cca05a314d7a750e179692a053f1b2e220b8d3e8bbf70eca6c91b734d29b07e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/oneinch/Coin98OneInch.sol:Coin98ZeroxV2": {
        "src": "contracts/oneinch/Coin98OneInch.sol:6",
        "version": {
          "withMetadata": "9afa14f799706b04c9b4fc4eb410b0ade8891784f04d7079529b1df1b98fcd04",
          "withoutMetadata": "65645a338544fae545c7c67a62e8d641a88bbc046ee5a27cc6376493410657a8",
          "linkedWithoutMetadata": "65645a338544fae545c7c67a62e8d641a88bbc046ee5a27cc6376493410657a8"
        },
        "inherit": [
          "contracts/oneinch/OneInchPool.sol:OneInchPool"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/oneinch/OneInchPool.sol:OneInchPool": {
        "src": "contracts/oneinch/OneInchPool.sol:9",
        "version": {
          "withMetadata": "bf1e2db959b82464e95d4e3a8a1a9888a72075ad4a38a3adcaee5f3c8ecdebd6",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/utils/WethProvider.sol:WethProvider": {
        "src": "contracts/utils/WethProvider.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethProvider",
            "src": "contracts/utils/WethProvider.sol:7"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts/utils/WethProvider.sol:5"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "11953e8f3a67eb73209b7fcb0d1b95ed7e9c588586563fb0ff6dd8cc221ceefd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f0fa64385ca28038911a9b8db894da62e990bd777bcce13a98382f11d748f48d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "76f44b5d896e4b9252ad829cbe7b0d05e2ff8ff358fb7ecc3191f7b5a7750d5e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/BalancerV2.sol:BalancerV2": {
        "src": "contracts/BalancerV2/BalancerV2.sol:5",
        "version": {
          "withMetadata": "4fc296eee1318c0be22e4545db5a29c17d25d57aad0e02fd78dde10582e0c37f",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/Coin98BalancerV2.sol:Coin98BalancerV2": {
        "src": "contracts/BalancerV2/Coin98BalancerV2.sol:4",
        "version": {
          "withMetadata": "90655ae2d3a8bd34ce5f3f007a86a13a53d974be4d7b3fcbbc8ebaf299931c18",
          "withoutMetadata": "9af3c8a5d2a3da08082afc9af11d01c1f43be280fbfee1fad2af84309d5fc7d9",
          "linkedWithoutMetadata": "9af3c8a5d2a3da08082afc9af11d01c1f43be280fbfee1fad2af84309d5fc7d9"
        },
        "inherit": [
          "contracts/BalancerV2/BalancerV2.sol:BalancerV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "b9c3c8609cdad193923f6f3bb05634524bc29b75f53f9ece9638cc4c50a1dbd1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IAsset.sol:IAsset": {
        "src": "contracts/interface/IAsset.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerV2.sol:IBalancerV2": {
        "src": "contracts/interface/IBalancerV2.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address payable,bool),uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "1cca05a314d7a750e179692a053f1b2e220b8d3e8bbf70eca6c91b734d29b07e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "11953e8f3a67eb73209b7fcb0d1b95ed7e9c588586563fb0ff6dd8cc221ceefd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f0fa64385ca28038911a9b8db894da62e990bd777bcce13a98382f11d748f48d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "76f44b5d896e4b9252ad829cbe7b0d05e2ff8ff358fb7ecc3191f7b5a7750d5e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/BalancerV2.sol:BalancerV2": {
        "src": "contracts/BalancerV2/BalancerV2.sol:5",
        "version": {
          "withMetadata": "4fc296eee1318c0be22e4545db5a29c17d25d57aad0e02fd78dde10582e0c37f",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/Coin98BalancerV2.sol:Coin98BalancerV1": {
        "src": "contracts/BalancerV2/Coin98BalancerV2.sol:4",
        "version": {
          "withMetadata": "e862ce69568ec324934a1ae2f86aeefd04f6be2122d4ca83f2b03889ce4bdf40",
          "withoutMetadata": "9af3c8a5d2a3da08082afc9af11d01c1f43be280fbfee1fad2af84309d5fc7d9",
          "linkedWithoutMetadata": "9af3c8a5d2a3da08082afc9af11d01c1f43be280fbfee1fad2af84309d5fc7d9"
        },
        "inherit": [
          "contracts/BalancerV2/BalancerV2.sol:BalancerV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "b9c3c8609cdad193923f6f3bb05634524bc29b75f53f9ece9638cc4c50a1dbd1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IAsset.sol:IAsset": {
        "src": "contracts/interface/IAsset.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerV2.sol:IBalancerV2": {
        "src": "contracts/interface/IBalancerV2.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address payable,bool),uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "1cca05a314d7a750e179692a053f1b2e220b8d3e8bbf70eca6c91b734d29b07e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "17b297cef34f6f78217448cd9a6a785b6ed743c25dcf719bd3b8f89287f99d38",
          "withoutMetadata": "8c273a08604f9961d3dd4eef65f98472c7c9ad080b52a03a40f177c856c6c890",
          "linkedWithoutMetadata": "8c273a08604f9961d3dd4eef65f98472c7c9ad080b52a03a40f177c856c6c890"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/USDT/USDT.sol:USDT": {
        "src": "contracts/USDT/USDT.sol:7",
        "version": {
          "withMetadata": "7dc276e39e33494be1e14bf12c304cf63a2211478029172fabbebe4e0eb4f985",
          "withoutMetadata": "03d3595dbe03ea121af0d6d87f87ef6cfa8a988f8681e87ef251970aa6cde97e",
          "linkedWithoutMetadata": "03d3595dbe03ea121af0d6d87f87ef6cfa8a988f8681e87ef251970aa6cde97e"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mintToken(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "USDT",
            "src": "contracts/USDT/USDT.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "17b297cef34f6f78217448cd9a6a785b6ed743c25dcf719bd3b8f89287f99d38",
          "withoutMetadata": "8c273a08604f9961d3dd4eef65f98472c7c9ad080b52a03a40f177c856c6c890",
          "linkedWithoutMetadata": "8c273a08604f9961d3dd4eef65f98472c7c9ad080b52a03a40f177c856c6c890"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TokenA/TokenA.sol:TokenA": {
        "src": "contracts/TokenA/TokenA.sol:7",
        "version": {
          "withMetadata": "b8d5ec3e9f4206bf302185fcc346003e0fe5cf70c89925c3fd2bbf5ca1886e1c",
          "withoutMetadata": "31642eab3aa230366510e9802f5d7639c2e4ab7360fdc2b5080c096fa0b6af12",
          "linkedWithoutMetadata": "31642eab3aa230366510e9802f5d7639c2e4ab7360fdc2b5080c096fa0b6af12"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mintToken(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenA",
            "src": "contracts/TokenA/TokenA.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "17b297cef34f6f78217448cd9a6a785b6ed743c25dcf719bd3b8f89287f99d38",
          "withoutMetadata": "8c273a08604f9961d3dd4eef65f98472c7c9ad080b52a03a40f177c856c6c890",
          "linkedWithoutMetadata": "8c273a08604f9961d3dd4eef65f98472c7c9ad080b52a03a40f177c856c6c890"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TokenA/TokenA.sol:TokenA": {
        "src": "contracts/TokenA/TokenA.sol:7",
        "version": {
          "withMetadata": "b8d5ec3e9f4206bf302185fcc346003e0fe5cf70c89925c3fd2bbf5ca1886e1c",
          "withoutMetadata": "31642eab3aa230366510e9802f5d7639c2e4ab7360fdc2b5080c096fa0b6af12",
          "linkedWithoutMetadata": "31642eab3aa230366510e9802f5d7639c2e4ab7360fdc2b5080c096fa0b6af12"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mintToken(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenA",
            "src": "contracts/TokenA/TokenA.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "17b297cef34f6f78217448cd9a6a785b6ed743c25dcf719bd3b8f89287f99d38",
          "withoutMetadata": "8c273a08604f9961d3dd4eef65f98472c7c9ad080b52a03a40f177c856c6c890",
          "linkedWithoutMetadata": "8c273a08604f9961d3dd4eef65f98472c7c9ad080b52a03a40f177c856c6c890"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TokenA/TokenA.sol:DevToken": {
        "src": "contracts/TokenA/TokenA.sol:7",
        "version": {
          "withMetadata": "4338284091c0f718a9afe681a492115d708e8cb7da3489cc0c7678e08899d0d8",
          "withoutMetadata": "184cac108a994ba58e3807c2fbbf6b31a5119037c90110b4ecaca702f5fa3104",
          "linkedWithoutMetadata": "184cac108a994ba58e3807c2fbbf6b31a5119037c90110b4ecaca702f5fa3104"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DevToken",
            "src": "contracts/TokenA/TokenA.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "11953e8f3a67eb73209b7fcb0d1b95ed7e9c588586563fb0ff6dd8cc221ceefd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f0fa64385ca28038911a9b8db894da62e990bd777bcce13a98382f11d748f48d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "76f44b5d896e4b9252ad829cbe7b0d05e2ff8ff358fb7ecc3191f7b5a7750d5e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV2/Coin98ZeroxV2.sol:Coin98ZeroxV2": {
        "src": "contracts/0xV2/Coin98ZeroxV2.sol:6",
        "version": {
          "withMetadata": "a484571f4e88e60337a05fe28749b8eb37d53e0733690eafce78a68927169a6c",
          "withoutMetadata": "5c286a030d8bf557838ee1c7a903df236e4bf14c7213a9a49aa99df64fdae73f",
          "linkedWithoutMetadata": "5c286a030d8bf557838ee1c7a903df236e4bf14c7213a9a49aa99df64fdae73f"
        },
        "inherit": [
          "contracts/0xV2/ZeroxV2.sol:ZeroxV2",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address,address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98ZeroxV2",
            "src": "contracts/0xV2/Coin98ZeroxV2.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV2/LibOrderV2.sol:LibOrderV2": {
        "src": "contracts/0xV2/LibOrderV2.sol:4",
        "version": {
          "withMetadata": "bc9a6c4c9304a6e60356d9241da3a156cc63c2b42a041865ab409a0346f32ce0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV2/ZeroxV2.sol:ZeroxV2": {
        "src": "contracts/0xV2/ZeroxV2.sol:9",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "contracts/library/LibBytes.sol:LibBytes",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ZeroxV2",
            "src": "contracts/0xV2/ZeroxV2.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "erc20Proxy",
            "src": "contracts/0xV2/ZeroxV2.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV4/Coin98ZeroxV4.sol:Coin98ZeroxV4": {
        "src": "contracts/0xV4/Coin98ZeroxV4.sol:6",
        "version": {
          "withMetadata": "57f4870c0c2ec537490eade65088aaf2b736c88540bcc51b31964749dbe8112a",
          "withoutMetadata": "ac2d5bf4377642f6696c864f4345cf626e56d0a19394af3709575196cbb0d253",
          "linkedWithoutMetadata": "ac2d5bf4377642f6696c864f4345cf626e56d0a19394af3709575196cbb0d253"
        },
        "inherit": [
          "contracts/0xV4/ZeroxV4.sol:ZeroxV4"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV4/LibOrderV4.sol:LibOrderV4": {
        "src": "contracts/0xV4/LibOrderV4.sol:4",
        "version": {
          "withMetadata": "facc74890dd979fc109f4cadadf181280c6afc3b05d306400fd5d0b60023bd0e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV4/ZeroxV4.sol:ZeroxV4": {
        "src": "contracts/0xV4/ZeroxV4.sol:9",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AaveeV2/AaveeV2.sol:Aavee2": {
        "src": "contracts/AaveeV2/AaveeV2.sol:7",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Aavee2",
            "src": "contracts/AaveeV2/AaveeV2.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "refCode",
            "src": "contracts/AaveeV2/AaveeV2.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "lendingPool",
            "src": "contracts/AaveeV2/AaveeV2.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "wethGateway",
            "src": "contracts/AaveeV2/AaveeV2.sol:15"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AaveeV2/Coin98AaveeV2.sol:Coin98AaveeV2": {
        "src": "contracts/AaveeV2/Coin98AaveeV2.sol:6",
        "version": {
          "withMetadata": "90c72ad7bca2d12ff9105ee4822ad6f1dbb836cf4c8fe25d2e119b3508bb43ae",
          "withoutMetadata": "ee53b53dd2d278d44da8601626a708da0912bc678f6eedf71844126b38c48a0e",
          "linkedWithoutMetadata": "ee53b53dd2d278d44da8601626a708da0912bc678f6eedf71844126b38c48a0e"
        },
        "inherit": [
          "contracts/AaveeV2/AaveeV2.sol:Aavee2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(uint16,address,address)",
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98AaveeV2",
            "src": "contracts/AaveeV2/Coin98AaveeV2.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV1/BalancerV1.sol:BalancerV1": {
        "src": "contracts/BalancerV1/BalancerV1.sol:9",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV1/Coin98BalancerV1.sol:Coin98BalancerV1": {
        "src": "contracts/BalancerV1/Coin98BalancerV1.sol:4",
        "version": {
          "withMetadata": "4569a5b424f0aef378709cf87c6fa06f8bfda846ce8caf186ff0129f830a46b2",
          "withoutMetadata": "819327aef61a36a51f0bc28912cddd021c1b9de9d801fcdcfaf831307d6b17ce",
          "linkedWithoutMetadata": "819327aef61a36a51f0bc28912cddd021c1b9de9d801fcdcfaf831307d6b17ce"
        },
        "inherit": [
          "contracts/BalancerV1/BalancerV1.sol:BalancerV1",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98BalancerV1",
            "src": "contracts/BalancerV1/Coin98BalancerV1.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/BalancerV2.sol:BalancerV2": {
        "src": "contracts/BalancerV2/BalancerV2.sol:5",
        "version": {
          "withMetadata": "18c55ae64ca6a5f6d1b6127311b2b2482bd3690c38595a29c52dd2b29534e640",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/Coin98BalancerV2.sol:Coin98BalancerV1": {
        "src": "contracts/BalancerV2/Coin98BalancerV2.sol:4",
        "version": {
          "withMetadata": "fd72cb77d95911ac51eb78c233ead1ba36baedb8e922d3c9668d26b210bd78c9",
          "withoutMetadata": "9af3c8a5d2a3da08082afc9af11d01c1f43be280fbfee1fad2af84309d5fc7d9",
          "linkedWithoutMetadata": "9af3c8a5d2a3da08082afc9af11d01c1f43be280fbfee1fad2af84309d5fc7d9"
        },
        "inherit": [
          "contracts/BalancerV2/BalancerV2.sol:BalancerV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Curve/Coin98Curve.sol:Coin98Adapter1": {
        "src": "contracts/Curve/Coin98Curve.sol:3",
        "version": {
          "withMetadata": "6cefdc533a9eaa394024dbfe89857f2c3430a7f19621eae6f2c8ac27bee8ed33",
          "withoutMetadata": "8051649b009b38ead9b83c651d64d7eada7f88a48bef7d49c358d668a31fbb21",
          "linkedWithoutMetadata": "8051649b009b38ead9b83c651d64d7eada7f88a48bef7d49c358d668a31fbb21"
        },
        "inherit": [
          "contracts/Curve/curve.sol:Curve"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Curve/curve.sol:Curve": {
        "src": "contracts/Curve/curve.sol:8",
        "version": {
          "withMetadata": "41b3aa5195f5d01d887104bf170ce23e18b86074683bf420ad4de2f795586dff",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/Coin98CurveV2.sol:Coin98CurveV2": {
        "src": "contracts/CurveV2/Coin98CurveV2.sol:9",
        "version": {
          "withMetadata": "ee3cfa3f42136823be99408bf0908a7407b197e290309eb2fe77a5b797000862",
          "withoutMetadata": "f426d7df13ba49f68b420dd05327f0aa5115a58785f19af59ca63cb84a656599",
          "linkedWithoutMetadata": "f426d7df13ba49f68b420dd05327f0aa5115a58785f19af59ca63cb84a656599"
        },
        "inherit": [
          "contracts/CurveV2/CurveV2.sol:CurveV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/CurveV2.sol:CurveV2": {
        "src": "contracts/CurveV2/CurveV2.sol:7",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:DemoAdapter1": {
        "src": "contracts/DemoAdapter(Full).sol:30",
        "version": {
          "withMetadata": "6d86b379545166af4c7d0d894aabe9d42a86cfb83ff8a7355de5ed90089bbce1",
          "withoutMetadata": "bc5eca410b2b2896deef837ce8da1794875bfe3408c4569d8869366b70501ace",
          "linkedWithoutMetadata": "bc5eca410b2b2896deef837ce8da1794875bfe3408c4569d8869366b70501ace"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/DemoAdapter(Full).sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapRoutes(uint256[],address,address,bytes,address)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter1",
            "src": "contracts/DemoAdapter(Full).sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter(Full).sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter(Full).sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter(Full).sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:33"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:35"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:36"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:37"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(Partner)3068_storage)",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:67"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)3068_storage)": {
              "label": "mapping(address => struct DemoAdapter1.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)3068_storage": {
              "label": "struct DemoAdapter1.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:EthReceiver": {
        "src": "contracts/DemoAdapter(Full).sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:IExecutor": {
        "src": "contracts/DemoAdapter(Full).sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter(Full).sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:SwapAdapter": {
        "src": "contracts/DemoAdapter(Full).sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:DemoAdapter": {
        "src": "contracts/DemoAdapter.sol:25",
        "version": {
          "withMetadata": "617a448f30f4b5fc9990d55033d06cf16c4f786d13ab8a0ef1556ec20e1fca56",
          "withoutMetadata": "0e88a723f0421ad776a3095eca77392bb927951527155a341e2f113803aab22b",
          "linkedWithoutMetadata": "0e88a723f0421ad776a3095eca77392bb927951527155a341e2f113803aab22b"
        },
        "inherit": [
          "contracts/DemoAdapter.sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapRoutes(uint256,address,address,(address[],uint256[],uint256[],uint256[],bytes[]))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter",
            "src": "contracts/DemoAdapter.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:28"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:30"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:31"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:32"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Partner)3641_storage)",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:62"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)3641_storage)": {
              "label": "mapping(address => struct DemoAdapter.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)3641_storage": {
              "label": "struct DemoAdapter.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:EthReceiver": {
        "src": "contracts/DemoAdapter.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:SwapAdapter": {
        "src": "contracts/DemoAdapter.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DoDoV2/Coin98DoDoV2.sol:Coin98DoDoV2": {
        "src": "contracts/DoDoV2/Coin98DoDoV2.sol:7",
        "inherit": [
          "contracts/DoDoV2/DoDoV2.sol:DoDoV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DoDoV2/DoDoV2.sol:DoDoV2": {
        "src": "contracts/DoDoV2/DoDoV2.sol:8",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:Executor": {
        "src": "contracts/Executor.sol:14",
        "version": {
          "withMetadata": "476e766d2de7d3756ba6d90b9a3f0886f069772c94f4be3dcdf25489bab86290",
          "withoutMetadata": "89b8150b6fb2e3eb32c8df83eff0a038234024d65010db2fb83ed7a9cc5215f7",
          "linkedWithoutMetadata": "89b8150b6fb2e3eb32c8df83eff0a038234024d65010db2fb83ed7a9cc5215f7"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "execution(bytes,address,address)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/Executor.sol:57"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/Executor.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:SwapAdaptor": {
        "src": "contracts/Executor.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "b9c3c8609cdad193923f6f3bb05634524bc29b75f53f9ece9638cc4c50a1dbd1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:12",
        "version": {
          "withMetadata": "e0ba6bf6c8e2ff652052e9172e3c47f821e5a145a910c6be5a22d1c18ab00e9d",
          "withoutMetadata": "57ce19fa8bd05d76cbf6910ee9359029ea65b0cacd0002deb4fbbebde77d8a0f",
          "linkedWithoutMetadata": "57ce19fa8bd05d76cbf6910ee9359029ea65b0cacd0002deb4fbbebde77d8a0f"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:pairSwap": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap.sol:Coin98Uniswap": {
        "src": "contracts/Uniswap/Coin98Uniswap.sol:6",
        "version": {
          "withMetadata": "2944dc3d2f4d9be1d055c4cc88df5232c0bad47f5d4053e8cf6d33d96cb36641",
          "withoutMetadata": "ecabb90c0802306e6ef7be095e352494f8e6e787e4b8a292f8cbf88e55141d2a",
          "linkedWithoutMetadata": "ecabb90c0802306e6ef7be095e352494f8e6e787e4b8a292f8cbf88e55141d2a"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/UniswapV3/Coin98UniswapV3.sol:Coin98UniswapV3": {
        "src": "contracts/UniswapV3/Coin98UniswapV3.sol:6",
        "version": {
          "withMetadata": "dc3c11c654c3c7e6b2474d6de3c650fa2227edebeac74b5bfe65f6262c24a847",
          "withoutMetadata": "dfa230e8be99ab3d6fc95610f33e24029715b22267e2ee9d89bda79324dc2e8f",
          "linkedWithoutMetadata": "dfa230e8be99ab3d6fc95610f33e24029715b22267e2ee9d89bda79324dc2e8f"
        },
        "inherit": [
          "contracts/UniswapV3/UniswapV3.sol:UniswapV3"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/UniswapV3/UniswapV3.sol:UniswapV3": {
        "src": "contracts/UniswapV3/UniswapV3.sol:9",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IAaveLendingPool.sol:IAaveLendingPool": {
        "src": "contracts/interface/IAaveLendingPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,uint256,address,uint16)",
          "withdraw(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IAsset.sol:IAsset": {
        "src": "contracts/interface/IAsset.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerPool.sol:IBalancerPool": {
        "src": "contracts/interface/IBalancerPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactAmountIn(address,uint256,address,uint256,uint256)",
          "swapExactAmountOut(address,uint256,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerProxy.sol:IBalancerProxy": {
        "src": "contracts/interface/IBalancerProxy.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "batchSwapExactIn(struct IBalancerProxy.Swap[],address,address,uint256,uint256)",
          "batchSwapExactOut(struct IBalancerProxy.Swap[],address,address,uint256)",
          "batchEthInSwapExactIn(struct IBalancerProxy.Swap[],address,uint256)",
          "batchEthOutSwapExactIn(struct IBalancerProxy.Swap[],address,uint256,uint256)",
          "batchEthInSwapExactOut(struct IBalancerProxy.Swap[],address)",
          "batchEthOutSwapExactOut(struct IBalancerProxy.Swap[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerV2.sol:IBalancerV2": {
        "src": "contracts/interface/IBalancerV2.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address payable,bool),uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurveEthPool.sol:ICurveEthPool": {
        "src": "contracts/interface/ICurveEthPool.sol:2",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange(int128,int128,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurvePool.sol:ICurvePool": {
        "src": "contracts/interface/ICurvePool.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(int128,int128,uint256,uint256)",
          "exchange(int128,int128,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurveV2Pool.sol:ICurveV2Pool": {
        "src": "contracts/interface/ICurveV2Pool.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(uint256,uint256,uint256,uint256)",
          "exchange(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IDODOV2Proxy.sol:IDODOV2Proxy": {
        "src": "contracts/interface/IDODOV2Proxy.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "dodoSwapV2ETHToToken(address,uint256,address[],uint256,bool,uint256)",
          "dodoSwapV2TokenToETH(address,uint256,uint256,address[],uint256,bool,uint256)",
          "dodoSwapV2TokenToToken(address,address,uint256,uint256,address[],uint256,bool,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IOneInchPool.sol:IOneInchPool": {
        "src": "contracts/interface/IOneInchPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(address,address,uint256,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ISwapRouterUniV3.sol:ISwapRouterUniV3": {
        "src": "contracts/interface/ISwapRouterUniV3.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETH.sol:IWETH": {
        "src": "contracts/interface/IWETH.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETHGateway.sol:IWETHGateway": {
        "src": "contracts/interface/IWETHGateway.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "depositETH(address,address,uint16)",
          "withdrawETH(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IZeroxV2.sol:IZeroxV2": {
        "src": "contracts/interface/IZeroxV2.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "marketSellOrdersNoThrow(struct LibOrderV2.Order[],uint256,bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IZeroxV4.sol:IZeroxV4": {
        "src": "contracts/interface/IZeroxV4.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "fillRfqOrder((address,address,uint128,uint128,address,address,address,bytes32,uint64,uint256),(uint8,uint8,bytes32,bytes32),uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/LibBytes.sol:LibBytes": {
        "src": "contracts/library/LibBytes.sol:21",
        "version": {
          "withMetadata": "bb7df4b68d712d914fd61ddb1493f64062f3108fe81258bdc89fadcc9f38ed6f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/LibBytes.sol:LibBytes",
          "contracts/library/LibBytesRichErrors.sol:LibBytesRichErrors",
          "contracts/library/LibRichErrors.sol:LibRichErrors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/LibBytesRichErrors.sol:LibBytesRichErrors": {
        "src": "contracts/library/LibBytesRichErrors.sol:17",
        "version": {
          "withMetadata": "361b7a6dbfb65c77383d500cf6ec036757ad071872ccadcc45f1b793a358ef2a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/LibRichErrors.sol:LibRichErrors": {
        "src": "contracts/library/LibRichErrors.sol:17",
        "version": {
          "withMetadata": "dc038dc9361ba836b2c54ebc43d0a70403b7aa6791c80d3a2e0825cccf785f70",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "1cca05a314d7a750e179692a053f1b2e220b8d3e8bbf70eca6c91b734d29b07e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/oneinch/Coin98OneInch.sol:Coin98ZeroxV2": {
        "src": "contracts/oneinch/Coin98OneInch.sol:6",
        "version": {
          "withMetadata": "9afa14f799706b04c9b4fc4eb410b0ade8891784f04d7079529b1df1b98fcd04",
          "withoutMetadata": "65645a338544fae545c7c67a62e8d641a88bbc046ee5a27cc6376493410657a8",
          "linkedWithoutMetadata": "65645a338544fae545c7c67a62e8d641a88bbc046ee5a27cc6376493410657a8"
        },
        "inherit": [
          "contracts/oneinch/OneInchPool.sol:OneInchPool"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/oneinch/OneInchPool.sol:OneInchPool": {
        "src": "contracts/oneinch/OneInchPool.sol:9",
        "version": {
          "withMetadata": "bf1e2db959b82464e95d4e3a8a1a9888a72075ad4a38a3adcaee5f3c8ecdebd6",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/utils/WethProvider.sol:WethProvider": {
        "src": "contracts/utils/WethProvider.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethProvider",
            "src": "contracts/utils/WethProvider.sol:7"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts/utils/WethProvider.sol:5"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "17b297cef34f6f78217448cd9a6a785b6ed743c25dcf719bd3b8f89287f99d38",
          "withoutMetadata": "8c273a08604f9961d3dd4eef65f98472c7c9ad080b52a03a40f177c856c6c890",
          "linkedWithoutMetadata": "8c273a08604f9961d3dd4eef65f98472c7c9ad080b52a03a40f177c856c6c890"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "11953e8f3a67eb73209b7fcb0d1b95ed7e9c588586563fb0ff6dd8cc221ceefd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f0fa64385ca28038911a9b8db894da62e990bd777bcce13a98382f11d748f48d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/PancakeStableSwap/PancakeStableSwap.sol:PancakeStableSwap": {
        "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:10",
        "version": {
          "withMetadata": "e04b81aa130b7ec0be597a141d5c60fc91f52a0c64aa802cb5977ffd099f23bc",
          "withoutMetadata": "aa3c2b1b7531f16b95ce5fdc9be50b29eeffe879cc160ab89809bbe364e7972d",
          "linkedWithoutMetadata": "aa3c2b1b7531f16b95ce5fdc9be50b29eeffe879cc160ab89809bbe364e7972d"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "()",
          "initialize(address[2],uint256,uint256,uint256,address)",
          "A()",
          "get_virtual_price()",
          "calc_token_amount(uint256[2],bool)",
          "add_liquidity(uint256[2],uint256)",
          "get_dy(uint256,uint256,uint256)",
          "get_dy_underlying(uint256,uint256,uint256)",
          "exchange(uint256,uint256,uint256,uint256)",
          "remove_liquidity(uint256,uint256[2])",
          "remove_liquidity_imbalance(uint256[2],uint256)",
          "calc_withdraw_one_coin(uint256,uint256)",
          "remove_liquidity_one_coin(uint256,uint256,uint256)",
          "ramp_A(uint256,uint256)",
          "stop_rampget_A()",
          "commit_new_fee(uint256,uint256)",
          "apply_new_fee()",
          "revert_new_parameters()",
          "admin_balances(uint256)",
          "withdraw_admin_fees()",
          "donate_admin_fees()",
          "kill_me()",
          "unkill_me()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakeStableSwap",
            "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:88"
          },
          {
            "kind": "state-variable-immutable",
            "name": "STABLESWAP_FACTORY",
            "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:49"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "PRECISION_MUL",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)2_storage",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:18"
            },
            {
              "label": "RATES",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_uint256)2_storage",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:19"
            },
            {
              "label": "coins",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)2_storage",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:29"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)2_storage",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:30"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:31"
            },
            {
              "label": "admin_fee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:32"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(PancakeStableSwapLP)4517",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:34"
            },
            {
              "label": "initial_A",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:36"
            },
            {
              "label": "future_A",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:37"
            },
            {
              "label": "initial_A_time",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:38"
            },
            {
              "label": "future_A_time",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:39"
            },
            {
              "label": "admin_actions_deadline",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:41"
            },
            {
              "label": "future_fee",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:42"
            },
            {
              "label": "future_admin_fee",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:43"
            },
            {
              "label": "kill_deadline",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:45"
            },
            {
              "label": "is_killed",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:47"
            },
            {
              "label": "isInitialized",
              "offset": 1,
              "slot": "21",
              "type": "t_bool",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)2_storage": {
              "label": "address[2]",
              "numberOfBytes": "64"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(PancakeStableSwapLP)4517": {
              "label": "contract PancakeStableSwapLP",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/PancakeStableSwap/PancakeStableSwapLP.sol:PancakeStableSwapLP": {
        "src": "contracts/PancakeStableSwap/PancakeStableSwapLP.sol:6",
        "version": {
          "withMetadata": "085fb307e3daa0f0f214f3367856728266c06c74b00d3e3fbde4ab66626a6e82",
          "withoutMetadata": "37f0d09767de279f4a6cbfa2497af5a129ae480d702087c0b4f2b85b26aaf56b",
          "linkedWithoutMetadata": "37f0d09767de279f4a6cbfa2497af5a129ae480d702087c0b4f2b85b26aaf56b"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakeStableSwapLP",
            "src": "contracts/PancakeStableSwap/PancakeStableSwapLP.sol:9"
          },
          {
            "kind": "state-variable-immutable",
            "name": "miner",
            "src": "contracts/PancakeStableSwap/PancakeStableSwapLP.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "17b297cef34f6f78217448cd9a6a785b6ed743c25dcf719bd3b8f89287f99d38",
          "withoutMetadata": "8c273a08604f9961d3dd4eef65f98472c7c9ad080b52a03a40f177c856c6c890",
          "linkedWithoutMetadata": "8c273a08604f9961d3dd4eef65f98472c7c9ad080b52a03a40f177c856c6c890"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "11953e8f3a67eb73209b7fcb0d1b95ed7e9c588586563fb0ff6dd8cc221ceefd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f0fa64385ca28038911a9b8db894da62e990bd777bcce13a98382f11d748f48d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "76f44b5d896e4b9252ad829cbe7b0d05e2ff8ff358fb7ecc3191f7b5a7750d5e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV2/Coin98ZeroxV2.sol:Coin98ZeroxV2": {
        "src": "contracts/0xV2/Coin98ZeroxV2.sol:6",
        "version": {
          "withMetadata": "b5a7406c46644fac4a43faae53b0323381fcc6fc711116bc14dae93c531c7240",
          "withoutMetadata": "5c286a030d8bf557838ee1c7a903df236e4bf14c7213a9a49aa99df64fdae73f",
          "linkedWithoutMetadata": "5c286a030d8bf557838ee1c7a903df236e4bf14c7213a9a49aa99df64fdae73f"
        },
        "inherit": [
          "contracts/0xV2/ZeroxV2.sol:ZeroxV2",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address,address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98ZeroxV2",
            "src": "contracts/0xV2/Coin98ZeroxV2.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV2/LibOrderV2.sol:LibOrderV2": {
        "src": "contracts/0xV2/LibOrderV2.sol:4",
        "version": {
          "withMetadata": "bc9a6c4c9304a6e60356d9241da3a156cc63c2b42a041865ab409a0346f32ce0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV2/ZeroxV2.sol:ZeroxV2": {
        "src": "contracts/0xV2/ZeroxV2.sol:9",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "contracts/library/LibBytes.sol:LibBytes",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ZeroxV2",
            "src": "contracts/0xV2/ZeroxV2.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "erc20Proxy",
            "src": "contracts/0xV2/ZeroxV2.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV4/Coin98ZeroxV4.sol:Coin98ZeroxV4": {
        "src": "contracts/0xV4/Coin98ZeroxV4.sol:6",
        "version": {
          "withMetadata": "6599b4276b7be2ef23d8915edf6ed62eb21b72e86cea79869db913d07a568e1d",
          "withoutMetadata": "ac2d5bf4377642f6696c864f4345cf626e56d0a19394af3709575196cbb0d253",
          "linkedWithoutMetadata": "ac2d5bf4377642f6696c864f4345cf626e56d0a19394af3709575196cbb0d253"
        },
        "inherit": [
          "contracts/0xV4/ZeroxV4.sol:ZeroxV4"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV4/LibOrderV4.sol:LibOrderV4": {
        "src": "contracts/0xV4/LibOrderV4.sol:4",
        "version": {
          "withMetadata": "facc74890dd979fc109f4cadadf181280c6afc3b05d306400fd5d0b60023bd0e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV4/ZeroxV4.sol:ZeroxV4": {
        "src": "contracts/0xV4/ZeroxV4.sol:9",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AaveeV2/AaveeV2.sol:Aavee2": {
        "src": "contracts/AaveeV2/AaveeV2.sol:7",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Aavee2",
            "src": "contracts/AaveeV2/AaveeV2.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "refCode",
            "src": "contracts/AaveeV2/AaveeV2.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "lendingPool",
            "src": "contracts/AaveeV2/AaveeV2.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "wethGateway",
            "src": "contracts/AaveeV2/AaveeV2.sol:15"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AaveeV2/Coin98AaveeV2.sol:Coin98AaveeV2": {
        "src": "contracts/AaveeV2/Coin98AaveeV2.sol:6",
        "version": {
          "withMetadata": "411983edb964fb16f5e81f0872886de01ee653a23236a845c09edd6586de787e",
          "withoutMetadata": "ee53b53dd2d278d44da8601626a708da0912bc678f6eedf71844126b38c48a0e",
          "linkedWithoutMetadata": "ee53b53dd2d278d44da8601626a708da0912bc678f6eedf71844126b38c48a0e"
        },
        "inherit": [
          "contracts/AaveeV2/AaveeV2.sol:Aavee2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(uint16,address,address)",
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98AaveeV2",
            "src": "contracts/AaveeV2/Coin98AaveeV2.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BUSD/BUSD.sol:BUSD": {
        "src": "contracts/BUSD/BUSD.sol:7",
        "version": {
          "withMetadata": "3b3e08ecb40fa2298a516296a762e15a65fdf67951113ee80b603733206329f6",
          "withoutMetadata": "da4dc9b2644bffdb3dc2fd4128872594b43c4adc32dbc931ebdf2392b63a4185",
          "linkedWithoutMetadata": "da4dc9b2644bffdb3dc2fd4128872594b43c4adc32dbc931ebdf2392b63a4185"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mintToken(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BUSD",
            "src": "contracts/BUSD/BUSD.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV1/BalancerV1.sol:BalancerV1": {
        "src": "contracts/BalancerV1/BalancerV1.sol:9",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV1/Coin98BalancerV1.sol:Coin98BalancerV1": {
        "src": "contracts/BalancerV1/Coin98BalancerV1.sol:4",
        "version": {
          "withMetadata": "8c1fee6b21c6c420f0a86ed227e392edb824f1c51c88bd5b25ce10c4ef3bf57e",
          "withoutMetadata": "819327aef61a36a51f0bc28912cddd021c1b9de9d801fcdcfaf831307d6b17ce",
          "linkedWithoutMetadata": "819327aef61a36a51f0bc28912cddd021c1b9de9d801fcdcfaf831307d6b17ce"
        },
        "inherit": [
          "contracts/BalancerV1/BalancerV1.sol:BalancerV1",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98BalancerV1",
            "src": "contracts/BalancerV1/Coin98BalancerV1.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/BalancerV2.sol:BalancerV2": {
        "src": "contracts/BalancerV2/BalancerV2.sol:5",
        "version": {
          "withMetadata": "453da3eaa925f2f610706ac1d38efcbdb575b03aa3269095962b91df9161a589",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/Coin98BalancerV2.sol:Coin98BalancerV1": {
        "src": "contracts/BalancerV2/Coin98BalancerV2.sol:4",
        "version": {
          "withMetadata": "09d02dd3032c5af536cc0b59b130533582f14ca4d33022e34debbaf555639544",
          "withoutMetadata": "9af3c8a5d2a3da08082afc9af11d01c1f43be280fbfee1fad2af84309d5fc7d9",
          "linkedWithoutMetadata": "9af3c8a5d2a3da08082afc9af11d01c1f43be280fbfee1fad2af84309d5fc7d9"
        },
        "inherit": [
          "contracts/BalancerV2/BalancerV2.sol:BalancerV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Curve/Coin98Curve.sol:Coin98Adapter1": {
        "src": "contracts/Curve/Coin98Curve.sol:3",
        "version": {
          "withMetadata": "b27ac3c5c1ebc9a38b29ebfa7f1c363fd438b42ea2776901b7ae60d3a8b5866d",
          "withoutMetadata": "8051649b009b38ead9b83c651d64d7eada7f88a48bef7d49c358d668a31fbb21",
          "linkedWithoutMetadata": "8051649b009b38ead9b83c651d64d7eada7f88a48bef7d49c358d668a31fbb21"
        },
        "inherit": [
          "contracts/Curve/curve.sol:Curve"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Curve/curve.sol:Curve": {
        "src": "contracts/Curve/curve.sol:8",
        "version": {
          "withMetadata": "4186ceacf93973d2727ea607a91579b348918d7fbcb58d8b7026ec322e38ce7d",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/Coin98CurveV2.sol:Coin98CurveV2": {
        "src": "contracts/CurveV2/Coin98CurveV2.sol:9",
        "version": {
          "withMetadata": "b7bed74fbd6154380c3c390e69b4185e5446a462a80c03362adc8dc0ab0f73f7",
          "withoutMetadata": "f426d7df13ba49f68b420dd05327f0aa5115a58785f19af59ca63cb84a656599",
          "linkedWithoutMetadata": "f426d7df13ba49f68b420dd05327f0aa5115a58785f19af59ca63cb84a656599"
        },
        "inherit": [
          "contracts/CurveV2/CurveV2.sol:CurveV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/CurveV2.sol:CurveV2": {
        "src": "contracts/CurveV2/CurveV2.sol:7",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:DemoAdapter1": {
        "src": "contracts/DemoAdapter(Full).sol:30",
        "version": {
          "withMetadata": "c34f3097b279881411cc185292c33ce94ad93333dac1b2e0f6749dbfdce0efb7",
          "withoutMetadata": "b35b2c54bdfcfde1b6afa6a108d9a083e5e043aeb9ec7e01360e3ce18dd0f442",
          "linkedWithoutMetadata": "b35b2c54bdfcfde1b6afa6a108d9a083e5e043aeb9ec7e01360e3ce18dd0f442"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/DemoAdapter(Full).sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapRoutes(uint256[],address,address,bytes,address)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter1",
            "src": "contracts/DemoAdapter(Full).sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter(Full).sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter(Full).sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter(Full).sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:33"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:35"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:36"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:37"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(Partner)3718_storage)",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:67"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)3718_storage)": {
              "label": "mapping(address => struct DemoAdapter1.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)3718_storage": {
              "label": "struct DemoAdapter1.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:EthReceiver": {
        "src": "contracts/DemoAdapter(Full).sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:IExecutor": {
        "src": "contracts/DemoAdapter(Full).sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter(Full).sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:SwapAdapter": {
        "src": "contracts/DemoAdapter(Full).sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:DemoAdapter": {
        "src": "contracts/DemoAdapter.sol:25",
        "version": {
          "withMetadata": "97f742487f92fb444658ee9acd9c186195ef105a4142dfc86897c5fb92e7fa39",
          "withoutMetadata": "3c9ebbce75e25e57e8d70ffb1509b4fd3fa5ccacfb0cd0ab967bb7c3ba4b7acc",
          "linkedWithoutMetadata": "3c9ebbce75e25e57e8d70ffb1509b4fd3fa5ccacfb0cd0ab967bb7c3ba4b7acc"
        },
        "inherit": [
          "contracts/DemoAdapter.sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapRoutes(uint256,address,address,(address[],uint256[],uint256[],uint256[],bytes[]))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter",
            "src": "contracts/DemoAdapter.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:28"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:30"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:31"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:32"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Partner)4291_storage)",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:62"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)4291_storage)": {
              "label": "mapping(address => struct DemoAdapter.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)4291_storage": {
              "label": "struct DemoAdapter.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:EthReceiver": {
        "src": "contracts/DemoAdapter.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:SwapAdapter": {
        "src": "contracts/DemoAdapter.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DoDoV2/Coin98DoDoV2.sol:Coin98DoDoV2": {
        "src": "contracts/DoDoV2/Coin98DoDoV2.sol:7",
        "inherit": [
          "contracts/DoDoV2/DoDoV2.sol:DoDoV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DoDoV2/DoDoV2.sol:DoDoV2": {
        "src": "contracts/DoDoV2/DoDoV2.sol:8",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:Executor": {
        "src": "contracts/Executor.sol:14",
        "version": {
          "withMetadata": "40a808e675defcbd468ae12c3f641eb470a4c8f6d0f16ac8c07e061941e54fa7",
          "withoutMetadata": "89b8150b6fb2e3eb32c8df83eff0a038234024d65010db2fb83ed7a9cc5215f7",
          "linkedWithoutMetadata": "89b8150b6fb2e3eb32c8df83eff0a038234024d65010db2fb83ed7a9cc5215f7"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "execution(bytes,address,address)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/Executor.sol:57"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/Executor.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:SwapAdaptor": {
        "src": "contracts/Executor.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "28a042c28fb0cc1abf2714a59879fa29bc86b53dc03b7abb148a629b2e322fb6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/PancakeStableSwap/PancakeStableSwap.sol:PancakeStableSwap": {
        "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:10",
        "version": {
          "withMetadata": "e04b81aa130b7ec0be597a141d5c60fc91f52a0c64aa802cb5977ffd099f23bc",
          "withoutMetadata": "aa3c2b1b7531f16b95ce5fdc9be50b29eeffe879cc160ab89809bbe364e7972d",
          "linkedWithoutMetadata": "aa3c2b1b7531f16b95ce5fdc9be50b29eeffe879cc160ab89809bbe364e7972d"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "()",
          "initialize(address[2],uint256,uint256,uint256,address)",
          "A()",
          "get_virtual_price()",
          "calc_token_amount(uint256[2],bool)",
          "add_liquidity(uint256[2],uint256)",
          "get_dy(uint256,uint256,uint256)",
          "get_dy_underlying(uint256,uint256,uint256)",
          "exchange(uint256,uint256,uint256,uint256)",
          "remove_liquidity(uint256,uint256[2])",
          "remove_liquidity_imbalance(uint256[2],uint256)",
          "calc_withdraw_one_coin(uint256,uint256)",
          "remove_liquidity_one_coin(uint256,uint256,uint256)",
          "ramp_A(uint256,uint256)",
          "stop_rampget_A()",
          "commit_new_fee(uint256,uint256)",
          "apply_new_fee()",
          "revert_new_parameters()",
          "admin_balances(uint256)",
          "withdraw_admin_fees()",
          "donate_admin_fees()",
          "kill_me()",
          "unkill_me()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakeStableSwap",
            "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:88"
          },
          {
            "kind": "state-variable-immutable",
            "name": "STABLESWAP_FACTORY",
            "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:49"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "PRECISION_MUL",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)2_storage",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:18"
            },
            {
              "label": "RATES",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_uint256)2_storage",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:19"
            },
            {
              "label": "coins",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)2_storage",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:29"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)2_storage",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:30"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:31"
            },
            {
              "label": "admin_fee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:32"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(PancakeStableSwapLP)8188",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:34"
            },
            {
              "label": "initial_A",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:36"
            },
            {
              "label": "future_A",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:37"
            },
            {
              "label": "initial_A_time",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:38"
            },
            {
              "label": "future_A_time",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:39"
            },
            {
              "label": "admin_actions_deadline",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:41"
            },
            {
              "label": "future_fee",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:42"
            },
            {
              "label": "future_admin_fee",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:43"
            },
            {
              "label": "kill_deadline",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:45"
            },
            {
              "label": "is_killed",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:47"
            },
            {
              "label": "isInitialized",
              "offset": 1,
              "slot": "21",
              "type": "t_bool",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)2_storage": {
              "label": "address[2]",
              "numberOfBytes": "64"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(PancakeStableSwapLP)8188": {
              "label": "contract PancakeStableSwapLP",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/PancakeStableSwap/PancakeStableSwapLP.sol:PancakeStableSwapLP": {
        "src": "contracts/PancakeStableSwap/PancakeStableSwapLP.sol:6",
        "version": {
          "withMetadata": "085fb307e3daa0f0f214f3367856728266c06c74b00d3e3fbde4ab66626a6e82",
          "withoutMetadata": "37f0d09767de279f4a6cbfa2497af5a129ae480d702087c0b4f2b85b26aaf56b",
          "linkedWithoutMetadata": "37f0d09767de279f4a6cbfa2497af5a129ae480d702087c0b4f2b85b26aaf56b"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakeStableSwapLP",
            "src": "contracts/PancakeStableSwap/PancakeStableSwapLP.sol:9"
          },
          {
            "kind": "state-variable-immutable",
            "name": "miner",
            "src": "contracts/PancakeStableSwap/PancakeStableSwapLP.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/USDC/USDC.sol:USDC": {
        "src": "contracts/USDC/USDC.sol:7",
        "version": {
          "withMetadata": "6f5f2c49fef470dd5c67091387d2491ba863e394c6927c6d86b5554961c6b280",
          "withoutMetadata": "fb675ab4d642b67af7d693f0ee7f81b41e73f13403926790a6b9f20f76fcece0",
          "linkedWithoutMetadata": "fb675ab4d642b67af7d693f0ee7f81b41e73f13403926790a6b9f20f76fcece0"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mintToken(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "USDC",
            "src": "contracts/USDC/USDC.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/USDT/USDT.sol:USDT": {
        "src": "contracts/USDT/USDT.sol:7",
        "version": {
          "withMetadata": "7dc276e39e33494be1e14bf12c304cf63a2211478029172fabbebe4e0eb4f985",
          "withoutMetadata": "03d3595dbe03ea121af0d6d87f87ef6cfa8a988f8681e87ef251970aa6cde97e",
          "linkedWithoutMetadata": "03d3595dbe03ea121af0d6d87f87ef6cfa8a988f8681e87ef251970aa6cde97e"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mintToken(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "USDT",
            "src": "contracts/USDT/USDT.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:12",
        "version": {
          "withMetadata": "352e3bf23cbf6520382ea3c7dd45ac4be74fcd0159e482568ba4d6096f9cc5df",
          "withoutMetadata": "57ce19fa8bd05d76cbf6910ee9359029ea65b0cacd0002deb4fbbebde77d8a0f",
          "linkedWithoutMetadata": "57ce19fa8bd05d76cbf6910ee9359029ea65b0cacd0002deb4fbbebde77d8a0f"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:pairSwap": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap.sol:Coin98Uniswap": {
        "src": "contracts/Uniswap/Coin98Uniswap.sol:6",
        "version": {
          "withMetadata": "825b07622876320540051cb8fef9a4366e3b3db35e9003141bc1b6d2f81b402f",
          "withoutMetadata": "ecabb90c0802306e6ef7be095e352494f8e6e787e4b8a292f8cbf88e55141d2a",
          "linkedWithoutMetadata": "ecabb90c0802306e6ef7be095e352494f8e6e787e4b8a292f8cbf88e55141d2a"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/UniswapV3/Coin98UniswapV3.sol:Coin98UniswapV3": {
        "src": "contracts/UniswapV3/Coin98UniswapV3.sol:6",
        "version": {
          "withMetadata": "1fb3b7f98abb450e8eddf119a6ebcb8adf2999f4f19caff06c280be9e104482b",
          "withoutMetadata": "dfa230e8be99ab3d6fc95610f33e24029715b22267e2ee9d89bda79324dc2e8f",
          "linkedWithoutMetadata": "dfa230e8be99ab3d6fc95610f33e24029715b22267e2ee9d89bda79324dc2e8f"
        },
        "inherit": [
          "contracts/UniswapV3/UniswapV3.sol:UniswapV3"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/UniswapV3/UniswapV3.sol:UniswapV3": {
        "src": "contracts/UniswapV3/UniswapV3.sol:9",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IAaveLendingPool.sol:IAaveLendingPool": {
        "src": "contracts/interface/IAaveLendingPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,uint256,address,uint16)",
          "withdraw(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IAdapter.sol:IAdapter": {
        "src": "contracts/interface/IAdapter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IAsset.sol:IAsset": {
        "src": "contracts/interface/IAsset.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerPool.sol:IBalancerPool": {
        "src": "contracts/interface/IBalancerPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactAmountIn(address,uint256,address,uint256,uint256)",
          "swapExactAmountOut(address,uint256,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerProxy.sol:IBalancerProxy": {
        "src": "contracts/interface/IBalancerProxy.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "batchSwapExactIn(struct IBalancerProxy.Swap[],address,address,uint256,uint256)",
          "batchSwapExactOut(struct IBalancerProxy.Swap[],address,address,uint256)",
          "batchEthInSwapExactIn(struct IBalancerProxy.Swap[],address,uint256)",
          "batchEthOutSwapExactIn(struct IBalancerProxy.Swap[],address,uint256,uint256)",
          "batchEthInSwapExactOut(struct IBalancerProxy.Swap[],address)",
          "batchEthOutSwapExactOut(struct IBalancerProxy.Swap[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerV2.sol:IBalancerV2": {
        "src": "contracts/interface/IBalancerV2.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address payable,bool),uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurveEthPool.sol:ICurveEthPool": {
        "src": "contracts/interface/ICurveEthPool.sol:2",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange(int128,int128,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurvePool.sol:ICurvePool": {
        "src": "contracts/interface/ICurvePool.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(int128,int128,uint256,uint256)",
          "exchange(int128,int128,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurveV2Pool.sol:ICurveV2Pool": {
        "src": "contracts/interface/ICurveV2Pool.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(uint256,uint256,uint256,uint256)",
          "exchange(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IDODOV2Proxy.sol:IDODOV2Proxy": {
        "src": "contracts/interface/IDODOV2Proxy.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "dodoSwapV2ETHToToken(address,uint256,address[],uint256,bool,uint256)",
          "dodoSwapV2TokenToETH(address,uint256,uint256,address[],uint256,bool,uint256)",
          "dodoSwapV2TokenToToken(address,address,uint256,uint256,address[],uint256,bool,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IMstable.sol:IMStable": {
        "src": "contracts/interface/IMstable.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256,uint256,address)",
          "swap(address,address,uint256,uint256,address)",
          "redeem(address,uint256,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IOneInchPool.sol:IOneInchPool": {
        "src": "contracts/interface/IOneInchPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(address,address,uint256,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ISwapRouterUniV3.sol:ISwapRouterUniV3": {
        "src": "contracts/interface/ISwapRouterUniV3.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETH.sol:IWETH": {
        "src": "contracts/interface/IWETH.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETHGateway.sol:IWETHGateway": {
        "src": "contracts/interface/IWETHGateway.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "depositETH(address,address,uint16)",
          "withdrawETH(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IZeroxV2.sol:IZeroxV2": {
        "src": "contracts/interface/IZeroxV2.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "marketSellOrdersNoThrow(struct LibOrderV2.Order[],uint256,bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IZeroxV4.sol:IZeroxV4": {
        "src": "contracts/interface/IZeroxV4.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "fillRfqOrder((address,address,uint128,uint128,address,address,address,bytes32,uint64,uint256),(uint8,uint8,bytes32,bytes32),uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/LibBytes.sol:LibBytes": {
        "src": "contracts/library/LibBytes.sol:21",
        "version": {
          "withMetadata": "bb7df4b68d712d914fd61ddb1493f64062f3108fe81258bdc89fadcc9f38ed6f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/LibBytes.sol:LibBytes",
          "contracts/library/LibBytesRichErrors.sol:LibBytesRichErrors",
          "contracts/library/LibRichErrors.sol:LibRichErrors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/LibBytesRichErrors.sol:LibBytesRichErrors": {
        "src": "contracts/library/LibBytesRichErrors.sol:17",
        "version": {
          "withMetadata": "361b7a6dbfb65c77383d500cf6ec036757ad071872ccadcc45f1b793a358ef2a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/LibRichErrors.sol:LibRichErrors": {
        "src": "contracts/library/LibRichErrors.sol:17",
        "version": {
          "withMetadata": "dc038dc9361ba836b2c54ebc43d0a70403b7aa6791c80d3a2e0825cccf785f70",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "9d3b7e41e8d2c8ceb33dcbe71e7ccbdaaa124d7625a6af8136acbd62ac5f6a51",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/oneinch/Coin98OneInch.sol:Coin98ZeroxV2": {
        "src": "contracts/oneinch/Coin98OneInch.sol:6",
        "version": {
          "withMetadata": "0fa754356a6af38d05843146fab3240d97b84c284ecb50f012b0a6b17a6c2055",
          "withoutMetadata": "65645a338544fae545c7c67a62e8d641a88bbc046ee5a27cc6376493410657a8",
          "linkedWithoutMetadata": "65645a338544fae545c7c67a62e8d641a88bbc046ee5a27cc6376493410657a8"
        },
        "inherit": [
          "contracts/oneinch/OneInchPool.sol:OneInchPool"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/oneinch/OneInchPool.sol:OneInchPool": {
        "src": "contracts/oneinch/OneInchPool.sol:9",
        "version": {
          "withMetadata": "ddeaa27a924d37574c7c2ffbd37e12cf2be99da97ab71ad5b93e3f626df38d3d",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/utils/WethProvider.sol:WethProvider": {
        "src": "contracts/utils/WethProvider.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethProvider",
            "src": "contracts/utils/WethProvider.sol:7"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts/utils/WethProvider.sol:5"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b807c9fee398b01c32aa97580094c0ec9cf9b88767effafd6780584ada2debf7",
          "withoutMetadata": "bb66373bf0003888a6dbd709f1b8c30d38d9f0e8204682a98d274a34e7266eed",
          "linkedWithoutMetadata": "bb66373bf0003888a6dbd709f1b8c30d38d9f0e8204682a98d274a34e7266eed"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/PancakeStableSwap/PancakeStableSwap.sol:PancakeStableSwap": {
        "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:10",
        "version": {
          "withMetadata": "dd8a9c8d4eb07416ff3a0ea6d989ff2470736ebf1ae31982265c1dbbc16d60ee",
          "withoutMetadata": "1ea0b15c07fd15c4f4d689efa942f771a5d20930e2deec4cbeede14a320bc809",
          "linkedWithoutMetadata": "1ea0b15c07fd15c4f4d689efa942f771a5d20930e2deec4cbeede14a320bc809"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "()",
          "initialize(address[2],uint256,uint256,uint256,address)",
          "A()",
          "get_virtual_price()",
          "calc_token_amount(uint256[2],bool)",
          "add_liquidity(uint256[2],uint256)",
          "get_dy(uint256,uint256,uint256)",
          "get_dy_underlying(uint256,uint256,uint256)",
          "exchange(uint256,uint256,uint256,uint256)",
          "remove_liquidity(uint256,uint256[2])",
          "remove_liquidity_imbalance(uint256[2],uint256)",
          "calc_withdraw_one_coin(uint256,uint256)",
          "remove_liquidity_one_coin(uint256,uint256,uint256)",
          "ramp_A(uint256,uint256)",
          "stop_rampget_A()",
          "commit_new_fee(uint256,uint256)",
          "apply_new_fee()",
          "revert_new_parameters()",
          "admin_balances(uint256)",
          "withdraw_admin_fees()",
          "donate_admin_fees()",
          "kill_me()",
          "unkill_me()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakeStableSwap",
            "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:88"
          },
          {
            "kind": "state-variable-immutable",
            "name": "STABLESWAP_FACTORY",
            "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:49"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "PRECISION_MUL",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)2_storage",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:18"
            },
            {
              "label": "RATES",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_uint256)2_storage",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:19"
            },
            {
              "label": "coins",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)2_storage",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:29"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)2_storage",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:30"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:31"
            },
            {
              "label": "admin_fee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:32"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(PancakeStableSwapLP)4517",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:34"
            },
            {
              "label": "initial_A",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:36"
            },
            {
              "label": "future_A",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:37"
            },
            {
              "label": "initial_A_time",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:38"
            },
            {
              "label": "future_A_time",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:39"
            },
            {
              "label": "admin_actions_deadline",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:41"
            },
            {
              "label": "future_fee",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:42"
            },
            {
              "label": "future_admin_fee",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:43"
            },
            {
              "label": "kill_deadline",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:45"
            },
            {
              "label": "is_killed",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:47"
            },
            {
              "label": "isInitialized",
              "offset": 1,
              "slot": "21",
              "type": "t_bool",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/PancakeStableSwap.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)2_storage": {
              "label": "address[2]",
              "numberOfBytes": "64"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(PancakeStableSwapLP)4517": {
              "label": "contract PancakeStableSwapLP",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/PancakeStableSwap/PancakeStableSwapLP.sol:PancakeStableSwapLP": {
        "src": "contracts/PancakeStableSwap/PancakeStableSwapLP.sol:6",
        "version": {
          "withMetadata": "8d0d1b34f11a01b0e8bab645fff7a797c65dbd6eb134b8dd11b4253880ece968",
          "withoutMetadata": "fee4a70d770806390586aef316ea6bebf8770a3dab4a9729f463bf672960f208",
          "linkedWithoutMetadata": "fee4a70d770806390586aef316ea6bebf8770a3dab4a9729f463bf672960f208"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakeStableSwapLP",
            "src": "contracts/PancakeStableSwap/PancakeStableSwapLP.sol:9"
          },
          {
            "kind": "state-variable-immutable",
            "name": "miner",
            "src": "contracts/PancakeStableSwap/PancakeStableSwapLP.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b807c9fee398b01c32aa97580094c0ec9cf9b88767effafd6780584ada2debf7",
          "withoutMetadata": "bb66373bf0003888a6dbd709f1b8c30d38d9f0e8204682a98d274a34e7266eed",
          "linkedWithoutMetadata": "bb66373bf0003888a6dbd709f1b8c30d38d9f0e8204682a98d274a34e7266eed"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/PancakeStableSwap/PancakeStableSwapLP.sol:PancakeStableSwapLP": {
        "src": "contracts/PancakeStableSwap/PancakeStableSwapLP.sol:6",
        "version": {
          "withMetadata": "8d0d1b34f11a01b0e8bab645fff7a797c65dbd6eb134b8dd11b4253880ece968",
          "withoutMetadata": "fee4a70d770806390586aef316ea6bebf8770a3dab4a9729f463bf672960f208",
          "linkedWithoutMetadata": "fee4a70d770806390586aef316ea6bebf8770a3dab4a9729f463bf672960f208"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakeStableSwapLP",
            "src": "contracts/PancakeStableSwap/PancakeStableSwapLP.sol:9"
          },
          {
            "kind": "state-variable-immutable",
            "name": "miner",
            "src": "contracts/PancakeStableSwap/PancakeStableSwapLP.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/PancakeStableSwap/StableSwap.sol:PancakeStableSwap": {
        "src": "contracts/PancakeStableSwap/StableSwap.sol:10",
        "version": {
          "withMetadata": "999f5133e187957cf64ecf31c6ebbb2a3c8651f6cb14491dbac758ea9fb4ed1a",
          "withoutMetadata": "1ea0b15c07fd15c4f4d689efa942f771a5d20930e2deec4cbeede14a320bc809",
          "linkedWithoutMetadata": "1ea0b15c07fd15c4f4d689efa942f771a5d20930e2deec4cbeede14a320bc809"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "()",
          "initialize(address[2],uint256,uint256,uint256,address)",
          "A()",
          "get_virtual_price()",
          "calc_token_amount(uint256[2],bool)",
          "add_liquidity(uint256[2],uint256)",
          "get_dy(uint256,uint256,uint256)",
          "get_dy_underlying(uint256,uint256,uint256)",
          "exchange(uint256,uint256,uint256,uint256)",
          "remove_liquidity(uint256,uint256[2])",
          "remove_liquidity_imbalance(uint256[2],uint256)",
          "calc_withdraw_one_coin(uint256,uint256)",
          "remove_liquidity_one_coin(uint256,uint256,uint256)",
          "ramp_A(uint256,uint256)",
          "stop_rampget_A()",
          "commit_new_fee(uint256,uint256)",
          "apply_new_fee()",
          "revert_new_parameters()",
          "admin_balances(uint256)",
          "withdraw_admin_fees()",
          "donate_admin_fees()",
          "kill_me()",
          "unkill_me()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakeStableSwap",
            "src": "contracts/PancakeStableSwap/StableSwap.sol:88"
          },
          {
            "kind": "state-variable-immutable",
            "name": "STABLESWAP_FACTORY",
            "src": "contracts/PancakeStableSwap/StableSwap.sol:49"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "PRECISION_MUL",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)2_storage",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/StableSwap.sol:18"
            },
            {
              "label": "RATES",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_uint256)2_storage",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/StableSwap.sol:19"
            },
            {
              "label": "coins",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)2_storage",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/StableSwap.sol:29"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)2_storage",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/StableSwap.sol:30"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/StableSwap.sol:31"
            },
            {
              "label": "admin_fee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/StableSwap.sol:32"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(PancakeStableSwapLP)1589",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/StableSwap.sol:34"
            },
            {
              "label": "initial_A",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/StableSwap.sol:36"
            },
            {
              "label": "future_A",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/StableSwap.sol:37"
            },
            {
              "label": "initial_A_time",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/StableSwap.sol:38"
            },
            {
              "label": "future_A_time",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/StableSwap.sol:39"
            },
            {
              "label": "admin_actions_deadline",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/StableSwap.sol:41"
            },
            {
              "label": "future_fee",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/StableSwap.sol:42"
            },
            {
              "label": "future_admin_fee",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/StableSwap.sol:43"
            },
            {
              "label": "kill_deadline",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/StableSwap.sol:45"
            },
            {
              "label": "is_killed",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/StableSwap.sol:47"
            },
            {
              "label": "isInitialized",
              "offset": 1,
              "slot": "21",
              "type": "t_bool",
              "contract": "PancakeStableSwap",
              "src": "contracts/PancakeStableSwap/StableSwap.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)2_storage": {
              "label": "address[2]",
              "numberOfBytes": "64"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(PancakeStableSwapLP)1589": {
              "label": "contract PancakeStableSwapLP",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/BalancerV2.sol:BalancerV2": {
        "src": "contracts/BalancerV2/BalancerV2.sol:5",
        "version": {
          "withMetadata": "f740ad0e61a5883f04ef7082209831575faae5181d8836e37425a1dd3213ff2d",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/Coin98BalancerV2.sol:Coin98BalancerV1": {
        "src": "contracts/BalancerV2/Coin98BalancerV2.sol:4",
        "version": {
          "withMetadata": "ab6f149f8020f9c58efa052c2b833d45ee11fae8a121df369e5d2fce3c309290",
          "withoutMetadata": "15811a2156d85af267cd8f1a87758689315ceb43e972d9751cfd085f3c9c481f",
          "linkedWithoutMetadata": "15811a2156d85af267cd8f1a87758689315ceb43e972d9751cfd085f3c9c481f"
        },
        "inherit": [
          "contracts/BalancerV2/BalancerV2.sol:BalancerV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:12",
        "version": {
          "withMetadata": "d8035ac176c0537f33de610bd668ee1a72d542d60a0b432d8927c35d7468fc9e",
          "withoutMetadata": "23236f80c0ea0055587adf27258a3e5527a762b3bbf66d05c257a35aeb516923",
          "linkedWithoutMetadata": "23236f80c0ea0055587adf27258a3e5527a762b3bbf66d05c257a35aeb516923"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:pairSwap": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IAsset.sol:IAsset": {
        "src": "contracts/interface/IAsset.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerV2.sol:IBalancerV2": {
        "src": "contracts/interface/IBalancerV2.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address payable,bool),uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "3014e0a837f338b71c747eb8c980a123bb0b72ba323f3772bd12570601f50f98",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:12",
        "version": {
          "withMetadata": "1d5f68ff8bb5789edb1a7aef159dd3794e8c76614af5b0cd921b71239f519fb5",
          "withoutMetadata": "ae62f64a8e0c99eb369073eb93623c1f7f51db3660a8d6e633e902e3e8f80bc5",
          "linkedWithoutMetadata": "ae62f64a8e0c99eb369073eb93623c1f7f51db3660a8d6e633e902e3e8f80bc5"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:pairSwap": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/UniswapV3/Coin98UniswapV3.sol:Coin98UniswapV3": {
        "src": "contracts/UniswapV3/Coin98UniswapV3.sol:6",
        "version": {
          "withMetadata": "babaf3c755a407c5755409f943fa831e9f7050c40bbab201a0a2675f4bfd6e7e",
          "withoutMetadata": "fe5cdf0499e4e3ae640bee74eb5e217712c1fd6c44ab3c4be1e61935b92ecb1a",
          "linkedWithoutMetadata": "fe5cdf0499e4e3ae640bee74eb5e217712c1fd6c44ab3c4be1e61935b92ecb1a"
        },
        "inherit": [
          "contracts/UniswapV3/UniswapV3.sol:UniswapV3"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/UniswapV3/UniswapV3.sol:UniswapV3": {
        "src": "contracts/UniswapV3/UniswapV3.sol:9",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ISwapRouterUniV3.sol:ISwapRouterUniV3": {
        "src": "contracts/interface/ISwapRouterUniV3.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETH.sol:IWETH": {
        "src": "contracts/interface/IWETH.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "3014e0a837f338b71c747eb8c980a123bb0b72ba323f3772bd12570601f50f98",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/Coin98CurveV2.sol:Coin98CurveV2": {
        "src": "contracts/CurveV2/Coin98CurveV2.sol:9",
        "version": {
          "withMetadata": "53037009951924261c9f859023b53a84d214d434e8abcab9fbaf71d87a94d4e9",
          "withoutMetadata": "cc36c3e0911857d44763c2dee83d9f62e67379c34054539db81bd6fb55ef9149",
          "linkedWithoutMetadata": "cc36c3e0911857d44763c2dee83d9f62e67379c34054539db81bd6fb55ef9149"
        },
        "inherit": [
          "contracts/CurveV2/CurveV2.sol:CurveV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/CurveV2.sol:CurveV2": {
        "src": "contracts/CurveV2/CurveV2.sol:7",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurveV2Pool.sol:ICurveV2Pool": {
        "src": "contracts/interface/ICurveV2Pool.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(uint256,uint256,uint256,uint256)",
          "exchange(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETH.sol:IWETH": {
        "src": "contracts/interface/IWETH.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "3014e0a837f338b71c747eb8c980a123bb0b72ba323f3772bd12570601f50f98",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/Coin98CurveV2.sol:Coin98CurveV2": {
        "src": "contracts/CurveV2/Coin98CurveV2.sol:9",
        "version": {
          "withMetadata": "55c12884425cc94d0cf49a40ea024309bfde8aeb2462316d1b8c5e2b0e070154",
          "withoutMetadata": "69f03cdb492ea57f072d7a1bc291277d087820152c9dcef0578b8c0072fa860c",
          "linkedWithoutMetadata": "69f03cdb492ea57f072d7a1bc291277d087820152c9dcef0578b8c0072fa860c"
        },
        "inherit": [
          "contracts/CurveV2/CurveV2.sol:CurveV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swapCurveV2(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/CurveV2.sol:CurveV2": {
        "src": "contracts/CurveV2/CurveV2.sol:7",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurveV2Pool.sol:ICurveV2Pool": {
        "src": "contracts/interface/ICurveV2Pool.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(uint256,uint256,uint256,uint256)",
          "exchange(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETH.sol:IWETH": {
        "src": "contracts/interface/IWETH.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "3014e0a837f338b71c747eb8c980a123bb0b72ba323f3772bd12570601f50f98",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:12",
        "version": {
          "withMetadata": "d8035ac176c0537f33de610bd668ee1a72d542d60a0b432d8927c35d7468fc9e",
          "withoutMetadata": "23236f80c0ea0055587adf27258a3e5527a762b3bbf66d05c257a35aeb516923",
          "linkedWithoutMetadata": "23236f80c0ea0055587adf27258a3e5527a762b3bbf66d05c257a35aeb516923"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:pairSwap": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b807c9fee398b01c32aa97580094c0ec9cf9b88767effafd6780584ada2debf7",
          "withoutMetadata": "bb66373bf0003888a6dbd709f1b8c30d38d9f0e8204682a98d274a34e7266eed",
          "linkedWithoutMetadata": "bb66373bf0003888a6dbd709f1b8c30d38d9f0e8204682a98d274a34e7266eed"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV4/Coin98ZeroxV4.sol:Coin98ZeroxV4": {
        "src": "contracts/0xV4/Coin98ZeroxV4.sol:6",
        "version": {
          "withMetadata": "55c4491670a41fe5bd3baa50a626c9094ef749ae96f290f1d0b6c560a9546af3",
          "withoutMetadata": "950bf1f143b8448783956f5c7a001db178e6f1bfbdda25d2e76b618ae03c74cb",
          "linkedWithoutMetadata": "950bf1f143b8448783956f5c7a001db178e6f1bfbdda25d2e76b618ae03c74cb"
        },
        "inherit": [
          "contracts/0xV4/ZeroxV4.sol:ZeroxV4"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV4/LibOrderV4.sol:LibOrderV4": {
        "src": "contracts/0xV4/LibOrderV4.sol:4",
        "version": {
          "withMetadata": "e8e3c627924fd7e05e65a0c6d05d700a70a6bbc026b9fa159b5455e23df29f05",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV4/ZeroxV4.sol:ZeroxV4": {
        "src": "contracts/0xV4/ZeroxV4.sol:9",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BUSD/BUSD.sol:BUSD": {
        "src": "contracts/BUSD/BUSD.sol:7",
        "version": {
          "withMetadata": "1874d41562b618c6946d02ecedf1d8166aad1410cf8059e582546ce696a58380",
          "withoutMetadata": "b7b26ca0c1436211a95e6135e7e6e19e7e31e72b01858f32bfefe031820c583f",
          "linkedWithoutMetadata": "b7b26ca0c1436211a95e6135e7e6e19e7e31e72b01858f32bfefe031820c583f"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mintToken(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BUSD",
            "src": "contracts/BUSD/BUSD.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV1/BalancerV1.sol:BalancerV1": {
        "src": "contracts/BalancerV1/BalancerV1.sol:9",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV1/Coin98BalancerV1.sol:Coin98BalancerV1": {
        "src": "contracts/BalancerV1/Coin98BalancerV1.sol:4",
        "version": {
          "withMetadata": "2030ce11e479580a316b6b7f28718b161dfb21b83c6c7fffbd4caa2475998ac2",
          "withoutMetadata": "d2c01e4ae1f39fbe13b10a1eb1144f187838aafcb1b14d2dd6c4796f282ec0d0",
          "linkedWithoutMetadata": "d2c01e4ae1f39fbe13b10a1eb1144f187838aafcb1b14d2dd6c4796f282ec0d0"
        },
        "inherit": [
          "contracts/BalancerV1/BalancerV1.sol:BalancerV1",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98BalancerV1",
            "src": "contracts/BalancerV1/Coin98BalancerV1.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/BalancerV2.sol:BalancerV2": {
        "src": "contracts/BalancerV2/BalancerV2.sol:5",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/Coin98BalancerV2.sol:Coin98BalancerV1": {
        "src": "contracts/BalancerV2/Coin98BalancerV2.sol:4",
        "version": {
          "withMetadata": "7d9b9c0f245c08f7f7eeba076511c77bc093a4bb426e24cea82ae275ebbe832b",
          "withoutMetadata": "15811a2156d85af267cd8f1a87758689315ceb43e972d9751cfd085f3c9c481f",
          "linkedWithoutMetadata": "15811a2156d85af267cd8f1a87758689315ceb43e972d9751cfd085f3c9c481f"
        },
        "inherit": [
          "contracts/BalancerV2/BalancerV2.sol:BalancerV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DoDoV2/Coin98DoDoV2.sol:Coin98DoDoV2": {
        "src": "contracts/DoDoV2/Coin98DoDoV2.sol:7",
        "inherit": [
          "contracts/DoDoV2/DoDoV2.sol:DoDoV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DoDoV2/DoDoV2.sol:DoDoV2": {
        "src": "contracts/DoDoV2/DoDoV2.sol:8",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:Executor": {
        "src": "contracts/Executor.sol:14",
        "version": {
          "withMetadata": "3250841cf80632fd6c35a86056cb0b6855ceb33f897ebfa19c7aaddaaa4ff3b6",
          "withoutMetadata": "37f0c1863da9760c7269e943bcafbb336b8cbe875908f2a6a23a70dc34d921e3",
          "linkedWithoutMetadata": "37f0c1863da9760c7269e943bcafbb336b8cbe875908f2a6a23a70dc34d921e3"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "execution(bytes,address,address)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/Executor.sol:57"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/Executor.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:SwapAdaptor": {
        "src": "contracts/Executor.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/StableSwapUSDC-BUSD/PancakeStableSwapLP.sol:PancakeStableSwapLP": {
        "src": "contracts/StableSwapUSDC-BUSD/PancakeStableSwapLP.sol:6",
        "version": {
          "withMetadata": "f58b023ae916cf647e036220264a5b5a4579735f8c2e1b27d629b62ea57a2765",
          "withoutMetadata": "fee4a70d770806390586aef316ea6bebf8770a3dab4a9729f463bf672960f208",
          "linkedWithoutMetadata": "fee4a70d770806390586aef316ea6bebf8770a3dab4a9729f463bf672960f208"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakeStableSwapLP",
            "src": "contracts/StableSwapUSDC-BUSD/PancakeStableSwapLP.sol:9"
          },
          {
            "kind": "state-variable-immutable",
            "name": "miner",
            "src": "contracts/StableSwapUSDC-BUSD/PancakeStableSwapLP.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/StableSwapUSDC-BUSD/StableSwap.sol:PancakeStableSwap": {
        "src": "contracts/StableSwapUSDC-BUSD/StableSwap.sol:10",
        "version": {
          "withMetadata": "0e66de13bb44311ddafddf56306147ac9a09cf0020f2f956454d1d25d348f183",
          "withoutMetadata": "a2a325f92fc97cad7ac92dde6fc3a4cbe79626b1573177f2db384542f59ba3ba",
          "linkedWithoutMetadata": "a2a325f92fc97cad7ac92dde6fc3a4cbe79626b1573177f2db384542f59ba3ba"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "()",
          "initialize(address[2],uint256,uint256,uint256,address)",
          "A()",
          "get_virtual_price()",
          "calc_token_amount(uint256[2],bool)",
          "add_liquidity(uint256[2],uint256)",
          "get_dy(uint256,uint256,uint256)",
          "get_dy_underlying(uint256,uint256,uint256)",
          "exchange(uint256,uint256,uint256,uint256)",
          "remove_liquidity(uint256,uint256[2])",
          "remove_liquidity_imbalance(uint256[2],uint256)",
          "calc_withdraw_one_coin(uint256,uint256)",
          "remove_liquidity_one_coin(uint256,uint256,uint256)",
          "ramp_A(uint256,uint256)",
          "stop_rampget_A()",
          "commit_new_fee(uint256,uint256)",
          "apply_new_fee()",
          "revert_new_parameters()",
          "admin_balances(uint256)",
          "withdraw_admin_fees()",
          "donate_admin_fees()",
          "kill_me()",
          "unkill_me()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakeStableSwap",
            "src": "contracts/StableSwapUSDC-BUSD/StableSwap.sol:88"
          },
          {
            "kind": "state-variable-immutable",
            "name": "STABLESWAP_FACTORY",
            "src": "contracts/StableSwapUSDC-BUSD/StableSwap.sol:49"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "PRECISION_MUL",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)2_storage",
              "contract": "PancakeStableSwap",
              "src": "contracts/StableSwapUSDC-BUSD/StableSwap.sol:18"
            },
            {
              "label": "RATES",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_uint256)2_storage",
              "contract": "PancakeStableSwap",
              "src": "contracts/StableSwapUSDC-BUSD/StableSwap.sol:19"
            },
            {
              "label": "coins",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)2_storage",
              "contract": "PancakeStableSwap",
              "src": "contracts/StableSwapUSDC-BUSD/StableSwap.sol:29"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)2_storage",
              "contract": "PancakeStableSwap",
              "src": "contracts/StableSwapUSDC-BUSD/StableSwap.sol:30"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/StableSwapUSDC-BUSD/StableSwap.sol:31"
            },
            {
              "label": "admin_fee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/StableSwapUSDC-BUSD/StableSwap.sol:32"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(PancakeStableSwapLP)3155",
              "contract": "PancakeStableSwap",
              "src": "contracts/StableSwapUSDC-BUSD/StableSwap.sol:34"
            },
            {
              "label": "initial_A",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/StableSwapUSDC-BUSD/StableSwap.sol:36"
            },
            {
              "label": "future_A",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/StableSwapUSDC-BUSD/StableSwap.sol:37"
            },
            {
              "label": "initial_A_time",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/StableSwapUSDC-BUSD/StableSwap.sol:38"
            },
            {
              "label": "future_A_time",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/StableSwapUSDC-BUSD/StableSwap.sol:39"
            },
            {
              "label": "admin_actions_deadline",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/StableSwapUSDC-BUSD/StableSwap.sol:41"
            },
            {
              "label": "future_fee",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/StableSwapUSDC-BUSD/StableSwap.sol:42"
            },
            {
              "label": "future_admin_fee",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/StableSwapUSDC-BUSD/StableSwap.sol:43"
            },
            {
              "label": "kill_deadline",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "PancakeStableSwap",
              "src": "contracts/StableSwapUSDC-BUSD/StableSwap.sol:45"
            },
            {
              "label": "is_killed",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "PancakeStableSwap",
              "src": "contracts/StableSwapUSDC-BUSD/StableSwap.sol:47"
            },
            {
              "label": "isInitialized",
              "offset": 1,
              "slot": "21",
              "type": "t_bool",
              "contract": "PancakeStableSwap",
              "src": "contracts/StableSwapUSDC-BUSD/StableSwap.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)2_storage": {
              "label": "address[2]",
              "numberOfBytes": "64"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(PancakeStableSwapLP)3155": {
              "label": "contract PancakeStableSwapLP",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/USDC/USDC.sol:USDC": {
        "src": "contracts/USDC/USDC.sol:7",
        "version": {
          "withMetadata": "bdb555108c5cef545e38b63ab282a3146ae8c8d46453122be83a854eb5bc4ea2",
          "withoutMetadata": "8a9e9ce61c4642bd3f104dfdaed375a97b230528815207867753cd57de72d574",
          "linkedWithoutMetadata": "8a9e9ce61c4642bd3f104dfdaed375a97b230528815207867753cd57de72d574"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mintToken(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "USDC",
            "src": "contracts/USDC/USDC.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/USDT/USDT.sol:USDT": {
        "src": "contracts/USDT/USDT.sol:7",
        "version": {
          "withMetadata": "53782319f45ab967ceb4c393edefb9a058ef11d67765b6bfa5bda838d8828ff6",
          "withoutMetadata": "df9793621b6f2e367791ea238abf1bc6d8203706ed316e039aafff22f81fd0c9",
          "linkedWithoutMetadata": "df9793621b6f2e367791ea238abf1bc6d8203706ed316e039aafff22f81fd0c9"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mintToken(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "USDT",
            "src": "contracts/USDT/USDT.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:12",
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:pairSwap": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/UniswapV3/Coin98UniswapV3.sol:Coin98UniswapV3": {
        "src": "contracts/UniswapV3/Coin98UniswapV3.sol:6",
        "version": {
          "withMetadata": "a3d8f151df5562139c75963158a36b38f2c775c9f1740af8b3e8fa84460b7744",
          "withoutMetadata": "11dedae8e9e185a70a75f0059118665ab4693571f88b8fc2b52466922d5b4031",
          "linkedWithoutMetadata": "11dedae8e9e185a70a75f0059118665ab4693571f88b8fc2b52466922d5b4031"
        },
        "inherit": [
          "contracts/UniswapV3/UniswapV3.sol:UniswapV3"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/UniswapV3/UniswapV3.sol:UniswapV3": {
        "src": "contracts/UniswapV3/UniswapV3.sol:9",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IAsset.sol:IAsset": {
        "src": "contracts/interface/IAsset.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerPool.sol:IBalancerPool": {
        "src": "contracts/interface/IBalancerPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactAmountIn(address,uint256,address,uint256,uint256)",
          "swapExactAmountOut(address,uint256,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerProxy.sol:IBalancerProxy": {
        "src": "contracts/interface/IBalancerProxy.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "batchSwapExactIn(struct IBalancerProxy.Swap[],address,address,uint256,uint256)",
          "batchSwapExactOut(struct IBalancerProxy.Swap[],address,address,uint256)",
          "batchEthInSwapExactIn(struct IBalancerProxy.Swap[],address,uint256)",
          "batchEthOutSwapExactIn(struct IBalancerProxy.Swap[],address,uint256,uint256)",
          "batchEthInSwapExactOut(struct IBalancerProxy.Swap[],address)",
          "batchEthOutSwapExactOut(struct IBalancerProxy.Swap[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerV2.sol:IBalancerV2": {
        "src": "contracts/interface/IBalancerV2.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address payable,bool),uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IDODOV2Proxy.sol:IDODOV2Proxy": {
        "src": "contracts/interface/IDODOV2Proxy.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "dodoSwapV2ETHToToken(address,uint256,address[],uint256,bool,uint256)",
          "dodoSwapV2TokenToETH(address,uint256,uint256,address[],uint256,bool,uint256)",
          "dodoSwapV2TokenToToken(address,address,uint256,uint256,address[],uint256,bool,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ISwapRouterUniV3.sol:ISwapRouterUniV3": {
        "src": "contracts/interface/ISwapRouterUniV3.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETH.sol:IWETH": {
        "src": "contracts/interface/IWETH.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IZeroxV4.sol:IZeroxV4": {
        "src": "contracts/interface/IZeroxV4.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "fillRfqOrder((address,address,uint128,uint128,address,address,address,bytes32,uint64,uint256),(uint8,uint8,bytes32,bytes32),uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "3014e0a837f338b71c747eb8c980a123bb0b72ba323f3772bd12570601f50f98",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/utils/WethProvider.sol:WethProvider": {
        "src": "contracts/utils/WethProvider.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethProvider",
            "src": "contracts/utils/WethProvider.sol:7"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts/utils/WethProvider.sol:5"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:DemoAdapter1": {
        "src": "contracts/DemoAdapter(Full).sol:30",
        "version": {
          "withMetadata": "c346283a3284df7ea788f537c0c7ee1914c817b473ae2bc72a03920a1f50f638",
          "withoutMetadata": "837a594f6f5a6ac7fda707166f58748da409a38d80b6167c47691bd614902ad1",
          "linkedWithoutMetadata": "837a594f6f5a6ac7fda707166f58748da409a38d80b6167c47691bd614902ad1"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/DemoAdapter(Full).sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapRoutes(uint256[],address,address,bytes,address)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter1",
            "src": "contracts/DemoAdapter(Full).sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter(Full).sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter(Full).sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter(Full).sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:33"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:35"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:36"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:37"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(Partner)1347_storage)",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:67"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)1347_storage)": {
              "label": "mapping(address => struct DemoAdapter1.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)1347_storage": {
              "label": "struct DemoAdapter1.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:EthReceiver": {
        "src": "contracts/DemoAdapter(Full).sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:IExecutor": {
        "src": "contracts/DemoAdapter(Full).sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter(Full).sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:SwapAdapter": {
        "src": "contracts/DemoAdapter(Full).sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:Executor": {
        "src": "contracts/Executor.sol:14",
        "version": {
          "withMetadata": "b5a61b61516ea8aa424b32092c58da3c821cce24d9c44c7e935f589b7091f13c",
          "withoutMetadata": "b462265a56421ca4b14386bc58edfb18625cb124947e5b443e3d0b10c645da1e",
          "linkedWithoutMetadata": "b462265a56421ca4b14386bc58edfb18625cb124947e5b443e3d0b10c645da1e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "addAdapters(address)",
          "execution(bytes,address,address)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/Executor.sol:28"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/Executor.sol:57"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/Executor.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "Adapter",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_bytes4)",
              "contract": "Executor",
              "src": "contracts/Executor.sol:15"
            },
            {
              "label": "contractDelegate",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Executor",
              "src": "contracts/Executor.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_uint256,t_bytes4)": {
              "label": "mapping(uint256 => bytes4)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/UniswapV3/Coin98UniswapV3.sol:Coin98UniswapV3": {
        "src": "contracts/UniswapV3/Coin98UniswapV3.sol:6",
        "version": {
          "withMetadata": "896135d3582ca3a724af5386815eefc5c61fd72038711efbb9724f260e4f560e",
          "withoutMetadata": "abd790b0907eac8973d24c92396afa78640826867556879dde7b11498eee99cc",
          "linkedWithoutMetadata": "abd790b0907eac8973d24c92396afa78640826867556879dde7b11498eee99cc"
        },
        "inherit": [
          "contracts/UniswapV3/UniswapV3.sol:UniswapV3"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/UniswapV3/UniswapV3.sol:UniswapV3": {
        "src": "contracts/UniswapV3/UniswapV3.sol:9",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ISwapRouterUniV3.sol:ISwapRouterUniV3": {
        "src": "contracts/interface/ISwapRouterUniV3.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETH.sol:IWETH": {
        "src": "contracts/interface/IWETH.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "3014e0a837f338b71c747eb8c980a123bb0b72ba323f3772bd12570601f50f98",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/Coin98CurveV2.sol:Coin98CurveV2": {
        "src": "contracts/CurveV2/Coin98CurveV2.sol:9",
        "inherit": [
          "contracts/CurveV2/CurveV2.sol:CurveV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swapCurveV2(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/CurveV2.sol:CurveV2": {
        "src": "contracts/CurveV2/CurveV2.sol:7",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Delegate.sol:Delegate": {
        "src": "contracts/Delegate.sol:7",
        "version": {
          "withMetadata": "caf7b715b2ff89f01e12b6eeb68a0071300b376cafa9b95448e1315112f4d43b",
          "withoutMetadata": "d32df728103ec07400b7e7e78f6035fbfe743313d08d98be55c51ad0cf0558eb",
          "linkedWithoutMetadata": "d32df728103ec07400b7e7e78f6035fbfe743313d08d98be55c51ad0cf0558eb"
        },
        "inherit": [
          "contracts/CurveV2/Coin98CurveV2.sol:Coin98CurveV2",
          "contracts/CurveV2/CurveV2.sol:CurveV2",
          "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2"
        ],
        "libraries": [],
        "methods": [
          "addAdapter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "token0",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:26"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:27"
            },
            {
              "label": "Adapter",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_bytes4)",
              "contract": "Delegate",
              "src": "contracts/Delegate.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_uint256,t_bytes4)": {
              "label": "mapping(uint256 => bytes4)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:12",
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swapUniV2(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "token0",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:26"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:pairSwap": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurveV2Pool.sol:ICurveV2Pool": {
        "src": "contracts/interface/ICurveV2Pool.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(uint256,uint256,uint256,uint256)",
          "exchange(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETH.sol:IWETH": {
        "src": "contracts/interface/IWETH.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "3014e0a837f338b71c747eb8c980a123bb0b72ba323f3772bd12570601f50f98",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/Coin98CurveV2.sol:Coin98CurveV2": {
        "src": "contracts/CurveV2/Coin98CurveV2.sol:9",
        "inherit": [
          "contracts/CurveV2/CurveV2.sol:CurveV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swapCurveV2(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/CurveV2.sol:CurveV2": {
        "src": "contracts/CurveV2/CurveV2.sol:7",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Delegate.sol:Delegate": {
        "src": "contracts/Delegate.sol:7",
        "version": {
          "withMetadata": "81aab542064030e3f8de6bf205691686833ce35c95a66a1fb7682b47efa159cf",
          "withoutMetadata": "a3dc1c07742ea5e55f4a54f1cfae4b07187d88261d814ba9c1d612d05f0f314b",
          "linkedWithoutMetadata": "a3dc1c07742ea5e55f4a54f1cfae4b07187d88261d814ba9c1d612d05f0f314b"
        },
        "inherit": [
          "contracts/CurveV2/Coin98CurveV2.sol:Coin98CurveV2",
          "contracts/CurveV2/CurveV2.sol:CurveV2",
          "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2"
        ],
        "libraries": [],
        "methods": [
          "addAdapter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "token0",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:26"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:27"
            },
            {
              "label": "Adapter",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_bytes4)",
              "contract": "Delegate",
              "src": "contracts/Delegate.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_uint256,t_bytes4)": {
              "label": "mapping(uint256 => bytes4)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:12",
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swapUniV2(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "token0",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:26"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:pairSwap": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurveV2Pool.sol:ICurveV2Pool": {
        "src": "contracts/interface/ICurveV2Pool.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(uint256,uint256,uint256,uint256)",
          "exchange(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETH.sol:IWETH": {
        "src": "contracts/interface/IWETH.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "3014e0a837f338b71c747eb8c980a123bb0b72ba323f3772bd12570601f50f98",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:Executor": {
        "src": "contracts/Executor.sol:14",
        "version": {
          "withMetadata": "8b12029b72522358bf90a650e5c5b5adcfbe6bea9331a561b7430dda1566427c",
          "withoutMetadata": "51d878dc77e3b61bc3999eae86ab312ff07c81431d1b099347cc1d3431857137",
          "linkedWithoutMetadata": "51d878dc77e3b61bc3999eae86ab312ff07c81431d1b099347cc1d3431857137"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "addAdapters(address)",
          "execution(bytes,address,address)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/Executor.sol:28"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/Executor.sol:57"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/Executor.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "Adapter",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_bytes4)",
              "contract": "Executor",
              "src": "contracts/Executor.sol:15"
            },
            {
              "label": "contractDelegate",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Executor",
              "src": "contracts/Executor.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_uint256,t_bytes4)": {
              "label": "mapping(uint256 => bytes4)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/Coin98CurveV2.sol:Coin98CurveV2": {
        "src": "contracts/CurveV2/Coin98CurveV2.sol:9",
        "inherit": [
          "contracts/CurveV2/CurveV2.sol:CurveV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swapCurveV2(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/CurveV2.sol:CurveV2": {
        "src": "contracts/CurveV2/CurveV2.sol:7",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Delegate.sol:Delegate": {
        "src": "contracts/Delegate.sol:7",
        "version": {
          "withMetadata": "caf7b715b2ff89f01e12b6eeb68a0071300b376cafa9b95448e1315112f4d43b",
          "withoutMetadata": "d32df728103ec07400b7e7e78f6035fbfe743313d08d98be55c51ad0cf0558eb",
          "linkedWithoutMetadata": "d32df728103ec07400b7e7e78f6035fbfe743313d08d98be55c51ad0cf0558eb"
        },
        "inherit": [
          "contracts/CurveV2/Coin98CurveV2.sol:Coin98CurveV2",
          "contracts/CurveV2/CurveV2.sol:CurveV2",
          "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2"
        ],
        "libraries": [],
        "methods": [
          "addAdapter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "token0",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:26"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:27"
            },
            {
              "label": "Adapter",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_bytes4)",
              "contract": "Delegate",
              "src": "contracts/Delegate.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_uint256,t_bytes4)": {
              "label": "mapping(uint256 => bytes4)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:12",
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swapUniV2(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "token0",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:26"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:pairSwap": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurveV2Pool.sol:ICurveV2Pool": {
        "src": "contracts/interface/ICurveV2Pool.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(uint256,uint256,uint256,uint256)",
          "exchange(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETH.sol:IWETH": {
        "src": "contracts/interface/IWETH.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "3014e0a837f338b71c747eb8c980a123bb0b72ba323f3772bd12570601f50f98",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:Executor": {
        "src": "contracts/Executor.sol:14",
        "version": {
          "withMetadata": "7eb4a96c9d0f3e22384f4ab124fe1c4d53b18c11ac632b0cb80f55db51e7bd25",
          "withoutMetadata": "6d71cc027904f2f2fb71e5749265b08c951f2687b116086cb0aae40126787f07",
          "linkedWithoutMetadata": "6d71cc027904f2f2fb71e5749265b08c951f2687b116086cb0aae40126787f07"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "addAdapters()",
          "delegateCallContract(address)",
          "execution(bytes,address,address)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/Executor.sol:27"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/Executor.sol:56"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/Executor.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "Adapter",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_bytes4)",
              "contract": "Executor",
              "src": "contracts/Executor.sol:15"
            },
            {
              "label": "contractDelegate",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Executor",
              "src": "contracts/Executor.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_uint256,t_bytes4)": {
              "label": "mapping(uint256 => bytes4)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV2/Coin98ZeroxV2.sol:Coin98ZeroxV2": {
        "src": "contracts/0xV2/Coin98ZeroxV2.sol:6",
        "version": {
          "withMetadata": "a4692dd730a4073052b19a55469f23395c6074d6091d2be2288c2a49558a25a9",
          "withoutMetadata": "9d53ef4c54c0875b829e982d97747deb6a1978ecc852f3bd4a3c616af2c437fa",
          "linkedWithoutMetadata": "9d53ef4c54c0875b829e982d97747deb6a1978ecc852f3bd4a3c616af2c437fa"
        },
        "inherit": [
          "contracts/0xV2/ZeroxV2.sol:ZeroxV2",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address,address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98ZeroxV2",
            "src": "contracts/0xV2/Coin98ZeroxV2.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV2/LibOrderV2.sol:LibOrderV2": {
        "src": "contracts/0xV2/LibOrderV2.sol:4",
        "version": {
          "withMetadata": "2eb70bb2e07d645fa2717d03e976647ad5c2403959721fc38d783234c084f34b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV2/ZeroxV2.sol:ZeroxV2": {
        "src": "contracts/0xV2/ZeroxV2.sol:9",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "contracts/library/LibBytes.sol:LibBytes",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ZeroxV2",
            "src": "contracts/0xV2/ZeroxV2.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "erc20Proxy",
            "src": "contracts/0xV2/ZeroxV2.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV4/Coin98ZeroxV4.sol:Coin98ZeroxV4": {
        "src": "contracts/0xV4/Coin98ZeroxV4.sol:6",
        "version": {
          "withMetadata": "8818ed7bb0e9027fc764f56ad965a96ab7e23c0a0cfc0217783e20a8996f9e6a",
          "withoutMetadata": "97dcb983a078b91628e197f3e6091443d4b47ff28e1531245a2ff3b8ec3c377a",
          "linkedWithoutMetadata": "97dcb983a078b91628e197f3e6091443d4b47ff28e1531245a2ff3b8ec3c377a"
        },
        "inherit": [
          "contracts/0xV4/ZeroxV4.sol:ZeroxV4",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98ZeroxV4",
            "src": "contracts/0xV4/Coin98ZeroxV4.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV4/LibOrderV4.sol:LibOrderV4": {
        "src": "contracts/0xV4/LibOrderV4.sol:4",
        "version": {
          "withMetadata": "e8e3c627924fd7e05e65a0c6d05d700a70a6bbc026b9fa159b5455e23df29f05",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV4/ZeroxV4.sol:ZeroxV4": {
        "src": "contracts/0xV4/ZeroxV4.sol:9",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AaveeV2/AaveeV2.sol:Aavee2": {
        "src": "contracts/AaveeV2/AaveeV2.sol:7",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Aavee2",
            "src": "contracts/AaveeV2/AaveeV2.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "refCode",
            "src": "contracts/AaveeV2/AaveeV2.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "lendingPool",
            "src": "contracts/AaveeV2/AaveeV2.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "wethGateway",
            "src": "contracts/AaveeV2/AaveeV2.sol:15"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AaveeV2/Coin98AaveeV2.sol:Coin98AaveeV2": {
        "src": "contracts/AaveeV2/Coin98AaveeV2.sol:6",
        "version": {
          "withMetadata": "6dcb0e4ba8b7f82c9dc44cfa3ffe5908aec2f99c2143de4466f78f66279f3d52",
          "withoutMetadata": "e046ad4e64f66fda14c985e957f6c0f7ecbd292d1b2ec0d31a90211e210a7507",
          "linkedWithoutMetadata": "e046ad4e64f66fda14c985e957f6c0f7ecbd292d1b2ec0d31a90211e210a7507"
        },
        "inherit": [
          "contracts/AaveeV2/AaveeV2.sol:Aavee2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(uint16,address,address)",
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98AaveeV2",
            "src": "contracts/AaveeV2/Coin98AaveeV2.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV1/BalancerV1.sol:BalancerV1": {
        "src": "contracts/BalancerV1/BalancerV1.sol:9",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV1/Coin98BalancerV1.sol:Coin98BalancerV1": {
        "src": "contracts/BalancerV1/Coin98BalancerV1.sol:4",
        "version": {
          "withMetadata": "0830b2615042fdd8957e610eb8400a7e53d8baeabbee3a01cc26afcca2076fee",
          "withoutMetadata": "c07dbe617c1089559dffdd5520dfdd8c8211557300e504d881c5059cc8b0538e",
          "linkedWithoutMetadata": "c07dbe617c1089559dffdd5520dfdd8c8211557300e504d881c5059cc8b0538e"
        },
        "inherit": [
          "contracts/BalancerV1/BalancerV1.sol:BalancerV1",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98BalancerV1",
            "src": "contracts/BalancerV1/Coin98BalancerV1.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/BalancerV2.sol:BalancerV2": {
        "src": "contracts/BalancerV2/BalancerV2.sol:5",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/Coin98BalancerV2.sol:Coin98BalancerV1": {
        "src": "contracts/BalancerV2/Coin98BalancerV2.sol:4",
        "version": {
          "withMetadata": "ced9b0798676d2b158c949f3e40d483c062161731ff9338b08620be3b2f6ce0b",
          "withoutMetadata": "151357804a741906dc43844771fe38a0bf4c3e48be4f883e03a5f8ad8d33a194",
          "linkedWithoutMetadata": "151357804a741906dc43844771fe38a0bf4c3e48be4f883e03a5f8ad8d33a194"
        },
        "inherit": [
          "contracts/BalancerV2/BalancerV2.sol:BalancerV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Curve/Coin98Curve.sol:Coin98Adapter1": {
        "src": "contracts/Curve/Coin98Curve.sol:3",
        "version": {
          "withMetadata": "9885550ee4718d4ba3eb45ba09a818e8bf353888f1d99856eee29fa1f317a18f",
          "withoutMetadata": "27675f3b7ee3a03d8968d81edae01e4e343aa705915d44b72803d418e27e5ea4",
          "linkedWithoutMetadata": "27675f3b7ee3a03d8968d81edae01e4e343aa705915d44b72803d418e27e5ea4"
        },
        "inherit": [
          "contracts/Curve/curve.sol:Curve"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Curve/curve.sol:Curve": {
        "src": "contracts/Curve/curve.sol:8",
        "version": {
          "withMetadata": "7fa3cf617250c5c482e1e05e02765b4510b4d3ca107cfae8809d621903f92571",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/Coin98CurveV2.sol:Coin98CurveV2": {
        "src": "contracts/CurveV2/Coin98CurveV2.sol:9",
        "inherit": [
          "contracts/CurveV2/CurveV2.sol:CurveV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swapCurveV2(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/CurveV2.sol:CurveV2": {
        "src": "contracts/CurveV2/CurveV2.sol:7",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Delegate.sol:Delegate": {
        "src": "contracts/Delegate.sol:7",
        "version": {
          "withMetadata": "ff78c49ab9a721af1f50b80961ae3dcca2518a9a8ed749bcf864cc7c327d9577",
          "withoutMetadata": "2f500f896c3538df59527dd5f73e67a4d694d109c5ae46af16d6c4ddf7b805a0",
          "linkedWithoutMetadata": "2f500f896c3538df59527dd5f73e67a4d694d109c5ae46af16d6c4ddf7b805a0"
        },
        "inherit": [
          "contracts/CurveV2/Coin98CurveV2.sol:Coin98CurveV2",
          "contracts/CurveV2/CurveV2.sol:CurveV2",
          "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "addAdapter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "token0",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:26"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:27"
            },
            {
              "label": "Adapter",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_bytes4)",
              "contract": "Delegate",
              "src": "contracts/Delegate.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_uint256,t_bytes4)": {
              "label": "mapping(uint256 => bytes4)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:DemoAdapter1": {
        "src": "contracts/DemoAdapter(Full).sol:30",
        "version": {
          "withMetadata": "63e1b4111959c421fbb3cad125f1ad8a09fc21ff03f440f768a98b45af12461e",
          "withoutMetadata": "837a594f6f5a6ac7fda707166f58748da409a38d80b6167c47691bd614902ad1",
          "linkedWithoutMetadata": "837a594f6f5a6ac7fda707166f58748da409a38d80b6167c47691bd614902ad1"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/DemoAdapter(Full).sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapRoutes(uint256[],address,address,bytes,address)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter1",
            "src": "contracts/DemoAdapter(Full).sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter(Full).sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter(Full).sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter(Full).sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:33"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:35"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:36"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:37"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(Partner)3236_storage)",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:67"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)3236_storage)": {
              "label": "mapping(address => struct DemoAdapter1.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)3236_storage": {
              "label": "struct DemoAdapter1.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:EthReceiver": {
        "src": "contracts/DemoAdapter(Full).sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:IExecutor": {
        "src": "contracts/DemoAdapter(Full).sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter(Full).sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:SwapAdapter": {
        "src": "contracts/DemoAdapter(Full).sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:DemoAdapter": {
        "src": "contracts/DemoAdapter.sol:25",
        "version": {
          "withMetadata": "ca4c329693a2aab47925654765caa1bd3539ba369045863ff2e080402c9751c1",
          "withoutMetadata": "cb41de3d0d18b327f3bfd615bd9fde1c5778300db2816c3aaab75cd87354833a",
          "linkedWithoutMetadata": "cb41de3d0d18b327f3bfd615bd9fde1c5778300db2816c3aaab75cd87354833a"
        },
        "inherit": [
          "contracts/DemoAdapter.sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapRoutes(uint256,address,address,(address[],uint256[],uint256[],uint256[],bytes[]))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter",
            "src": "contracts/DemoAdapter.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:28"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:30"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:31"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:32"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Partner)3809_storage)",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:62"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)3809_storage)": {
              "label": "mapping(address => struct DemoAdapter.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)3809_storage": {
              "label": "struct DemoAdapter.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:EthReceiver": {
        "src": "contracts/DemoAdapter.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:SwapAdapter": {
        "src": "contracts/DemoAdapter.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:Executor": {
        "src": "contracts/Executor.sol:14",
        "version": {
          "withMetadata": "4c252bb073005663060f651c156511b280751d5684c5ad9e3ded78631df0d326",
          "withoutMetadata": "4969077dfa76a0edf42fb796ecf2b9222cefe3c97c3db02c526812f9c5811b02",
          "linkedWithoutMetadata": "4969077dfa76a0edf42fb796ecf2b9222cefe3c97c3db02c526812f9c5811b02"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "addAdapters()",
          "delegateCallContract(address)",
          "execution(bytes,address,address)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/Executor.sol:27"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/Executor.sol:56"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/Executor.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "Adapter",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_bytes4)",
              "contract": "Executor",
              "src": "contracts/Executor.sol:15"
            },
            {
              "label": "contractDelegate",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Executor",
              "src": "contracts/Executor.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_uint256,t_bytes4)": {
              "label": "mapping(uint256 => bytes4)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:12",
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swapUniV2(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "token0",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:26"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:pairSwap": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap.sol:Coin98Uniswap": {
        "src": "contracts/Uniswap/Coin98Uniswap.sol:6",
        "version": {
          "withMetadata": "e5337a4681982511290ba2094c465e89395b6381401ba80a51f278bd306aeb8f",
          "withoutMetadata": "21c8491970559ae179e987e5a6c2d891c75222abe7a8250d16b2f4e778ad936d",
          "linkedWithoutMetadata": "21c8491970559ae179e987e5a6c2d891c75222abe7a8250d16b2f4e778ad936d"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/UniswapV3/Coin98UniswapV3.sol:Coin98UniswapV3": {
        "src": "contracts/UniswapV3/Coin98UniswapV3.sol:6",
        "version": {
          "withMetadata": "4e8ac064385952910d36ff6fa049736119af14ce6fa5df67e6df149f7dfc9dba",
          "withoutMetadata": "8ad922d6e403fb212ed9a37878ab8893eef2001dabc5add492e24348a1365097",
          "linkedWithoutMetadata": "8ad922d6e403fb212ed9a37878ab8893eef2001dabc5add492e24348a1365097"
        },
        "inherit": [
          "contracts/UniswapV3/UniswapV3.sol:UniswapV3",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98UniswapV3",
            "src": "contracts/UniswapV3/Coin98UniswapV3.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/UniswapV3/UniswapV3.sol:UniswapV3": {
        "src": "contracts/UniswapV3/UniswapV3.sol:9",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IAaveLendingPool.sol:IAaveLendingPool": {
        "src": "contracts/interface/IAaveLendingPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,uint256,address,uint16)",
          "withdraw(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IAdapter.sol:IAdapter": {
        "src": "contracts/interface/IAdapter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IAsset.sol:IAsset": {
        "src": "contracts/interface/IAsset.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerPool.sol:IBalancerPool": {
        "src": "contracts/interface/IBalancerPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactAmountIn(address,uint256,address,uint256,uint256)",
          "swapExactAmountOut(address,uint256,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerProxy.sol:IBalancerProxy": {
        "src": "contracts/interface/IBalancerProxy.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "batchSwapExactIn(struct IBalancerProxy.Swap[],address,address,uint256,uint256)",
          "batchSwapExactOut(struct IBalancerProxy.Swap[],address,address,uint256)",
          "batchEthInSwapExactIn(struct IBalancerProxy.Swap[],address,uint256)",
          "batchEthOutSwapExactIn(struct IBalancerProxy.Swap[],address,uint256,uint256)",
          "batchEthInSwapExactOut(struct IBalancerProxy.Swap[],address)",
          "batchEthOutSwapExactOut(struct IBalancerProxy.Swap[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerV2.sol:IBalancerV2": {
        "src": "contracts/interface/IBalancerV2.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address payable,bool),uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurveEthPool.sol:ICurveEthPool": {
        "src": "contracts/interface/ICurveEthPool.sol:2",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange(int128,int128,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurvePool.sol:ICurvePool": {
        "src": "contracts/interface/ICurvePool.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(int128,int128,uint256,uint256)",
          "exchange(int128,int128,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurveV2Pool.sol:ICurveV2Pool": {
        "src": "contracts/interface/ICurveV2Pool.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(uint256,uint256,uint256,uint256)",
          "exchange(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IMstable.sol:IMStable": {
        "src": "contracts/interface/IMstable.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256,uint256,address)",
          "swap(address,address,uint256,uint256,address)",
          "redeem(address,uint256,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IOneInchPool.sol:IOneInchPool": {
        "src": "contracts/interface/IOneInchPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(address,address,uint256,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ISwapRouterUniV3.sol:ISwapRouterUniV3": {
        "src": "contracts/interface/ISwapRouterUniV3.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETH.sol:IWETH": {
        "src": "contracts/interface/IWETH.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETHGateway.sol:IWETHGateway": {
        "src": "contracts/interface/IWETHGateway.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "depositETH(address,address,uint16)",
          "withdrawETH(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IZeroxV2.sol:IZeroxV2": {
        "src": "contracts/interface/IZeroxV2.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "marketSellOrdersNoThrow(struct LibOrderV2.Order[],uint256,bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IZeroxV4.sol:IZeroxV4": {
        "src": "contracts/interface/IZeroxV4.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "fillRfqOrder((address,address,uint128,uint128,address,address,address,bytes32,uint64,uint256),(uint8,uint8,bytes32,bytes32),uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/LibBytes.sol:LibBytes": {
        "src": "contracts/library/LibBytes.sol:21",
        "version": {
          "withMetadata": "5cd748fc6431006fc8c9777d2ef1dcd8988adefa5e391c51f8deb9ce2ba4fbdc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/LibBytes.sol:LibBytes",
          "contracts/library/LibBytesRichErrors.sol:LibBytesRichErrors",
          "contracts/library/LibRichErrors.sol:LibRichErrors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/LibBytesRichErrors.sol:LibBytesRichErrors": {
        "src": "contracts/library/LibBytesRichErrors.sol:17",
        "version": {
          "withMetadata": "fbee9838ec2d4fec413b65fde07f86f5e9bd816305a511cae9ff58e45978adf3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/LibRichErrors.sol:LibRichErrors": {
        "src": "contracts/library/LibRichErrors.sol:17",
        "version": {
          "withMetadata": "4878c56ab6d96200d2db4d92dad3071ca4fd70321510afdbf061bfe40ca541d6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "3014e0a837f338b71c747eb8c980a123bb0b72ba323f3772bd12570601f50f98",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/oneinch/Coin98OneInch.sol:Coin98ZeroxV2": {
        "src": "contracts/oneinch/Coin98OneInch.sol:6",
        "version": {
          "withMetadata": "ede060815a9c2111fea6263985302063fac6367ee6da18971666ae2e7f94a879",
          "withoutMetadata": "8f3492c90b0c35f24ae0fed9c5b15da2bcb85b1781663881310bc509c740f0b6",
          "linkedWithoutMetadata": "8f3492c90b0c35f24ae0fed9c5b15da2bcb85b1781663881310bc509c740f0b6"
        },
        "inherit": [
          "contracts/oneinch/OneInchPool.sol:OneInchPool"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/oneinch/OneInchPool.sol:OneInchPool": {
        "src": "contracts/oneinch/OneInchPool.sol:9",
        "version": {
          "withMetadata": "c7045b10c06e6e6a3c30b36b68ac7634af5f94c5425873d96404e3b24e8830ce",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/utils/WethProvider.sol:WethProvider": {
        "src": "contracts/utils/WethProvider.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethProvider",
            "src": "contracts/utils/WethProvider.sol:7"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts/utils/WethProvider.sol:5"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AaveeV2/AaveeV2.sol:Aavee2": {
        "src": "contracts/AaveeV2/AaveeV2.sol:7",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Aavee2",
            "src": "contracts/AaveeV2/AaveeV2.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "refCode",
            "src": "contracts/AaveeV2/AaveeV2.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "lendingPool",
            "src": "contracts/AaveeV2/AaveeV2.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "wethGateway",
            "src": "contracts/AaveeV2/AaveeV2.sol:15"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AaveeV2/Coin98AaveeV2.sol:Coin98AaveeV2": {
        "src": "contracts/AaveeV2/Coin98AaveeV2.sol:6",
        "version": {
          "withMetadata": "6dcb0e4ba8b7f82c9dc44cfa3ffe5908aec2f99c2143de4466f78f66279f3d52",
          "withoutMetadata": "e046ad4e64f66fda14c985e957f6c0f7ecbd292d1b2ec0d31a90211e210a7507",
          "linkedWithoutMetadata": "e046ad4e64f66fda14c985e957f6c0f7ecbd292d1b2ec0d31a90211e210a7507"
        },
        "inherit": [
          "contracts/AaveeV2/AaveeV2.sol:Aavee2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(uint16,address,address)",
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98AaveeV2",
            "src": "contracts/AaveeV2/Coin98AaveeV2.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/Coin98CurveV2.sol:Coin98CurveV2": {
        "src": "contracts/CurveV2/Coin98CurveV2.sol:9",
        "inherit": [
          "contracts/CurveV2/CurveV2.sol:CurveV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swapCurveV2(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/CurveV2.sol:CurveV2": {
        "src": "contracts/CurveV2/CurveV2.sol:7",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:DemoAdapter1": {
        "src": "contracts/DemoAdapter(Full).sol:30",
        "version": {
          "withMetadata": "63e1b4111959c421fbb3cad125f1ad8a09fc21ff03f440f768a98b45af12461e",
          "withoutMetadata": "837a594f6f5a6ac7fda707166f58748da409a38d80b6167c47691bd614902ad1",
          "linkedWithoutMetadata": "837a594f6f5a6ac7fda707166f58748da409a38d80b6167c47691bd614902ad1"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/DemoAdapter(Full).sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapRoutes(uint256[],address,address,bytes,address)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter1",
            "src": "contracts/DemoAdapter(Full).sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter(Full).sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter(Full).sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter(Full).sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:33"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:35"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:36"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:37"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(Partner)1833_storage)",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:67"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)1833_storage)": {
              "label": "mapping(address => struct DemoAdapter1.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)1833_storage": {
              "label": "struct DemoAdapter1.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:EthReceiver": {
        "src": "contracts/DemoAdapter(Full).sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:IExecutor": {
        "src": "contracts/DemoAdapter(Full).sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter(Full).sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:SwapAdapter": {
        "src": "contracts/DemoAdapter(Full).sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:Executor": {
        "src": "contracts/Executor.sol:14",
        "version": {
          "withMetadata": "debd82af956bec6a986ee191a5e5550e62a1d40499122ca714e15b09aaa67ebe",
          "withoutMetadata": "3c95a088c44d213a686532c26792d58c553537192291ad0ef79057f763580b14",
          "linkedWithoutMetadata": "3c95a088c44d213a686532c26792d58c553537192291ad0ef79057f763580b14"
        },
        "inherit": [
          "contracts/CurveV2/Coin98CurveV2.sol:Coin98CurveV2",
          "contracts/CurveV2/CurveV2.sol:CurveV2",
          "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "()",
          "execution(bytes,address,address)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Executor",
            "src": "contracts/Executor.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "token0",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:26"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:27"
            },
            {
              "label": "Adapter",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_bytes4)",
              "contract": "Executor",
              "src": "contracts/Executor.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_uint256,t_bytes4)": {
              "label": "mapping(uint256 => bytes4)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:12",
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swapUniV2(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "token0",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:26"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:pairSwap": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IAaveLendingPool.sol:IAaveLendingPool": {
        "src": "contracts/interface/IAaveLendingPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,uint256,address,uint16)",
          "withdraw(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurveV2Pool.sol:ICurveV2Pool": {
        "src": "contracts/interface/ICurveV2Pool.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(uint256,uint256,uint256,uint256)",
          "exchange(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETH.sol:IWETH": {
        "src": "contracts/interface/IWETH.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETHGateway.sol:IWETHGateway": {
        "src": "contracts/interface/IWETHGateway.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "depositETH(address,address,uint16)",
          "withdrawETH(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "3014e0a837f338b71c747eb8c980a123bb0b72ba323f3772bd12570601f50f98",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:DemoAdapter1": {
        "src": "contracts/DemoAdapter(Full).sol:28",
        "version": {
          "withMetadata": "ebae4a8564e6715272dcd0737a4a0c875bcd99d602e8d31da32e7461602a513b",
          "withoutMetadata": "321e987ffccbe5dcca325ac16f2e1f04d0fdd51b512d3e4bdb955fa0b57dc046",
          "linkedWithoutMetadata": "321e987ffccbe5dcca325ac16f2e1f04d0fdd51b512d3e4bdb955fa0b57dc046"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/DemoAdapter(Full).sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapStraight(uint256[],address,address,contract SwapAdapter[],bytes[],uint256[])",
          "swapRoutes(uint256,address,address,bytes,address)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter1",
            "src": "contracts/DemoAdapter(Full).sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter(Full).sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter(Full).sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter(Full).sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:31"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:33"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:34"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:35"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(Partner)1347_storage)",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)1347_storage)": {
              "label": "mapping(address => struct DemoAdapter1.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)1347_storage": {
              "label": "struct DemoAdapter1.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:EthReceiver": {
        "src": "contracts/DemoAdapter(Full).sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:IExecutor": {
        "src": "contracts/DemoAdapter(Full).sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter(Full).sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:SwapAdapter": {
        "src": "contracts/DemoAdapter(Full).sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "3014e0a837f338b71c747eb8c980a123bb0b72ba323f3772bd12570601f50f98",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/BalancerV2.sol:BalancerV2": {
        "src": "contracts/BalancerV2/BalancerV2.sol:5",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/Coin98BalancerV2.sol:Coin98BalancerV1": {
        "src": "contracts/BalancerV2/Coin98BalancerV2.sol:4",
        "version": {
          "withMetadata": "ced9b0798676d2b158c949f3e40d483c062161731ff9338b08620be3b2f6ce0b",
          "withoutMetadata": "151357804a741906dc43844771fe38a0bf4c3e48be4f883e03a5f8ad8d33a194",
          "linkedWithoutMetadata": "151357804a741906dc43844771fe38a0bf4c3e48be4f883e03a5f8ad8d33a194"
        },
        "inherit": [
          "contracts/BalancerV2/BalancerV2.sol:BalancerV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IAsset.sol:IAsset": {
        "src": "contracts/interface/IAsset.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerV2.sol:IBalancerV2": {
        "src": "contracts/interface/IBalancerV2.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address payable,bool),uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "3014e0a837f338b71c747eb8c980a123bb0b72ba323f3772bd12570601f50f98",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:DemoAdapter1": {
        "src": "contracts/DemoAdapter(Full).sol:28",
        "version": {
          "withMetadata": "01ad07f539428247d5aa40d35b33715b1ab625c17d746b072d7dca72a017795b",
          "withoutMetadata": "d5a1c591570df081aef2b05ae678625a0050c5d89d14aeeb0cb84b87182980d8",
          "linkedWithoutMetadata": "d5a1c591570df081aef2b05ae678625a0050c5d89d14aeeb0cb84b87182980d8"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/DemoAdapter(Full).sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapStraight(uint256[],address,address,contract SwapAdapter[],bytes[],uint256[])",
          "swapRoutes(uint256[],address,address,bytes,address)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter1",
            "src": "contracts/DemoAdapter(Full).sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter(Full).sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter(Full).sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter(Full).sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:31"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:33"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:34"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:35"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(Partner)1347_storage)",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)1347_storage)": {
              "label": "mapping(address => struct DemoAdapter1.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)1347_storage": {
              "label": "struct DemoAdapter1.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:EthReceiver": {
        "src": "contracts/DemoAdapter(Full).sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:IExecutor": {
        "src": "contracts/DemoAdapter(Full).sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter(Full).sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:SwapAdapter": {
        "src": "contracts/DemoAdapter(Full).sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "3014e0a837f338b71c747eb8c980a123bb0b72ba323f3772bd12570601f50f98",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:DemoAdapter1": {
        "src": "contracts/DemoAdapter(Full).sol:28",
        "version": {
          "withMetadata": "aff07a2bb759dab39e27910d2bed6bb3475111c3fdd538782dcbc5467ada9160",
          "withoutMetadata": "e2920f4c3d1c9c6275575423530cfedd07f923adcc8a4a906a9e5329e0437ed2",
          "linkedWithoutMetadata": "e2920f4c3d1c9c6275575423530cfedd07f923adcc8a4a906a9e5329e0437ed2"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/DemoAdapter(Full).sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapStraight(uint256[],address,address,contract SwapAdapter[],bytes[],uint256[])",
          "swapRoutes(uint256,address,address,bytes,uint256,address)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter1",
            "src": "contracts/DemoAdapter(Full).sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter(Full).sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter(Full).sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter(Full).sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:31"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:33"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:34"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:35"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(Partner)1347_storage)",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)1347_storage)": {
              "label": "mapping(address => struct DemoAdapter1.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)1347_storage": {
              "label": "struct DemoAdapter1.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:EthReceiver": {
        "src": "contracts/DemoAdapter(Full).sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:IExecutor": {
        "src": "contracts/DemoAdapter(Full).sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter(Full).sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:SwapAdapter": {
        "src": "contracts/DemoAdapter(Full).sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "3014e0a837f338b71c747eb8c980a123bb0b72ba323f3772bd12570601f50f98",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:12",
        "version": {
          "withMetadata": "e434aa8813406edd4f7cb83e6d2136967a08b55b81e501f70d2ea5e5c87d0edc",
          "withoutMetadata": "147ce95b97ed9d8a24c570937c05ff3ff637715ad3712df677efe31c3edfd1e9",
          "linkedWithoutMetadata": "147ce95b97ed9d8a24c570937c05ff3ff637715ad3712df677efe31c3edfd1e9"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "token0",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:26"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:pairSwap": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/Coin98CurveV2.sol:Coin98CurveV2": {
        "src": "contracts/CurveV2/Coin98CurveV2.sol:9",
        "version": {
          "withMetadata": "f6850d7d2b3e8723926b7f2d3d24f7cf7bb15ac0d533833a72c005b9f1d5946f",
          "withoutMetadata": "54eed52a787055efe78cefe847c8467787d4da898b7bc7c265ddd4b78326b917",
          "linkedWithoutMetadata": "54eed52a787055efe78cefe847c8467787d4da898b7bc7c265ddd4b78326b917"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/CurveV2/CurveV2.sol:CurveV2",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address payable,bytes)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98CurveV2",
            "src": "contracts/CurveV2/Coin98CurveV2.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/CurveV2.sol:CurveV2": {
        "src": "contracts/CurveV2/CurveV2.sol:8",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:DemoAdapter1": {
        "src": "contracts/DemoAdapter(Full).sol:28",
        "version": {
          "withMetadata": "8985b33695b123bf86a7c51254372149cddaf22cce82832ff0741914a2accb6f",
          "withoutMetadata": "5e824b10af7443c0381c9538f31e13bd03cd29d520bb4e856b8654c450c43822",
          "linkedWithoutMetadata": "5e824b10af7443c0381c9538f31e13bd03cd29d520bb4e856b8654c450c43822"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/DemoAdapter(Full).sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapStraight(uint256,address,address,contract SwapAdapter[],bytes[],uint256[])",
          "swapRoutes(uint256,address,address,bytes,address)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter1",
            "src": "contracts/DemoAdapter(Full).sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter(Full).sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter(Full).sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter(Full).sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:31"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:33"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:34"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:35"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(Partner)1606_storage)",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)1606_storage)": {
              "label": "mapping(address => struct DemoAdapter1.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)1606_storage": {
              "label": "struct DemoAdapter1.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:EthReceiver": {
        "src": "contracts/DemoAdapter(Full).sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:IExecutor": {
        "src": "contracts/DemoAdapter(Full).sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter(Full).sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:SwapAdapter": {
        "src": "contracts/DemoAdapter(Full).sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:Executor": {
        "src": "contracts/Executor.sol:11",
        "version": {
          "withMetadata": "f45a3c898cf4ea7db458d03bafa0a65a9ac498e95afed5d21845d9d59b3bd8f8",
          "withoutMetadata": "7cb446c5bdcd55c71ca0ba6fd3257c22d6e6ffc36ea63743eb9d3d3d417a1f24",
          "linkedWithoutMetadata": "7cb446c5bdcd55c71ca0ba6fd3257c22d6e6ffc36ea63743eb9d3d3d417a1f24"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "execution(bytes,address,address)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:SwapAdaptor": {
        "src": "contracts/Executor.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurveV2Pool.sol:ICurveV2Pool": {
        "src": "contracts/interface/ICurveV2Pool.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(uint256,uint256,uint256,uint256)",
          "exchange(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETH.sol:IWETH": {
        "src": "contracts/interface/IWETH.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "3014e0a837f338b71c747eb8c980a123bb0b72ba323f3772bd12570601f50f98",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/utils/WethProvider.sol:WethProvider": {
        "src": "contracts/utils/WethProvider.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethProvider",
            "src": "contracts/utils/WethProvider.sol:7"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts/utils/WethProvider.sol:5"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/BalancerV2.sol:BalancerV2": {
        "src": "contracts/BalancerV2/BalancerV2.sol:5",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/Coin98BalancerV2.sol:Coin98BalancerV1": {
        "src": "contracts/BalancerV2/Coin98BalancerV2.sol:4",
        "version": {
          "withMetadata": "5fb3e56cb5d153dd55220704f49635afa22f94f2bddc20951e015607a3c8ccde",
          "withoutMetadata": "5690dd188345aec7ce97eeea29f72dad3785e7a2af2aa8b05637a6db69e5880e",
          "linkedWithoutMetadata": "5690dd188345aec7ce97eeea29f72dad3785e7a2af2aa8b05637a6db69e5880e"
        },
        "inherit": [
          "contracts/BalancerV2/BalancerV2.sol:BalancerV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/Coin98CurveV2.sol:Coin98CurveV2": {
        "src": "contracts/CurveV2/Coin98CurveV2.sol:8",
        "version": {
          "withMetadata": "06fa9495e576a7ae4bb0693b9db5d999c83ad0cf4acd0aa9a3a040a781581d35",
          "withoutMetadata": "2c045375762c0bf7bfdeed2c0c891cc651f6814038feea169517b6a0837ce765",
          "linkedWithoutMetadata": "2c045375762c0bf7bfdeed2c0c891cc651f6814038feea169517b6a0837ce765"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/CurveV2/CurveV2.sol:CurveV2",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address payable,bytes)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98CurveV2",
            "src": "contracts/CurveV2/Coin98CurveV2.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/CurveV2.sol:CurveV2": {
        "src": "contracts/CurveV2/CurveV2.sol:8",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:DemoAdapter1": {
        "src": "contracts/DemoAdapter(Full).sol:28",
        "version": {
          "withMetadata": "2b8bf090a99b1cef24ef5e6ef45f9278db77277a1c1d8b37c36bce56cb10e022",
          "withoutMetadata": "457b64081691618f6d0c3548deaed83a55465b3f38f6231af6c357ddb2257a9d",
          "linkedWithoutMetadata": "457b64081691618f6d0c3548deaed83a55465b3f38f6231af6c357ddb2257a9d"
        },
        "inherit": [
          "contracts/DemoAdapter(Full).sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapStraight(uint256,address,address,contract SwapAdapter[],bytes[],uint256[])",
          "swapRoutes(uint256,address,address,bytes,address)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter1",
            "src": "contracts/DemoAdapter(Full).sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter(Full).sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter(Full).sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter(Full).sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:31"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:33"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:34"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:35"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Partner)1800_storage)",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)1800_storage)": {
              "label": "mapping(address => struct DemoAdapter1.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)1800_storage": {
              "label": "struct DemoAdapter1.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:EthReceiver": {
        "src": "contracts/DemoAdapter(Full).sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:IExecutor": {
        "src": "contracts/DemoAdapter(Full).sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter(Full).sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:SwapAdapter": {
        "src": "contracts/DemoAdapter(Full).sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:Executor": {
        "src": "contracts/Executor.sol:10",
        "version": {
          "withMetadata": "5cbf6f5e10107ea7bd03960a80c7320622c606eaa2bd5eb41f7b0e4cdc9b99f8",
          "withoutMetadata": "d0047dc03c7164205165aa8b59b88e689490b7019df76a7791371939e423e5f7",
          "linkedWithoutMetadata": "d0047dc03c7164205165aa8b59b88e689490b7019df76a7791371939e423e5f7"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "chainRouter(bytes[])",
          "execution(bytes,address,address)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:SwapAdaptor": {
        "src": "contracts/Executor.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IAsset.sol:IAsset": {
        "src": "contracts/interface/IAsset.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerV2.sol:IBalancerV2": {
        "src": "contracts/interface/IBalancerV2.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address payable,bool),uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurveV2Pool.sol:ICurveV2Pool": {
        "src": "contracts/interface/ICurveV2Pool.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(uint256,uint256,uint256,uint256)",
          "exchange(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETH.sol:IWETH": {
        "src": "contracts/interface/IWETH.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "3014e0a837f338b71c747eb8c980a123bb0b72ba323f3772bd12570601f50f98",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/utils/WethProvider.sol:WethProvider": {
        "src": "contracts/utils/WethProvider.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethProvider",
            "src": "contracts/utils/WethProvider.sol:7"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts/utils/WethProvider.sol:5"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:DemoAdapter1": {
        "src": "contracts/DemoAdapter(Full).sol:28",
        "version": {
          "withMetadata": "5f3c9131d063a6ceba3d8df229d6c81848c594040900074e5d5f4f97121ea58d",
          "withoutMetadata": "457b64081691618f6d0c3548deaed83a55465b3f38f6231af6c357ddb2257a9d",
          "linkedWithoutMetadata": "457b64081691618f6d0c3548deaed83a55465b3f38f6231af6c357ddb2257a9d"
        },
        "inherit": [
          "contracts/DemoAdapter(Full).sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapStraight(uint256,address,address,contract SwapAdapter[],bytes[],uint256[])",
          "swapRoutes(uint256,address,address,bytes,address)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter1",
            "src": "contracts/DemoAdapter(Full).sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter(Full).sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter(Full).sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter(Full).sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:31"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:33"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:34"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:35"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Partner)1345_storage)",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)1345_storage)": {
              "label": "mapping(address => struct DemoAdapter1.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)1345_storage": {
              "label": "struct DemoAdapter1.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:EthReceiver": {
        "src": "contracts/DemoAdapter(Full).sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:IExecutor": {
        "src": "contracts/DemoAdapter(Full).sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter(Full).sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:SwapAdapter": {
        "src": "contracts/DemoAdapter(Full).sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:11",
        "version": {
          "withMetadata": "00dc45730933e7f87b3574cc4c08ac562cb3997bb1253de31aa29338e0fc6b69",
          "withoutMetadata": "fb2c275460f8b4ef05a1b008573b9a7684582c72f808b4a0fd0acf432e836817",
          "linkedWithoutMetadata": "fb2c275460f8b4ef05a1b008573b9a7684582c72f808b4a0fd0acf432e836817"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)",
          "withdrawStuckERC20(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "token0",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:25"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:pairSwap": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "3014e0a837f338b71c747eb8c980a123bb0b72ba323f3772bd12570601f50f98",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:DemoAdapter1": {
        "src": "contracts/DemoAdapter(Full).sol:28",
        "version": {
          "withMetadata": "075e3a68124b24621211b02c870cf0f1e8b2c01537e71874b98367e9e18990d7",
          "withoutMetadata": "0ae718c66d08d5b600fa1b72f13eb8d37fe5c780ba86bfe30470e79deb411758",
          "linkedWithoutMetadata": "0ae718c66d08d5b600fa1b72f13eb8d37fe5c780ba86bfe30470e79deb411758"
        },
        "inherit": [
          "contracts/DemoAdapter(Full).sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapStraight(uint256,address,address,contract SwapAdapter[],bytes[],uint256[])",
          "swapRoutes(uint256,address,address,bytes,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter1",
            "src": "contracts/DemoAdapter(Full).sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter(Full).sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter(Full).sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter(Full).sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:31"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:33"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:34"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:35"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Partner)1345_storage)",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)1345_storage)": {
              "label": "mapping(address => struct DemoAdapter1.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)1345_storage": {
              "label": "struct DemoAdapter1.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:EthReceiver": {
        "src": "contracts/DemoAdapter(Full).sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:IExecutor": {
        "src": "contracts/DemoAdapter(Full).sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter(Full).sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:SwapAdapter": {
        "src": "contracts/DemoAdapter(Full).sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "3014e0a837f338b71c747eb8c980a123bb0b72ba323f3772bd12570601f50f98",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:DemoAdapter1": {
        "src": "contracts/DemoAdapter(Full).sol:28",
        "version": {
          "withMetadata": "b5dca23eece34f47442ecb011958c798c70233b7654dfdf77d4cf4c140ed2340",
          "withoutMetadata": "f90dea4666f2d8215aeef3c35c72e35eeaad5b333385943b618bcef9e18f39d2",
          "linkedWithoutMetadata": "f90dea4666f2d8215aeef3c35c72e35eeaad5b333385943b618bcef9e18f39d2"
        },
        "inherit": [
          "contracts/DemoAdapter(Full).sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapStraight(uint256,address,address,contract SwapAdapter[],bytes[],uint256[])",
          "swapRoutes(uint256,address,address,bytes,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter1",
            "src": "contracts/DemoAdapter(Full).sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter(Full).sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter(Full).sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter(Full).sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:31"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:33"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:34"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:35"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Partner)1345_storage)",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)1345_storage)": {
              "label": "mapping(address => struct DemoAdapter1.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)1345_storage": {
              "label": "struct DemoAdapter1.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:EthReceiver": {
        "src": "contracts/DemoAdapter(Full).sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:IExecutor": {
        "src": "contracts/DemoAdapter(Full).sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter(Full).sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:SwapAdapter": {
        "src": "contracts/DemoAdapter(Full).sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "3014e0a837f338b71c747eb8c980a123bb0b72ba323f3772bd12570601f50f98",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/Coin98CurveV2.sol:Coin98CurveV2": {
        "src": "contracts/CurveV2/Coin98CurveV2.sol:7",
        "version": {
          "withMetadata": "35df97706b4027cf160a15dbf89537d75afd1ef5f08933db2e60ff0647659536",
          "withoutMetadata": "b96aa2de888edb3ea7efc88d596c1cd0894be0339d8fcbba5f112f3e445d34eb",
          "linkedWithoutMetadata": "b96aa2de888edb3ea7efc88d596c1cd0894be0339d8fcbba5f112f3e445d34eb"
        },
        "inherit": [
          "contracts/CurveV2/CurveV2.sol:CurveV2",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98CurveV2",
            "src": "contracts/CurveV2/Coin98CurveV2.sol:20"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/CurveV2.sol:CurveV2": {
        "src": "contracts/CurveV2/CurveV2.sol:8",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:DemoAdapter1": {
        "src": "contracts/DemoAdapter(Full).sol:28",
        "version": {
          "withMetadata": "46b87b5c53a74dd09992916f5f9cdd950b23339fdf799e3489b052cb1981df2b",
          "withoutMetadata": "0a20637813d566c5993613e0b3942fab7a3c119dcf8a3a92c148f8e4343f98a7",
          "linkedWithoutMetadata": "0a20637813d566c5993613e0b3942fab7a3c119dcf8a3a92c148f8e4343f98a7"
        },
        "inherit": [
          "contracts/DemoAdapter(Full).sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapStraight(uint256,address,address,contract SwapAdapter[],bytes[],uint256[])",
          "swapRoutes(uint256,address,address,bytes,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter1",
            "src": "contracts/DemoAdapter(Full).sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter(Full).sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter(Full).sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter(Full).sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:31"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:33"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:34"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:35"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Partner)1540_storage)",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)1540_storage)": {
              "label": "mapping(address => struct DemoAdapter1.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)1540_storage": {
              "label": "struct DemoAdapter1.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:EthReceiver": {
        "src": "contracts/DemoAdapter(Full).sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:IExecutor": {
        "src": "contracts/DemoAdapter(Full).sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter(Full).sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:SwapAdapter": {
        "src": "contracts/DemoAdapter(Full).sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurveV2Pool.sol:ICurveV2Pool": {
        "src": "contracts/interface/ICurveV2Pool.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(uint256,uint256,uint256,uint256)",
          "exchange(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETH.sol:IWETH": {
        "src": "contracts/interface/IWETH.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "3014e0a837f338b71c747eb8c980a123bb0b72ba323f3772bd12570601f50f98",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/utils/WethProvider.sol:WethProvider": {
        "src": "contracts/utils/WethProvider.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethProvider",
            "src": "contracts/utils/WethProvider.sol:7"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts/utils/WethProvider.sol:5"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:DemoAdapter1": {
        "src": "contracts/DemoAdapter(Full).sol:28",
        "version": {
          "withMetadata": "74e63bd1dabd9c195a1f97897d956ded5c43b1a0dd91238e73743a5a6859751c",
          "withoutMetadata": "36cae757bbc33d25e02d0f2168abc7c3dc28e2a13b51f2655418038bfbd45ba7",
          "linkedWithoutMetadata": "36cae757bbc33d25e02d0f2168abc7c3dc28e2a13b51f2655418038bfbd45ba7"
        },
        "inherit": [
          "contracts/DemoAdapter(Full).sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapStraight(uint256,address,address,contract SwapAdapter[],bytes[],uint256[])",
          "swapRoutes(uint256,address,address,bytes,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter1",
            "src": "contracts/DemoAdapter(Full).sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter(Full).sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter(Full).sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter(Full).sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:31"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:33"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:34"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:35"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Partner)1345_storage)",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)1345_storage)": {
              "label": "mapping(address => struct DemoAdapter1.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)1345_storage": {
              "label": "struct DemoAdapter1.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:EthReceiver": {
        "src": "contracts/DemoAdapter(Full).sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:IExecutor": {
        "src": "contracts/DemoAdapter(Full).sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter(Full).sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:SwapAdapter": {
        "src": "contracts/DemoAdapter(Full).sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "3014e0a837f338b71c747eb8c980a123bb0b72ba323f3772bd12570601f50f98",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV2/Coin98ZeroxV2.sol:Coin98ZeroxV2": {
        "src": "contracts/0xV2/Coin98ZeroxV2.sol:6",
        "version": {
          "withMetadata": "a4692dd730a4073052b19a55469f23395c6074d6091d2be2288c2a49558a25a9",
          "withoutMetadata": "9d53ef4c54c0875b829e982d97747deb6a1978ecc852f3bd4a3c616af2c437fa",
          "linkedWithoutMetadata": "9d53ef4c54c0875b829e982d97747deb6a1978ecc852f3bd4a3c616af2c437fa"
        },
        "inherit": [
          "contracts/0xV2/ZeroxV2.sol:ZeroxV2",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address,address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98ZeroxV2",
            "src": "contracts/0xV2/Coin98ZeroxV2.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV2/LibOrderV2.sol:LibOrderV2": {
        "src": "contracts/0xV2/LibOrderV2.sol:4",
        "version": {
          "withMetadata": "2eb70bb2e07d645fa2717d03e976647ad5c2403959721fc38d783234c084f34b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV2/ZeroxV2.sol:ZeroxV2": {
        "src": "contracts/0xV2/ZeroxV2.sol:9",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "contracts/library/LibBytes.sol:LibBytes",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ZeroxV2",
            "src": "contracts/0xV2/ZeroxV2.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "erc20Proxy",
            "src": "contracts/0xV2/ZeroxV2.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV4/Coin98ZeroxV4.sol:Coin98ZeroxV4": {
        "src": "contracts/0xV4/Coin98ZeroxV4.sol:6",
        "version": {
          "withMetadata": "8818ed7bb0e9027fc764f56ad965a96ab7e23c0a0cfc0217783e20a8996f9e6a",
          "withoutMetadata": "97dcb983a078b91628e197f3e6091443d4b47ff28e1531245a2ff3b8ec3c377a",
          "linkedWithoutMetadata": "97dcb983a078b91628e197f3e6091443d4b47ff28e1531245a2ff3b8ec3c377a"
        },
        "inherit": [
          "contracts/0xV4/ZeroxV4.sol:ZeroxV4",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98ZeroxV4",
            "src": "contracts/0xV4/Coin98ZeroxV4.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV4/LibOrderV4.sol:LibOrderV4": {
        "src": "contracts/0xV4/LibOrderV4.sol:4",
        "version": {
          "withMetadata": "e8e3c627924fd7e05e65a0c6d05d700a70a6bbc026b9fa159b5455e23df29f05",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV4/ZeroxV4.sol:ZeroxV4": {
        "src": "contracts/0xV4/ZeroxV4.sol:9",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AaveeV2/AaveeV2.sol:Aavee2": {
        "src": "contracts/AaveeV2/AaveeV2.sol:7",
        "version": {
          "withMetadata": "88500c101f009b0fd9f4e2230b1cbfdaa0cd66c01678fdc6dec65e0078395983",
          "withoutMetadata": "9c7e483cd8c39dffbb3a614a3242a0fe1bcbcfbbf93f318119eb10b63df48d3c",
          "linkedWithoutMetadata": "9c7e483cd8c39dffbb3a614a3242a0fe1bcbcfbbf93f318119eb10b63df48d3c"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(uint16,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Aavee2",
            "src": "contracts/AaveeV2/AaveeV2.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "refCode",
            "src": "contracts/AaveeV2/AaveeV2.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "lendingPool",
            "src": "contracts/AaveeV2/AaveeV2.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "wethGateway",
            "src": "contracts/AaveeV2/AaveeV2.sol:15"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AaveeV2/Coin98AaveeV2.sol:Coin98AaveeV2": {
        "src": "contracts/AaveeV2/Coin98AaveeV2.sol:6",
        "version": {
          "withMetadata": "a44a39b6620020fae77da1d91ff087bdbba968bc7ce43924c06e0e2c17095b57",
          "withoutMetadata": "e046ad4e64f66fda14c985e957f6c0f7ecbd292d1b2ec0d31a90211e210a7507",
          "linkedWithoutMetadata": "e046ad4e64f66fda14c985e957f6c0f7ecbd292d1b2ec0d31a90211e210a7507"
        },
        "inherit": [
          "contracts/AaveeV2/AaveeV2.sol:Aavee2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(uint16,address,address)",
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98AaveeV2",
            "src": "contracts/AaveeV2/Coin98AaveeV2.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV1/BalancerV1.sol:BalancerV1": {
        "src": "contracts/BalancerV1/BalancerV1.sol:9",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV1/Coin98BalancerV1.sol:Coin98BalancerV1": {
        "src": "contracts/BalancerV1/Coin98BalancerV1.sol:4",
        "version": {
          "withMetadata": "0830b2615042fdd8957e610eb8400a7e53d8baeabbee3a01cc26afcca2076fee",
          "withoutMetadata": "c07dbe617c1089559dffdd5520dfdd8c8211557300e504d881c5059cc8b0538e",
          "linkedWithoutMetadata": "c07dbe617c1089559dffdd5520dfdd8c8211557300e504d881c5059cc8b0538e"
        },
        "inherit": [
          "contracts/BalancerV1/BalancerV1.sol:BalancerV1",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98BalancerV1",
            "src": "contracts/BalancerV1/Coin98BalancerV1.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/BalancerV2.sol:BalancerV2": {
        "src": "contracts/BalancerV2/BalancerV2.sol:5",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/Coin98BalancerV2.sol:Coin98BalancerV1": {
        "src": "contracts/BalancerV2/Coin98BalancerV2.sol:4",
        "version": {
          "withMetadata": "cd2d9f5a1aa63532a0ec60f171f9105a9716cabdde57fb45ce4ac0e74d946fea",
          "withoutMetadata": "5690dd188345aec7ce97eeea29f72dad3785e7a2af2aa8b05637a6db69e5880e",
          "linkedWithoutMetadata": "5690dd188345aec7ce97eeea29f72dad3785e7a2af2aa8b05637a6db69e5880e"
        },
        "inherit": [
          "contracts/BalancerV2/BalancerV2.sol:BalancerV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Curve/Coin98Curve.sol:Coin98Adapter1": {
        "src": "contracts/Curve/Coin98Curve.sol:3",
        "version": {
          "withMetadata": "9885550ee4718d4ba3eb45ba09a818e8bf353888f1d99856eee29fa1f317a18f",
          "withoutMetadata": "27675f3b7ee3a03d8968d81edae01e4e343aa705915d44b72803d418e27e5ea4",
          "linkedWithoutMetadata": "27675f3b7ee3a03d8968d81edae01e4e343aa705915d44b72803d418e27e5ea4"
        },
        "inherit": [
          "contracts/Curve/curve.sol:Curve"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Curve/curve.sol:Curve": {
        "src": "contracts/Curve/curve.sol:8",
        "version": {
          "withMetadata": "7fa3cf617250c5c482e1e05e02765b4510b4d3ca107cfae8809d621903f92571",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/Coin98CurveV2.sol:Coin98CurveV2": {
        "src": "contracts/CurveV2/Coin98CurveV2.sol:7",
        "version": {
          "withMetadata": "a030180c75318eec24580687c9b07392a8761a58082ef4ef3b11820f91e87c0e",
          "withoutMetadata": "6fcc6ea71ab3882db1b98f81368380fbfc2024f57c127b90ee2c100415386288",
          "linkedWithoutMetadata": "6fcc6ea71ab3882db1b98f81368380fbfc2024f57c127b90ee2c100415386288"
        },
        "inherit": [
          "contracts/CurveV2/CurveV2.sol:CurveV2",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98CurveV2",
            "src": "contracts/CurveV2/Coin98CurveV2.sol:20"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/CurveV2.sol:CurveV2": {
        "src": "contracts/CurveV2/CurveV2.sol:8",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:DemoAdapter1": {
        "src": "contracts/DemoAdapter(Full).sol:28",
        "version": {
          "withMetadata": "4bc71d70423bbea9f5b3ef4b3cae020112a2b33db850676a49b28635764eecc2",
          "withoutMetadata": "553039c929087513e47314d8ec8290aa5fe0d5f9645f22201dff38b4d1618d0c",
          "linkedWithoutMetadata": "553039c929087513e47314d8ec8290aa5fe0d5f9645f22201dff38b4d1618d0c"
        },
        "inherit": [
          "contracts/DemoAdapter(Full).sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapRoutes(uint256,address,address,bytes,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter1",
            "src": "contracts/DemoAdapter(Full).sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter(Full).sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter(Full).sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter(Full).sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:31"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:33"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:34"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:35"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Partner)3233_storage)",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)3233_storage)": {
              "label": "mapping(address => struct DemoAdapter1.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)3233_storage": {
              "label": "struct DemoAdapter1.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:EthReceiver": {
        "src": "contracts/DemoAdapter(Full).sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:IExecutor": {
        "src": "contracts/DemoAdapter(Full).sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter(Full).sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:SwapAdapter": {
        "src": "contracts/DemoAdapter(Full).sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:DemoAdapter": {
        "src": "contracts/DemoAdapter.sol:25",
        "version": {
          "withMetadata": "ca4c329693a2aab47925654765caa1bd3539ba369045863ff2e080402c9751c1",
          "withoutMetadata": "cb41de3d0d18b327f3bfd615bd9fde1c5778300db2816c3aaab75cd87354833a",
          "linkedWithoutMetadata": "cb41de3d0d18b327f3bfd615bd9fde1c5778300db2816c3aaab75cd87354833a"
        },
        "inherit": [
          "contracts/DemoAdapter.sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapRoutes(uint256,address,address,(address[],uint256[],uint256[],uint256[],bytes[]))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter",
            "src": "contracts/DemoAdapter.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:28"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:30"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:31"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:32"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Partner)3685_storage)",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:62"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)3685_storage)": {
              "label": "mapping(address => struct DemoAdapter.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)3685_storage": {
              "label": "struct DemoAdapter.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:EthReceiver": {
        "src": "contracts/DemoAdapter.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:SwapAdapter": {
        "src": "contracts/DemoAdapter.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:Executor": {
        "src": "contracts/Executor.sol:9",
        "version": {
          "withMetadata": "1063dd3f32e65c2a1f66dcfbf383e377d819c1479651031dedfaa1e81e638c15",
          "withoutMetadata": "a400511a649eedd0a73f372776f7736c3359a737a46000cc8e1d4865e56bb689",
          "linkedWithoutMetadata": "a400511a649eedd0a73f372776f7736c3359a737a46000cc8e1d4865e56bb689"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "chainRouter(bytes[])",
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:SwapAdaptor": {
        "src": "contracts/Executor.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "14def990f754591014092f392f6b0500904855d59ed166756366e83717584a9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:10",
        "version": {
          "withMetadata": "14dc67e662c57e57e1536e3b36f020cd53528581800faa7571eadeb61bd968dd",
          "withoutMetadata": "6eb0f4f1d283a072e205e44569050474578fe2065d15695308a0bc146178816d",
          "linkedWithoutMetadata": "6eb0f4f1d283a072e205e44569050474578fe2065d15695308a0bc146178816d"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "token0",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:24"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:pairSwap": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap.sol:Coin98Uniswap": {
        "src": "contracts/Uniswap/Coin98Uniswap.sol:6",
        "version": {
          "withMetadata": "e5337a4681982511290ba2094c465e89395b6381401ba80a51f278bd306aeb8f",
          "withoutMetadata": "21c8491970559ae179e987e5a6c2d891c75222abe7a8250d16b2f4e778ad936d",
          "linkedWithoutMetadata": "21c8491970559ae179e987e5a6c2d891c75222abe7a8250d16b2f4e778ad936d"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/UniswapV3/Coin98UniswapV3.sol:Coin98UniswapV3": {
        "src": "contracts/UniswapV3/Coin98UniswapV3.sol:6",
        "version": {
          "withMetadata": "4e8ac064385952910d36ff6fa049736119af14ce6fa5df67e6df149f7dfc9dba",
          "withoutMetadata": "8ad922d6e403fb212ed9a37878ab8893eef2001dabc5add492e24348a1365097",
          "linkedWithoutMetadata": "8ad922d6e403fb212ed9a37878ab8893eef2001dabc5add492e24348a1365097"
        },
        "inherit": [
          "contracts/UniswapV3/UniswapV3.sol:UniswapV3",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98UniswapV3",
            "src": "contracts/UniswapV3/Coin98UniswapV3.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/UniswapV3/UniswapV3.sol:UniswapV3": {
        "src": "contracts/UniswapV3/UniswapV3.sol:9",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IAaveLendingPool.sol:IAaveLendingPool": {
        "src": "contracts/interface/IAaveLendingPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,uint256,address,uint16)",
          "withdraw(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IAsset.sol:IAsset": {
        "src": "contracts/interface/IAsset.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerPool.sol:IBalancerPool": {
        "src": "contracts/interface/IBalancerPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactAmountIn(address,uint256,address,uint256,uint256)",
          "swapExactAmountOut(address,uint256,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerProxy.sol:IBalancerProxy": {
        "src": "contracts/interface/IBalancerProxy.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "batchSwapExactIn(struct IBalancerProxy.Swap[],address,address,uint256,uint256)",
          "batchSwapExactOut(struct IBalancerProxy.Swap[],address,address,uint256)",
          "batchEthInSwapExactIn(struct IBalancerProxy.Swap[],address,uint256)",
          "batchEthOutSwapExactIn(struct IBalancerProxy.Swap[],address,uint256,uint256)",
          "batchEthInSwapExactOut(struct IBalancerProxy.Swap[],address)",
          "batchEthOutSwapExactOut(struct IBalancerProxy.Swap[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerV2.sol:IBalancerV2": {
        "src": "contracts/interface/IBalancerV2.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address payable,bool),uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurveEthPool.sol:ICurveEthPool": {
        "src": "contracts/interface/ICurveEthPool.sol:2",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange(int128,int128,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurvePool.sol:ICurvePool": {
        "src": "contracts/interface/ICurvePool.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(int128,int128,uint256,uint256)",
          "exchange(int128,int128,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurveV2Pool.sol:ICurveV2Pool": {
        "src": "contracts/interface/ICurveV2Pool.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(uint256,uint256,uint256,uint256)",
          "exchange(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IOneInchPool.sol:IOneInchPool": {
        "src": "contracts/interface/IOneInchPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(address,address,uint256,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ISwapRouterUniV3.sol:ISwapRouterUniV3": {
        "src": "contracts/interface/ISwapRouterUniV3.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETH.sol:IWETH": {
        "src": "contracts/interface/IWETH.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETHGateway.sol:IWETHGateway": {
        "src": "contracts/interface/IWETHGateway.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "depositETH(address,address,uint16)",
          "withdrawETH(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IZeroxV2.sol:IZeroxV2": {
        "src": "contracts/interface/IZeroxV2.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "marketSellOrdersNoThrow(struct LibOrderV2.Order[],uint256,bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IZeroxV4.sol:IZeroxV4": {
        "src": "contracts/interface/IZeroxV4.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "fillRfqOrder((address,address,uint128,uint128,address,address,address,bytes32,uint64,uint256),(uint8,uint8,bytes32,bytes32),uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/LibBytes.sol:LibBytes": {
        "src": "contracts/library/LibBytes.sol:21",
        "version": {
          "withMetadata": "5cd748fc6431006fc8c9777d2ef1dcd8988adefa5e391c51f8deb9ce2ba4fbdc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/LibBytes.sol:LibBytes",
          "contracts/library/LibBytesRichErrors.sol:LibBytesRichErrors",
          "contracts/library/LibRichErrors.sol:LibRichErrors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/LibBytesRichErrors.sol:LibBytesRichErrors": {
        "src": "contracts/library/LibBytesRichErrors.sol:17",
        "version": {
          "withMetadata": "fbee9838ec2d4fec413b65fde07f86f5e9bd816305a511cae9ff58e45978adf3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/LibRichErrors.sol:LibRichErrors": {
        "src": "contracts/library/LibRichErrors.sol:17",
        "version": {
          "withMetadata": "4878c56ab6d96200d2db4d92dad3071ca4fd70321510afdbf061bfe40ca541d6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "3014e0a837f338b71c747eb8c980a123bb0b72ba323f3772bd12570601f50f98",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/oneinch/Coin98OneInch.sol:Coin98ZeroxV2": {
        "src": "contracts/oneinch/Coin98OneInch.sol:6",
        "version": {
          "withMetadata": "ede060815a9c2111fea6263985302063fac6367ee6da18971666ae2e7f94a879",
          "withoutMetadata": "8f3492c90b0c35f24ae0fed9c5b15da2bcb85b1781663881310bc509c740f0b6",
          "linkedWithoutMetadata": "8f3492c90b0c35f24ae0fed9c5b15da2bcb85b1781663881310bc509c740f0b6"
        },
        "inherit": [
          "contracts/oneinch/OneInchPool.sol:OneInchPool"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/oneinch/OneInchPool.sol:OneInchPool": {
        "src": "contracts/oneinch/OneInchPool.sol:9",
        "version": {
          "withMetadata": "c7045b10c06e6e6a3c30b36b68ac7634af5f94c5425873d96404e3b24e8830ce",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/utils/WethProvider.sol:WethProvider": {
        "src": "contracts/utils/WethProvider.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethProvider",
            "src": "contracts/utils/WethProvider.sol:7"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts/utils/WethProvider.sol:5"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:DemoAdapter1": {
        "src": "contracts/DemoAdapter(Full).sol:28",
        "version": {
          "withMetadata": "b052ea8bb4a524d3e4f38ca3fff4424c74f92114a3f54881c2aa97e45c1703a9",
          "withoutMetadata": "3c08bbe18a8553317af21c05ecefa92be65f715b8e6fef57b41090414cf2c3ca",
          "linkedWithoutMetadata": "3c08bbe18a8553317af21c05ecefa92be65f715b8e6fef57b41090414cf2c3ca"
        },
        "inherit": [
          "contracts/DemoAdapter(Full).sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapRoutes(uint256,address,address,bytes,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter1",
            "src": "contracts/DemoAdapter(Full).sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter(Full).sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter(Full).sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter(Full).sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:31"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:33"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:34"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:35"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Partner)1345_storage)",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)1345_storage)": {
              "label": "mapping(address => struct DemoAdapter1.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)1345_storage": {
              "label": "struct DemoAdapter1.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:EthReceiver": {
        "src": "contracts/DemoAdapter(Full).sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:IExecutor": {
        "src": "contracts/DemoAdapter(Full).sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter(Full).sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:SwapAdapter": {
        "src": "contracts/DemoAdapter(Full).sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "364dc0ff5c1e1328f7f820b0825a684f530bf84e46a6f95cb42eb90483b674ac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "a37ecacb5ca46fad2d7b15c7bf6de8a667b4298174511c187feb2f360a520016",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:DemoAdapter1": {
        "src": "contracts/DemoAdapter(Full).sol:28",
        "version": {
          "withMetadata": "27951b6f00b9ef743c714559647078c514243d48b366b1b9f4bd44374b2a28b3",
          "withoutMetadata": "3c08bbe18a8553317af21c05ecefa92be65f715b8e6fef57b41090414cf2c3ca",
          "linkedWithoutMetadata": "3c08bbe18a8553317af21c05ecefa92be65f715b8e6fef57b41090414cf2c3ca"
        },
        "inherit": [
          "contracts/DemoAdapter(Full).sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapRoutes(uint256,address,address,bytes,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter1",
            "src": "contracts/DemoAdapter(Full).sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter(Full).sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter(Full).sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter(Full).sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:31"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:33"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:34"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:35"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Partner)1345_storage)",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)1345_storage)": {
              "label": "mapping(address => struct DemoAdapter1.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)1345_storage": {
              "label": "struct DemoAdapter1.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:EthReceiver": {
        "src": "contracts/DemoAdapter(Full).sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:IExecutor": {
        "src": "contracts/DemoAdapter(Full).sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter(Full).sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:SwapAdapter": {
        "src": "contracts/DemoAdapter(Full).sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "364dc0ff5c1e1328f7f820b0825a684f530bf84e46a6f95cb42eb90483b674ac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "a37ecacb5ca46fad2d7b15c7bf6de8a667b4298174511c187feb2f360a520016",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:Executor": {
        "src": "contracts/Executor.sol:9",
        "version": {
          "withMetadata": "0e1aa8c8d8963b36ddaf694f16d3bf162861d4573979aa41d4a77b1beb104d40",
          "withoutMetadata": "a400511a649eedd0a73f372776f7736c3359a737a46000cc8e1d4865e56bb689",
          "linkedWithoutMetadata": "a400511a649eedd0a73f372776f7736c3359a737a46000cc8e1d4865e56bb689"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "chainRouter(bytes[])",
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:SwapAdaptor": {
        "src": "contracts/Executor.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "364dc0ff5c1e1328f7f820b0825a684f530bf84e46a6f95cb42eb90483b674ac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:10",
        "version": {
          "withMetadata": "ae9950bf26a7969222185faa4deddabe94d0e61e999501b45fd8ebc692efec03",
          "withoutMetadata": "6eb0f4f1d283a072e205e44569050474578fe2065d15695308a0bc146178816d",
          "linkedWithoutMetadata": "6eb0f4f1d283a072e205e44569050474578fe2065d15695308a0bc146178816d"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "token0",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:24"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:pairSwap": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV2/Coin98ZeroxV2.sol:Coin98ZeroxV2": {
        "src": "contracts/0xV2/Coin98ZeroxV2.sol:6",
        "version": {
          "withMetadata": "4a6e5f65405206a365d73667507a3da481c78f76269aba2ae7a4937b862ec929",
          "withoutMetadata": "9d53ef4c54c0875b829e982d97747deb6a1978ecc852f3bd4a3c616af2c437fa",
          "linkedWithoutMetadata": "9d53ef4c54c0875b829e982d97747deb6a1978ecc852f3bd4a3c616af2c437fa"
        },
        "inherit": [
          "contracts/0xV2/ZeroxV2.sol:ZeroxV2",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address,address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98ZeroxV2",
            "src": "contracts/0xV2/Coin98ZeroxV2.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV2/LibOrderV2.sol:LibOrderV2": {
        "src": "contracts/0xV2/LibOrderV2.sol:4",
        "version": {
          "withMetadata": "2eb70bb2e07d645fa2717d03e976647ad5c2403959721fc38d783234c084f34b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV2/ZeroxV2.sol:ZeroxV2": {
        "src": "contracts/0xV2/ZeroxV2.sol:9",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "contracts/library/LibBytes.sol:LibBytes",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ZeroxV2",
            "src": "contracts/0xV2/ZeroxV2.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "erc20Proxy",
            "src": "contracts/0xV2/ZeroxV2.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV4/Coin98ZeroxV4.sol:Coin98ZeroxV4": {
        "src": "contracts/0xV4/Coin98ZeroxV4.sol:6",
        "version": {
          "withMetadata": "85e93522ef37e0be980b728c9487549f071ccda1c65e11a569de65c0ff79577a",
          "withoutMetadata": "97dcb983a078b91628e197f3e6091443d4b47ff28e1531245a2ff3b8ec3c377a",
          "linkedWithoutMetadata": "97dcb983a078b91628e197f3e6091443d4b47ff28e1531245a2ff3b8ec3c377a"
        },
        "inherit": [
          "contracts/0xV4/ZeroxV4.sol:ZeroxV4",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98ZeroxV4",
            "src": "contracts/0xV4/Coin98ZeroxV4.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV4/LibOrderV4.sol:LibOrderV4": {
        "src": "contracts/0xV4/LibOrderV4.sol:4",
        "version": {
          "withMetadata": "e8e3c627924fd7e05e65a0c6d05d700a70a6bbc026b9fa159b5455e23df29f05",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV4/ZeroxV4.sol:ZeroxV4": {
        "src": "contracts/0xV4/ZeroxV4.sol:9",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AaveeV2/AaveeV2.sol:Aavee2": {
        "src": "contracts/AaveeV2/AaveeV2.sol:7",
        "version": {
          "withMetadata": "024967e9ab25c02fa7ff1146e46b0a17f271d4bf0bee1d99d511b10d1c5be7d5",
          "withoutMetadata": "9c7e483cd8c39dffbb3a614a3242a0fe1bcbcfbbf93f318119eb10b63df48d3c",
          "linkedWithoutMetadata": "9c7e483cd8c39dffbb3a614a3242a0fe1bcbcfbbf93f318119eb10b63df48d3c"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(uint16,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Aavee2",
            "src": "contracts/AaveeV2/AaveeV2.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "refCode",
            "src": "contracts/AaveeV2/AaveeV2.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "lendingPool",
            "src": "contracts/AaveeV2/AaveeV2.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "wethGateway",
            "src": "contracts/AaveeV2/AaveeV2.sol:15"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AaveeV2/Coin98AaveeV2.sol:Coin98AaveeV2": {
        "src": "contracts/AaveeV2/Coin98AaveeV2.sol:6",
        "version": {
          "withMetadata": "879e71f86a3cc5f38a05f004c2d2886213018df4550ffd6faae83aed0433e2b8",
          "withoutMetadata": "e046ad4e64f66fda14c985e957f6c0f7ecbd292d1b2ec0d31a90211e210a7507",
          "linkedWithoutMetadata": "e046ad4e64f66fda14c985e957f6c0f7ecbd292d1b2ec0d31a90211e210a7507"
        },
        "inherit": [
          "contracts/AaveeV2/AaveeV2.sol:Aavee2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(uint16,address,address)",
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98AaveeV2",
            "src": "contracts/AaveeV2/Coin98AaveeV2.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV1/BalancerV1.sol:BalancerV1": {
        "src": "contracts/BalancerV1/BalancerV1.sol:9",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV1/Coin98BalancerV1.sol:Coin98BalancerV1": {
        "src": "contracts/BalancerV1/Coin98BalancerV1.sol:4",
        "version": {
          "withMetadata": "6a2478d043ad6db26b297829b892b6aa6c064f7a40d0946bef941d21d32414d1",
          "withoutMetadata": "c07dbe617c1089559dffdd5520dfdd8c8211557300e504d881c5059cc8b0538e",
          "linkedWithoutMetadata": "c07dbe617c1089559dffdd5520dfdd8c8211557300e504d881c5059cc8b0538e"
        },
        "inherit": [
          "contracts/BalancerV1/BalancerV1.sol:BalancerV1",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98BalancerV1",
            "src": "contracts/BalancerV1/Coin98BalancerV1.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/BalancerV2.sol:BalancerV2": {
        "src": "contracts/BalancerV2/BalancerV2.sol:5",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/Coin98BalancerV2.sol:Coin98BalancerV1": {
        "src": "contracts/BalancerV2/Coin98BalancerV2.sol:4",
        "version": {
          "withMetadata": "658506e0c48486c12d737e3b45d95987f4ce17efb89160fd13fa94a6bf91f648",
          "withoutMetadata": "5690dd188345aec7ce97eeea29f72dad3785e7a2af2aa8b05637a6db69e5880e",
          "linkedWithoutMetadata": "5690dd188345aec7ce97eeea29f72dad3785e7a2af2aa8b05637a6db69e5880e"
        },
        "inherit": [
          "contracts/BalancerV2/BalancerV2.sol:BalancerV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Curve/Coin98Curve.sol:Coin98Adapter1": {
        "src": "contracts/Curve/Coin98Curve.sol:3",
        "version": {
          "withMetadata": "6c91069a35828ffc8d65817e234316e55a773d59e97754f309166f063db4b287",
          "withoutMetadata": "27675f3b7ee3a03d8968d81edae01e4e343aa705915d44b72803d418e27e5ea4",
          "linkedWithoutMetadata": "27675f3b7ee3a03d8968d81edae01e4e343aa705915d44b72803d418e27e5ea4"
        },
        "inherit": [
          "contracts/Curve/curve.sol:Curve"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Curve/curve.sol:Curve": {
        "src": "contracts/Curve/curve.sol:8",
        "version": {
          "withMetadata": "a1eb0368fad1598c1e4501269ae196cbbe82f64a27f074adef6d89d4e636fc3d",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/Coin98CurveV2.sol:Coin98CurveV2": {
        "src": "contracts/CurveV2/Coin98CurveV2.sol:7",
        "version": {
          "withMetadata": "746ebea7697dc77e18125f9b4af9ec424fde794c62e99a784fddc17c98f7ccbc",
          "withoutMetadata": "6fcc6ea71ab3882db1b98f81368380fbfc2024f57c127b90ee2c100415386288",
          "linkedWithoutMetadata": "6fcc6ea71ab3882db1b98f81368380fbfc2024f57c127b90ee2c100415386288"
        },
        "inherit": [
          "contracts/CurveV2/CurveV2.sol:CurveV2",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98CurveV2",
            "src": "contracts/CurveV2/Coin98CurveV2.sol:20"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/CurveV2.sol:CurveV2": {
        "src": "contracts/CurveV2/CurveV2.sol:8",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:DemoAdapter1": {
        "src": "contracts/DemoAdapter(Full).sol:28",
        "version": {
          "withMetadata": "e35c233858106d75aa10c75508702482628afd692ab63cfb534a08b6c83add9e",
          "withoutMetadata": "553039c929087513e47314d8ec8290aa5fe0d5f9645f22201dff38b4d1618d0c",
          "linkedWithoutMetadata": "553039c929087513e47314d8ec8290aa5fe0d5f9645f22201dff38b4d1618d0c"
        },
        "inherit": [
          "contracts/DemoAdapter(Full).sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapRoutes(uint256,address,address,bytes,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter1",
            "src": "contracts/DemoAdapter(Full).sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter(Full).sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter(Full).sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter(Full).sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:31"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:33"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:34"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:35"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Partner)3233_storage)",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)3233_storage)": {
              "label": "mapping(address => struct DemoAdapter1.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)3233_storage": {
              "label": "struct DemoAdapter1.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:EthReceiver": {
        "src": "contracts/DemoAdapter(Full).sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:IExecutor": {
        "src": "contracts/DemoAdapter(Full).sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter(Full).sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:SwapAdapter": {
        "src": "contracts/DemoAdapter(Full).sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:DemoAdapter": {
        "src": "contracts/DemoAdapter.sol:25",
        "version": {
          "withMetadata": "db0344f2653823f94b211f89271c75069ee1857df0839b1475ee8e7793ab7bf6",
          "withoutMetadata": "cb41de3d0d18b327f3bfd615bd9fde1c5778300db2816c3aaab75cd87354833a",
          "linkedWithoutMetadata": "cb41de3d0d18b327f3bfd615bd9fde1c5778300db2816c3aaab75cd87354833a"
        },
        "inherit": [
          "contracts/DemoAdapter.sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapRoutes(uint256,address,address,(address[],uint256[],uint256[],uint256[],bytes[]))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter",
            "src": "contracts/DemoAdapter.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:28"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:30"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:31"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:32"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Partner)3685_storage)",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:62"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)3685_storage)": {
              "label": "mapping(address => struct DemoAdapter.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)3685_storage": {
              "label": "struct DemoAdapter.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:EthReceiver": {
        "src": "contracts/DemoAdapter.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:SwapAdapter": {
        "src": "contracts/DemoAdapter.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:Executor": {
        "src": "contracts/Executor.sol:9",
        "version": {
          "withMetadata": "c20876cefbadc4dc69a7f0f5febbbaa8f04a1bb4a7fa0d0cb2d5f7b2b3b82fbb",
          "withoutMetadata": "7e45454b361c838f051a6f374e9716ce7cd718a5ddd9c249327a99960147447f",
          "linkedWithoutMetadata": "7e45454b361c838f051a6f374e9716ce7cd718a5ddd9c249327a99960147447f"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "chainRouter(bytes[])",
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:SwapAdaptor": {
        "src": "contracts/Executor.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "364dc0ff5c1e1328f7f820b0825a684f530bf84e46a6f95cb42eb90483b674ac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:10",
        "version": {
          "withMetadata": "9ade19c50a0a3f04c94a9e279672675f04d952fb33e1881dc5fb20ec80599743",
          "withoutMetadata": "c2d4df631da3f4f483a707b756317231f77bb7064aec8c6c60216cef08cb9858",
          "linkedWithoutMetadata": "c2d4df631da3f4f483a707b756317231f77bb7064aec8c6c60216cef08cb9858"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "token0",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:24"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:pairSwap": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap.sol:Coin98Uniswap": {
        "src": "contracts/Uniswap/Coin98Uniswap.sol:6",
        "version": {
          "withMetadata": "777727ac74479b1b46ae5bdc5fc2f33b7be0a0480752b00bb02a737c683600c0",
          "withoutMetadata": "21c8491970559ae179e987e5a6c2d891c75222abe7a8250d16b2f4e778ad936d",
          "linkedWithoutMetadata": "21c8491970559ae179e987e5a6c2d891c75222abe7a8250d16b2f4e778ad936d"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/UniswapV3/Coin98UniswapV3.sol:Coin98UniswapV3": {
        "src": "contracts/UniswapV3/Coin98UniswapV3.sol:6",
        "version": {
          "withMetadata": "597ff8c5797e238acc654b97cded9f915bbb605611652696b3c6d83f68d76628",
          "withoutMetadata": "8ad922d6e403fb212ed9a37878ab8893eef2001dabc5add492e24348a1365097",
          "linkedWithoutMetadata": "8ad922d6e403fb212ed9a37878ab8893eef2001dabc5add492e24348a1365097"
        },
        "inherit": [
          "contracts/UniswapV3/UniswapV3.sol:UniswapV3",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98UniswapV3",
            "src": "contracts/UniswapV3/Coin98UniswapV3.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/UniswapV3/UniswapV3.sol:UniswapV3": {
        "src": "contracts/UniswapV3/UniswapV3.sol:9",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IAaveLendingPool.sol:IAaveLendingPool": {
        "src": "contracts/interface/IAaveLendingPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,uint256,address,uint16)",
          "withdraw(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IAsset.sol:IAsset": {
        "src": "contracts/interface/IAsset.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerPool.sol:IBalancerPool": {
        "src": "contracts/interface/IBalancerPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactAmountIn(address,uint256,address,uint256,uint256)",
          "swapExactAmountOut(address,uint256,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerProxy.sol:IBalancerProxy": {
        "src": "contracts/interface/IBalancerProxy.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "batchSwapExactIn(struct IBalancerProxy.Swap[],address,address,uint256,uint256)",
          "batchSwapExactOut(struct IBalancerProxy.Swap[],address,address,uint256)",
          "batchEthInSwapExactIn(struct IBalancerProxy.Swap[],address,uint256)",
          "batchEthOutSwapExactIn(struct IBalancerProxy.Swap[],address,uint256,uint256)",
          "batchEthInSwapExactOut(struct IBalancerProxy.Swap[],address)",
          "batchEthOutSwapExactOut(struct IBalancerProxy.Swap[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerV2.sol:IBalancerV2": {
        "src": "contracts/interface/IBalancerV2.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address payable,bool),uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurveEthPool.sol:ICurveEthPool": {
        "src": "contracts/interface/ICurveEthPool.sol:2",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange(int128,int128,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurvePool.sol:ICurvePool": {
        "src": "contracts/interface/ICurvePool.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(int128,int128,uint256,uint256)",
          "exchange(int128,int128,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurveV2Pool.sol:ICurveV2Pool": {
        "src": "contracts/interface/ICurveV2Pool.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(uint256,uint256,uint256,uint256)",
          "exchange(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IOneInchPool.sol:IOneInchPool": {
        "src": "contracts/interface/IOneInchPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(address,address,uint256,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ISwapRouterUniV3.sol:ISwapRouterUniV3": {
        "src": "contracts/interface/ISwapRouterUniV3.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETH.sol:IWETH": {
        "src": "contracts/interface/IWETH.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETHGateway.sol:IWETHGateway": {
        "src": "contracts/interface/IWETHGateway.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "depositETH(address,address,uint16)",
          "withdrawETH(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IZeroxV2.sol:IZeroxV2": {
        "src": "contracts/interface/IZeroxV2.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "marketSellOrdersNoThrow(struct LibOrderV2.Order[],uint256,bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IZeroxV4.sol:IZeroxV4": {
        "src": "contracts/interface/IZeroxV4.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "fillRfqOrder((address,address,uint128,uint128,address,address,address,bytes32,uint64,uint256),(uint8,uint8,bytes32,bytes32),uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/LibBytes.sol:LibBytes": {
        "src": "contracts/library/LibBytes.sol:21",
        "version": {
          "withMetadata": "5cd748fc6431006fc8c9777d2ef1dcd8988adefa5e391c51f8deb9ce2ba4fbdc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/LibBytes.sol:LibBytes",
          "contracts/library/LibBytesRichErrors.sol:LibBytesRichErrors",
          "contracts/library/LibRichErrors.sol:LibRichErrors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/LibBytesRichErrors.sol:LibBytesRichErrors": {
        "src": "contracts/library/LibBytesRichErrors.sol:17",
        "version": {
          "withMetadata": "fbee9838ec2d4fec413b65fde07f86f5e9bd816305a511cae9ff58e45978adf3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/LibRichErrors.sol:LibRichErrors": {
        "src": "contracts/library/LibRichErrors.sol:17",
        "version": {
          "withMetadata": "4878c56ab6d96200d2db4d92dad3071ca4fd70321510afdbf061bfe40ca541d6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "a37ecacb5ca46fad2d7b15c7bf6de8a667b4298174511c187feb2f360a520016",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/oneinch/Coin98OneInch.sol:Coin98ZeroxV2": {
        "src": "contracts/oneinch/Coin98OneInch.sol:6",
        "version": {
          "withMetadata": "92bfb7e2d73983c96704e52eb960106cffb86bdb6a674d1ed18b4ab79539aeea",
          "withoutMetadata": "8f3492c90b0c35f24ae0fed9c5b15da2bcb85b1781663881310bc509c740f0b6",
          "linkedWithoutMetadata": "8f3492c90b0c35f24ae0fed9c5b15da2bcb85b1781663881310bc509c740f0b6"
        },
        "inherit": [
          "contracts/oneinch/OneInchPool.sol:OneInchPool"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/oneinch/OneInchPool.sol:OneInchPool": {
        "src": "contracts/oneinch/OneInchPool.sol:9",
        "version": {
          "withMetadata": "e4361219fa6dd765df28a3e00374854b0cfc2f32e3a1bbde534aee4922d12de5",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/utils/WethProvider.sol:WethProvider": {
        "src": "contracts/utils/WethProvider.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethProvider",
            "src": "contracts/utils/WethProvider.sol:7"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts/utils/WethProvider.sol:5"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:Executor": {
        "src": "contracts/Executor.sol:9",
        "version": {
          "withMetadata": "9caefa6bea4a2156257ed20de0e6da0f5bff6dca15d022cd58b6c5a1cce240ee",
          "withoutMetadata": "7e45454b361c838f051a6f374e9716ce7cd718a5ddd9c249327a99960147447f",
          "linkedWithoutMetadata": "7e45454b361c838f051a6f374e9716ce7cd718a5ddd9c249327a99960147447f"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "chainRouter(bytes[])",
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:SwapAdaptor": {
        "src": "contracts/Executor.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "34d722364ee41593c02a494ed6b067205a9e6db5c68ed6bb1b79525b02c05c07",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/Coin98CurveV2.sol:Coin98CurveV2": {
        "src": "contracts/CurveV2/Coin98CurveV2.sol:7",
        "version": {
          "withMetadata": "29286739b92de9b1d9dc5cbb8ff98ec1735a4584490f0e7b24116bd544a9aea9",
          "withoutMetadata": "6fcc6ea71ab3882db1b98f81368380fbfc2024f57c127b90ee2c100415386288",
          "linkedWithoutMetadata": "6fcc6ea71ab3882db1b98f81368380fbfc2024f57c127b90ee2c100415386288"
        },
        "inherit": [
          "contracts/CurveV2/CurveV2.sol:CurveV2",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98CurveV2",
            "src": "contracts/CurveV2/Coin98CurveV2.sol:20"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/CurveV2.sol:CurveV2": {
        "src": "contracts/CurveV2/CurveV2.sol:8",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "34d722364ee41593c02a494ed6b067205a9e6db5c68ed6bb1b79525b02c05c07",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurveV2Pool.sol:ICurveV2Pool": {
        "src": "contracts/interface/ICurveV2Pool.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(uint256,uint256,uint256,uint256)",
          "exchange(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETH.sol:IWETH": {
        "src": "contracts/interface/IWETH.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "9f7fd0ab9207a181fd92835adf4a531f95fb43000372a83df59917ba65159de0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/utils/WethProvider.sol:WethProvider": {
        "src": "contracts/utils/WethProvider.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethProvider",
            "src": "contracts/utils/WethProvider.sol:7"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts/utils/WethProvider.sol:5"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "34d722364ee41593c02a494ed6b067205a9e6db5c68ed6bb1b79525b02c05c07",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:10",
        "version": {
          "withMetadata": "f6478bcfc303584043d486efc6b0794d6d773040cfaf4e65f13ab388ee7328c0",
          "withoutMetadata": "c2d4df631da3f4f483a707b756317231f77bb7064aec8c6c60216cef08cb9858",
          "linkedWithoutMetadata": "c2d4df631da3f4f483a707b756317231f77bb7064aec8c6c60216cef08cb9858"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "token0",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:24"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:pairSwap": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "34d722364ee41593c02a494ed6b067205a9e6db5c68ed6bb1b79525b02c05c07",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:10",
        "version": {
          "withMetadata": "7a825bc7c09b63903010d9fa9b770390daefad3532b7d308ac8ce6358727a9c3",
          "withoutMetadata": "a80be80d778167e18c7dae3b16d0c45ef01514011248e39c38ab7cdc4a503867",
          "linkedWithoutMetadata": "a80be80d778167e18c7dae3b16d0c45ef01514011248e39c38ab7cdc4a503867"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "token0",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:24"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Coin98UniswapV2",
              "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:pairSwap": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:Executor": {
        "src": "contracts/Executor.sol:9",
        "version": {
          "withMetadata": "33c4b5b31051574b25048aad01079425226e35351b35b40100b7d78444d44818",
          "withoutMetadata": "0167a270635fd8f94186f85b86900b51554797cee3448f05e740d5a322d5b93a",
          "linkedWithoutMetadata": "0167a270635fd8f94186f85b86900b51554797cee3448f05e740d5a322d5b93a"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "chainRouter(bytes[])",
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:SwapAdaptor": {
        "src": "contracts/Executor.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "34d722364ee41593c02a494ed6b067205a9e6db5c68ed6bb1b79525b02c05c07",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:Executor": {
        "src": "contracts/Executor.sol:9",
        "version": {
          "withMetadata": "54898b3ed1c4d4c26f244a581ce0b37afa6afadc70505cf52a84c116d9b7edbc",
          "withoutMetadata": "a315722770edf85b7ba49c90f0023a3ad04e1fd61b08035ef4c559e875b6a362",
          "linkedWithoutMetadata": "a315722770edf85b7ba49c90f0023a3ad04e1fd61b08035ef4c559e875b6a362"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:SwapAdaptor": {
        "src": "contracts/Executor.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "34d722364ee41593c02a494ed6b067205a9e6db5c68ed6bb1b79525b02c05c07",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:DemoAdapter1": {
        "src": "contracts/DemoAdapter(Full).sol:28",
        "version": {
          "withMetadata": "d7aef85e14633337d8e7d25efeb7571c94d5cd24ecb792cc4f6ed24a8657f180",
          "withoutMetadata": "73be0c1ba392392c05f3177dcc7375f5960ed0204f03fd920fd0e68fe689c640",
          "linkedWithoutMetadata": "73be0c1ba392392c05f3177dcc7375f5960ed0204f03fd920fd0e68fe689c640"
        },
        "inherit": [
          "contracts/DemoAdapter(Full).sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapRoutes(uint256,address,address,bytes,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter1",
            "src": "contracts/DemoAdapter(Full).sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter(Full).sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter(Full).sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter(Full).sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:31"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:33"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:34"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:35"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Partner)1345_storage)",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)1345_storage)": {
              "label": "mapping(address => struct DemoAdapter1.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)1345_storage": {
              "label": "struct DemoAdapter1.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:EthReceiver": {
        "src": "contracts/DemoAdapter(Full).sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:IExecutor": {
        "src": "contracts/DemoAdapter(Full).sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter(Full).sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:SwapAdapter": {
        "src": "contracts/DemoAdapter(Full).sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "34d722364ee41593c02a494ed6b067205a9e6db5c68ed6bb1b79525b02c05c07",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "9f7fd0ab9207a181fd92835adf4a531f95fb43000372a83df59917ba65159de0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "34d722364ee41593c02a494ed6b067205a9e6db5c68ed6bb1b79525b02c05c07",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:6",
        "version": {
          "withMetadata": "a756bfa46dfc7649a90da96e6baf33b2bf9a180ec65215bb7fe25be24fae9bf6",
          "withoutMetadata": "d0867cfc465629218a091de58ff2aa0d046d7566bc9c666dcbb1ab4657cae712",
          "linkedWithoutMetadata": "d0867cfc465629218a091de58ff2aa0d046d7566bc9c666dcbb1ab4657cae712"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "34d722364ee41593c02a494ed6b067205a9e6db5c68ed6bb1b79525b02c05c07",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:6",
        "version": {
          "withMetadata": "689c0c6a442d14abbc85a5205b2190e94e64a40fa1329a67e62111feec0eb133",
          "withoutMetadata": "d257dfb99edf08c527666b44053baec5a75489f2e2b0a92467d9c4ae99dd9429",
          "linkedWithoutMetadata": "d257dfb99edf08c527666b44053baec5a75489f2e2b0a92467d9c4ae99dd9429"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "34d722364ee41593c02a494ed6b067205a9e6db5c68ed6bb1b79525b02c05c07",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:6",
        "version": {
          "withMetadata": "275d976bef320a3461724ca052b12e212abca549437d9364b3812379df777819",
          "withoutMetadata": "b2bcf4227b6f25fe3c55fc911e0c5bf9cb826ee2fbb17da02d975b95a21f06ca",
          "linkedWithoutMetadata": "b2bcf4227b6f25fe3c55fc911e0c5bf9cb826ee2fbb17da02d975b95a21f06ca"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "34d722364ee41593c02a494ed6b067205a9e6db5c68ed6bb1b79525b02c05c07",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:6",
        "version": {
          "withMetadata": "fdb3126acb0d0ba64024a932f5868c2ebbda6cb7be641bf3bed0fd1b165b92fa",
          "withoutMetadata": "b6871984d958faa4f0b997b0c1deea604375291ecff6b0054b0c57a9b0e71d7e",
          "linkedWithoutMetadata": "b6871984d958faa4f0b997b0c1deea604375291ecff6b0054b0c57a9b0e71d7e"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV1/BalancerV1.sol:BalancerV1": {
        "src": "contracts/BalancerV1/BalancerV1.sol:9",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV1/Coin98BalancerV1.sol:Coin98BalancerV1": {
        "src": "contracts/BalancerV1/Coin98BalancerV1.sol:4",
        "version": {
          "withMetadata": "30095a843280ca9e928dc3bc477439e8a984dce5d110c884e0aea2c1536872da",
          "withoutMetadata": "c07dbe617c1089559dffdd5520dfdd8c8211557300e504d881c5059cc8b0538e",
          "linkedWithoutMetadata": "c07dbe617c1089559dffdd5520dfdd8c8211557300e504d881c5059cc8b0538e"
        },
        "inherit": [
          "contracts/BalancerV1/BalancerV1.sol:BalancerV1",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98BalancerV1",
            "src": "contracts/BalancerV1/Coin98BalancerV1.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/BalancerV2.sol:BalancerV2": {
        "src": "contracts/BalancerV2/BalancerV2.sol:5",
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BalancerV2/Coin98BalancerV2.sol:Coin98BalancerV1": {
        "src": "contracts/BalancerV2/Coin98BalancerV2.sol:4",
        "version": {
          "withMetadata": "c8ec0d51d9b95d27da89e310ec658107235628ac34da43a271e6f87d5638bf5c",
          "withoutMetadata": "5690dd188345aec7ce97eeea29f72dad3785e7a2af2aa8b05637a6db69e5880e",
          "linkedWithoutMetadata": "5690dd188345aec7ce97eeea29f72dad3785e7a2af2aa8b05637a6db69e5880e"
        },
        "inherit": [
          "contracts/BalancerV2/BalancerV2.sol:BalancerV2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/Coin98CurveV2.sol:Coin98CurveV2": {
        "src": "contracts/CurveV2/Coin98CurveV2.sol:7",
        "version": {
          "withMetadata": "65dba509ab1d6292c93158c4fd04ddbcdfd9667a7a66333e2a46c825cc44e4a3",
          "withoutMetadata": "63ddb143932ea65dc079263aac08dd2f0583ade0b8b61d28100a0864cd453819",
          "linkedWithoutMetadata": "63ddb143932ea65dc079263aac08dd2f0583ade0b8b61d28100a0864cd453819"
        },
        "inherit": [
          "contracts/CurveV2/CurveV2.sol:CurveV2",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98CurveV2",
            "src": "contracts/CurveV2/Coin98CurveV2.sol:20"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/CurveV2.sol:CurveV2": {
        "src": "contracts/CurveV2/CurveV2.sol:8",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "34d722364ee41593c02a494ed6b067205a9e6db5c68ed6bb1b79525b02c05c07",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98UniswapV2": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:6",
        "version": {
          "withMetadata": "adba528fd4c564b63640f3804565c6ef5e208d0eb9af60d5df42ab65e44303ee",
          "withoutMetadata": "3d4e6a3bd9cde4a32e6339b338d7fe13c7e96dcab6922f0b1f3120b432ffdd36",
          "linkedWithoutMetadata": "3d4e6a3bd9cde4a32e6339b338d7fe13c7e96dcab6922f0b1f3120b432ffdd36"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/UniswapV3/Coin98UniswapV3.sol:Coin98UniswapV3": {
        "src": "contracts/UniswapV3/Coin98UniswapV3.sol:6",
        "version": {
          "withMetadata": "9d2bb0ae451cf3091b83c433cf2a6701de9d56722512474e4b5cb0e5309a33e3",
          "withoutMetadata": "8ad922d6e403fb212ed9a37878ab8893eef2001dabc5add492e24348a1365097",
          "linkedWithoutMetadata": "8ad922d6e403fb212ed9a37878ab8893eef2001dabc5add492e24348a1365097"
        },
        "inherit": [
          "contracts/UniswapV3/UniswapV3.sol:UniswapV3",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98UniswapV3",
            "src": "contracts/UniswapV3/Coin98UniswapV3.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/UniswapV3/UniswapV3.sol:UniswapV3": {
        "src": "contracts/UniswapV3/UniswapV3.sol:9",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IAsset.sol:IAsset": {
        "src": "contracts/interface/IAsset.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerPool.sol:IBalancerPool": {
        "src": "contracts/interface/IBalancerPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactAmountIn(address,uint256,address,uint256,uint256)",
          "swapExactAmountOut(address,uint256,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerProxy.sol:IBalancerProxy": {
        "src": "contracts/interface/IBalancerProxy.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "batchSwapExactIn(struct IBalancerProxy.Swap[],address,address,uint256,uint256)",
          "batchSwapExactOut(struct IBalancerProxy.Swap[],address,address,uint256)",
          "batchEthInSwapExactIn(struct IBalancerProxy.Swap[],address,uint256)",
          "batchEthOutSwapExactIn(struct IBalancerProxy.Swap[],address,uint256,uint256)",
          "batchEthInSwapExactOut(struct IBalancerProxy.Swap[],address)",
          "batchEthOutSwapExactOut(struct IBalancerProxy.Swap[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerV2.sol:IBalancerV2": {
        "src": "contracts/interface/IBalancerV2.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address payable,bool),uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurveV2Pool.sol:ICurveV2Pool": {
        "src": "contracts/interface/ICurveV2Pool.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(uint256,uint256,uint256,uint256)",
          "exchange(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ISwapRouterUniV3.sol:ISwapRouterUniV3": {
        "src": "contracts/interface/ISwapRouterUniV3.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETH.sol:IWETH": {
        "src": "contracts/interface/IWETH.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "9f7fd0ab9207a181fd92835adf4a531f95fb43000372a83df59917ba65159de0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/utils/WethProvider.sol:WethProvider": {
        "src": "contracts/utils/WethProvider.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethProvider",
            "src": "contracts/utils/WethProvider.sol:7"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts/utils/WethProvider.sol:5"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:Executor": {
        "src": "contracts/Executor.sol:9",
        "version": {
          "withMetadata": "802f74f7efda9b801da2eb270a581ef0e82f1ee601655e3675d38b16b442ef63",
          "withoutMetadata": "5125a531f0496c661211d580edffc52485679648949cb0f31f14c5288cef0d9d",
          "linkedWithoutMetadata": "5125a531f0496c661211d580edffc52485679648949cb0f31f14c5288cef0d9d"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Executor.sol:SwapAdaptor": {
        "src": "contracts/Executor.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "34d722364ee41593c02a494ed6b067205a9e6db5c68ed6bb1b79525b02c05c07",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap(V2).sol:Coin98Uniswap": {
        "src": "contracts/Uniswap/Coin98Uniswap(V2).sol:6",
        "version": {
          "withMetadata": "b672c41d9f938ff95a0fda8be7fced500ea0f2e40a0eb3895f6b62fdac103d21",
          "withoutMetadata": "21c8491970559ae179e987e5a6c2d891c75222abe7a8250d16b2f4e778ad936d",
          "linkedWithoutMetadata": "21c8491970559ae179e987e5a6c2d891c75222abe7a8250d16b2f4e778ad936d"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:DemoAdapter1": {
        "src": "contracts/DemoAdapter(Full).sol:28",
        "version": {
          "withMetadata": "89299be5938ced3a7d544d4c44072226d9f1848aadfb3a57d4dc5a693b322ac1",
          "withoutMetadata": "73be0c1ba392392c05f3177dcc7375f5960ed0204f03fd920fd0e68fe689c640",
          "linkedWithoutMetadata": "73be0c1ba392392c05f3177dcc7375f5960ed0204f03fd920fd0e68fe689c640"
        },
        "inherit": [
          "contracts/DemoAdapter(Full).sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapRoutes(uint256,address,address,bytes,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter1",
            "src": "contracts/DemoAdapter(Full).sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter(Full).sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter(Full).sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter(Full).sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:31"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:33"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:34"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:35"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Partner)1345_storage)",
              "contract": "DemoAdapter1",
              "src": "contracts/DemoAdapter(Full).sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)1345_storage)": {
              "label": "mapping(address => struct DemoAdapter1.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)1345_storage": {
              "label": "struct DemoAdapter1.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:EthReceiver": {
        "src": "contracts/DemoAdapter(Full).sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:IExecutor": {
        "src": "contracts/DemoAdapter(Full).sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter(Full).sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:SwapAdapter": {
        "src": "contracts/DemoAdapter(Full).sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "34d722364ee41593c02a494ed6b067205a9e6db5c68ed6bb1b79525b02c05c07",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "9f7fd0ab9207a181fd92835adf4a531f95fb43000372a83df59917ba65159de0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "68c52b222baa9bb1fafff869c70416e70edca7aef97e1f309be0fb5b6e8f7249",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "69dce1e7c71acd4367461194620d86e31aa6e2f0324f59e0fa7b023c60e53568",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "d64563f70f252580d8904ff0d0f0d76ac224a4229a327c1c5d5a3b4ab1ddf323",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV2/Coin98ZeroxV2.sol:Coin98ZeroxV2": {
        "src": "contracts/0xV2/Coin98ZeroxV2.sol:6",
        "version": {
          "withMetadata": "e7f3fb31113bbdf2a95e265921c712918760c6d8fc8ca1f718514950feb51742",
          "withoutMetadata": "9d53ef4c54c0875b829e982d97747deb6a1978ecc852f3bd4a3c616af2c437fa",
          "linkedWithoutMetadata": "9d53ef4c54c0875b829e982d97747deb6a1978ecc852f3bd4a3c616af2c437fa"
        },
        "inherit": [
          "contracts/0xV2/ZeroxV2.sol:ZeroxV2",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address,address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98ZeroxV2",
            "src": "contracts/0xV2/Coin98ZeroxV2.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV2/LibOrderV2.sol:LibOrderV2": {
        "src": "contracts/0xV2/LibOrderV2.sol:4",
        "version": {
          "withMetadata": "2eb70bb2e07d645fa2717d03e976647ad5c2403959721fc38d783234c084f34b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV2/ZeroxV2.sol:ZeroxV2": {
        "src": "contracts/0xV2/ZeroxV2.sol:9",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "contracts/library/LibBytes.sol:LibBytes",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ZeroxV2",
            "src": "contracts/0xV2/ZeroxV2.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "erc20Proxy",
            "src": "contracts/0xV2/ZeroxV2.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV4/Coin98ZeroxV4.sol:Coin98ZeroxV4": {
        "src": "contracts/0xV4/Coin98ZeroxV4.sol:6",
        "version": {
          "withMetadata": "03189b574d9c084f6a44e6ba26544fc5c9850a1c2862a14f0ec1318910851cb8",
          "withoutMetadata": "97dcb983a078b91628e197f3e6091443d4b47ff28e1531245a2ff3b8ec3c377a",
          "linkedWithoutMetadata": "97dcb983a078b91628e197f3e6091443d4b47ff28e1531245a2ff3b8ec3c377a"
        },
        "inherit": [
          "contracts/0xV4/ZeroxV4.sol:ZeroxV4",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98ZeroxV4",
            "src": "contracts/0xV4/Coin98ZeroxV4.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV4/LibOrderV4.sol:LibOrderV4": {
        "src": "contracts/0xV4/LibOrderV4.sol:4",
        "version": {
          "withMetadata": "e8e3c627924fd7e05e65a0c6d05d700a70a6bbc026b9fa159b5455e23df29f05",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/0xV4/ZeroxV4.sol:ZeroxV4": {
        "src": "contracts/0xV4/ZeroxV4.sol:9",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AaveeV2/AaveeV2.sol:Aavee2": {
        "src": "contracts/AaveeV2/AaveeV2.sol:7",
        "version": {
          "withMetadata": "9de5bcba38f285a2aab01b0d13488cb6b5b419c797cbcb3765f9b0ec8fc742b4",
          "withoutMetadata": "9c7e483cd8c39dffbb3a614a3242a0fe1bcbcfbbf93f318119eb10b63df48d3c",
          "linkedWithoutMetadata": "9c7e483cd8c39dffbb3a614a3242a0fe1bcbcfbbf93f318119eb10b63df48d3c"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(uint16,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Aavee2",
            "src": "contracts/AaveeV2/AaveeV2.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "refCode",
            "src": "contracts/AaveeV2/AaveeV2.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "lendingPool",
            "src": "contracts/AaveeV2/AaveeV2.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "wethGateway",
            "src": "contracts/AaveeV2/AaveeV2.sol:15"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AaveeV2/Coin98AaveeV2.sol:Coin98AaveeV2": {
        "src": "contracts/AaveeV2/Coin98AaveeV2.sol:6",
        "version": {
          "withMetadata": "ec3bc25fe234cbcc4e66be1fe8dcb6e958f72d716de6d6f6e5851b0a291b067a",
          "withoutMetadata": "e046ad4e64f66fda14c985e957f6c0f7ecbd292d1b2ec0d31a90211e210a7507",
          "linkedWithoutMetadata": "e046ad4e64f66fda14c985e957f6c0f7ecbd292d1b2ec0d31a90211e210a7507"
        },
        "inherit": [
          "contracts/AaveeV2/AaveeV2.sol:Aavee2"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(uint16,address,address)",
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98AaveeV2",
            "src": "contracts/AaveeV2/Coin98AaveeV2.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Balancer/Balancer.sol:Balancer": {
        "src": "contracts/Balancer/Balancer.sol:9",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Balancer/Coin98Balancer.sol:Coin98Balancer": {
        "src": "contracts/Balancer/Coin98Balancer.sol:4",
        "version": {
          "withMetadata": "e4a4342ef708bd5d2da1c6c424d4a0f46265ce84004ce744d7ee650fbdaa62b9",
          "withoutMetadata": "bed96a7c5789259e1eaf448f341263f13d25629cd1f224846a4c0c6be7965f8c",
          "linkedWithoutMetadata": "bed96a7c5789259e1eaf448f341263f13d25629cd1f224846a4c0c6be7965f8c"
        },
        "inherit": [
          "contracts/Balancer/Balancer.sol:Balancer",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98Balancer",
            "src": "contracts/Balancer/Coin98Balancer.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Curve/Coin98Curve.sol:Coin98Adapter1": {
        "src": "contracts/Curve/Coin98Curve.sol:3",
        "version": {
          "withMetadata": "1aa29eab2d37601bf8fa22d24b8b913fc6795e01b72624645f9e587b8b03f79e",
          "withoutMetadata": "27675f3b7ee3a03d8968d81edae01e4e343aa705915d44b72803d418e27e5ea4",
          "linkedWithoutMetadata": "27675f3b7ee3a03d8968d81edae01e4e343aa705915d44b72803d418e27e5ea4"
        },
        "inherit": [
          "contracts/Curve/curve.sol:Curve"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Curve/curve.sol:Curve": {
        "src": "contracts/Curve/curve.sol:8",
        "version": {
          "withMetadata": "4576e30f445626933d480beed91e3a0b5c4e82c359123336c16450ddf599b6df",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/Coin98CurveV2.sol:Coin98CurveV2": {
        "src": "contracts/CurveV2/Coin98CurveV2.sol:7",
        "version": {
          "withMetadata": "5ecab149422e0a0acc273a1c08cd9110603591f24899b70775232042da37a72f",
          "withoutMetadata": "177134f7368af994754bacfb1820492622fc57b598f32e32d0271d8ffecd5b10",
          "linkedWithoutMetadata": "177134f7368af994754bacfb1820492622fc57b598f32e32d0271d8ffecd5b10"
        },
        "inherit": [
          "contracts/CurveV2/CurveV2.sol:CurveV2",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98CurveV2",
            "src": "contracts/CurveV2/Coin98CurveV2.sol:20"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/CurveV2/CurveV2.sol:CurveV2": {
        "src": "contracts/CurveV2/CurveV2.sol:8",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:DemoAdapter": {
        "src": "contracts/DemoAdapter(Full).sol:28",
        "version": {
          "withMetadata": "81b2716a6c41b41242e89b04fc24345ec040a48255b233a5c1d1590fb2a3b530",
          "withoutMetadata": "73be0c1ba392392c05f3177dcc7375f5960ed0204f03fd920fd0e68fe689c640",
          "linkedWithoutMetadata": "73be0c1ba392392c05f3177dcc7375f5960ed0204f03fd920fd0e68fe689c640"
        },
        "inherit": [
          "contracts/DemoAdapter(Full).sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapRoutes(uint256,address,address,bytes,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter",
            "src": "contracts/DemoAdapter(Full).sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter(Full).sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter(Full).sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter(Full).sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter(Full).sol:31"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter(Full).sol:33"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter(Full).sol:34"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter(Full).sol:35"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Partner)3278_storage)",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter(Full).sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)3278_storage)": {
              "label": "mapping(address => struct DemoAdapter.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)3278_storage": {
              "label": "struct DemoAdapter.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:EthReceiver": {
        "src": "contracts/DemoAdapter(Full).sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:IExecutor": {
        "src": "contracts/DemoAdapter(Full).sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execution(bytes,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter(Full).sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter(Full).sol:SwapAdapter": {
        "src": "contracts/DemoAdapter(Full).sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:DemoAdapter": {
        "src": "contracts/DemoAdapter.sol:25",
        "version": {
          "withMetadata": "4f9a802807c754d7fe1459c991a011940d5c5073cb2fc9b992b4702c0ac650db",
          "withoutMetadata": "4b123a2043161b6ec04046d6e08038ecc25e2d1bbe58a5f6e3abb12fb4000b46",
          "linkedWithoutMetadata": "4b123a2043161b6ec04046d6e08038ecc25e2d1bbe58a5f6e3abb12fb4000b46"
        },
        "inherit": [
          "contracts/DemoAdapter.sol:EthReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "(address)",
          "setPartner(address,string,bool)",
          "setProtocolFee(uint256)",
          "setPartnerFee(uint256)",
          "swapRoutes(uint256,address,address,(address[],uint256[],uint256[],uint256[],bytes[]))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoAdapter",
            "src": "contracts/DemoAdapter.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PARTNER_FEE",
            "src": "contracts/DemoAdapter.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PROTOCOL_FEE",
            "src": "contracts/DemoAdapter.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Percent",
            "src": "contracts/DemoAdapter.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "PARTNER_FEE",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:28"
            },
            {
              "label": "PROTOCOL_FEE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:30"
            },
            {
              "label": "Percent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:31"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:32"
            },
            {
              "label": "Partners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Partner)3746_storage)",
              "contract": "DemoAdapter",
              "src": "contracts/DemoAdapter.sol:62"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Partner)3746_storage)": {
              "label": "mapping(address => struct DemoAdapter.Partner)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Partner)3746_storage": {
              "label": "struct DemoAdapter.Partner",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:EthReceiver": {
        "src": "contracts/DemoAdapter.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:PartnerSuperLink": {
        "src": "contracts/DemoAdapter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PARTNER_FEE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/DemoAdapter.sol:SwapAdapter": {
        "src": "contracts/DemoAdapter.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Helper.sol:TransferHelper": {
        "src": "contracts/Helper.sol:4",
        "version": {
          "withMetadata": "34d722364ee41593c02a494ed6b067205a9e6db5c68ed6bb1b79525b02c05c07",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Uniswap/Coin98Uniswap.sol:Coin98Uniswap": {
        "src": "contracts/Uniswap/Coin98Uniswap.sol:6",
        "version": {
          "withMetadata": "090c38bf87edcd4cffdb9af8181124ce1bfa2030c3253a8d33d904cd33271bac",
          "withoutMetadata": "21c8491970559ae179e987e5a6c2d891c75222abe7a8250d16b2f4e778ad936d",
          "linkedWithoutMetadata": "21c8491970559ae179e987e5a6c2d891c75222abe7a8250d16b2f4e778ad936d"
        },
        "inherit": [],
        "libraries": [
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/UniswapV3/Coin98UniswapV3.sol:Coin98UniswapV3": {
        "src": "contracts/UniswapV3/Coin98UniswapV3.sol:6",
        "version": {
          "withMetadata": "c47c0a31bbebd2dce5b696ff96951ddea4dbafab43066ee86041b48875dc6186",
          "withoutMetadata": "835cfd351fe7c55e872185c70c423ecfdb8428c150aa56d7ae6d518bfb1bc3bd",
          "linkedWithoutMetadata": "835cfd351fe7c55e872185c70c423ecfdb8428c150aa56d7ae6d518bfb1bc3bd"
        },
        "inherit": [
          "contracts/UniswapV3/UniswapV3.sol:UniswapV3",
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [
          "(address)",
          "swap(uint256,uint256,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin98UniswapV3",
            "src": "contracts/UniswapV3/Coin98UniswapV3.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/UniswapV3/UniswapV3.sol:UniswapV3": {
        "src": "contracts/UniswapV3/UniswapV3.sol:9",
        "inherit": [
          "contracts/utils/WethProvider.sol:WethProvider"
        ],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IAaveLendingPool.sol:IAaveLendingPool": {
        "src": "contracts/interface/IAaveLendingPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,uint256,address,uint16)",
          "withdraw(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IAdapter.sol:IAdapter": {
        "src": "contracts/interface/IAdapter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerPool.sol:IBalancerPool": {
        "src": "contracts/interface/IBalancerPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactAmountIn(address,uint256,address,uint256,uint256)",
          "swapExactAmountOut(address,uint256,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IBalancerProxy.sol:IBalancerProxy": {
        "src": "contracts/interface/IBalancerProxy.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "batchSwapExactIn(struct IBalancerProxy.Swap[],address,address,uint256,uint256)",
          "batchSwapExactOut(struct IBalancerProxy.Swap[],address,address,uint256)",
          "batchEthInSwapExactIn(struct IBalancerProxy.Swap[],address,uint256)",
          "batchEthOutSwapExactIn(struct IBalancerProxy.Swap[],address,uint256,uint256)",
          "batchEthInSwapExactOut(struct IBalancerProxy.Swap[],address)",
          "batchEthOutSwapExactOut(struct IBalancerProxy.Swap[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurveEthPool.sol:ICurveEthPool": {
        "src": "contracts/interface/ICurveEthPool.sol:2",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange(int128,int128,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurvePool.sol:ICurvePool": {
        "src": "contracts/interface/ICurvePool.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(int128,int128,uint256,uint256)",
          "exchange(int128,int128,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ICurveV2Pool.sol:ICurveV2Pool": {
        "src": "contracts/interface/ICurveV2Pool.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(uint256,uint256,uint256,uint256)",
          "exchange(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IMstable.sol:IMStable": {
        "src": "contracts/interface/IMstable.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256,uint256,address)",
          "swap(address,address,uint256,uint256,address)",
          "redeem(address,uint256,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IOneInchPool.sol:IOneInchPool": {
        "src": "contracts/interface/IOneInchPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(address,address,uint256,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/ISwapRouterUniV3.sol:ISwapRouterUniV3": {
        "src": "contracts/interface/ISwapRouterUniV3.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETH.sol:IWETH": {
        "src": "contracts/interface/IWETH.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IWETHGateway.sol:IWETHGateway": {
        "src": "contracts/interface/IWETHGateway.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "depositETH(address,address,uint16)",
          "withdrawETH(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IZeroxV2.sol:IZeroxV2": {
        "src": "contracts/interface/IZeroxV2.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "marketSellOrdersNoThrow(struct LibOrderV2.Order[],uint256,bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/interface/IZeroxV4.sol:IZeroxV4": {
        "src": "contracts/interface/IZeroxV4.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "fillRfqOrder((address,address,uint128,uint128,address,address,address,bytes32,uint64,uint256),(uint8,uint8,bytes32,bytes32),uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/LibBytes.sol:LibBytes": {
        "src": "contracts/library/LibBytes.sol:21",
        "version": {
          "withMetadata": "5cd748fc6431006fc8c9777d2ef1dcd8988adefa5e391c51f8deb9ce2ba4fbdc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/LibBytes.sol:LibBytes",
          "contracts/library/LibBytesRichErrors.sol:LibBytesRichErrors",
          "contracts/library/LibRichErrors.sol:LibRichErrors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/LibBytesRichErrors.sol:LibBytesRichErrors": {
        "src": "contracts/library/LibBytesRichErrors.sol:17",
        "version": {
          "withMetadata": "fbee9838ec2d4fec413b65fde07f86f5e9bd816305a511cae9ff58e45978adf3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/LibRichErrors.sol:LibRichErrors": {
        "src": "contracts/library/LibRichErrors.sol:17",
        "version": {
          "withMetadata": "4878c56ab6d96200d2db4d92dad3071ca4fd70321510afdbf061bfe40ca541d6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/library/Utils.sol:Utils": {
        "src": "contracts/library/Utils.sol:17",
        "version": {
          "withMetadata": "9f7fd0ab9207a181fd92835adf4a531f95fb43000372a83df59917ba65159de0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/Helper.sol:TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/oneinch/Coin98OneInch.sol:Coin98ZeroxV2": {
        "src": "contracts/oneinch/Coin98OneInch.sol:6",
        "version": {
          "withMetadata": "fe828d227d0ed066fe1b09c15e90f8a83b10e474d272aee0720bc57f25cc4157",
          "withoutMetadata": "8f3492c90b0c35f24ae0fed9c5b15da2bcb85b1781663881310bc509c740f0b6",
          "linkedWithoutMetadata": "8f3492c90b0c35f24ae0fed9c5b15da2bcb85b1781663881310bc509c740f0b6"
        },
        "inherit": [
          "contracts/oneinch/OneInchPool.sol:OneInchPool"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/oneinch/OneInchPool.sol:OneInchPool": {
        "src": "contracts/oneinch/OneInchPool.sol:9",
        "version": {
          "withMetadata": "3fd155e6fb547ceeea61a11d4deaa591d6c3af8f7898a6754b13e01284c5f6af",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [
          "contracts/library/Utils.sol:Utils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      },
      "contracts/utils/WethProvider.sol:WethProvider": {
        "src": "contracts/utils/WethProvider.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethProvider",
            "src": "contracts/utils/WethProvider.sol:7"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts/utils/WethProvider.sol:5"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.4"
      }
    }
  ]
}